Changes in 2.5.9:
  o Bug Fixes:
    * More robust fix for the "schema has changed" error that could
      occur when concurrent queries happen during an update.

Changes in 2.5.8:
  o Bug Fixes:
    * Fixed issues with unicode when scanning Python 3 files (#4)
    * Strip interpreter and version from python dep info when scanning
      compiled Python 3 files (#5)
    * Fixed "schema has changed" error while updating from versions
      prior to 2.5.7 (#7)
    * When querying for a trove via a label, findTroves would return a
      TroveTuple object. However, when querying using a full version
      string, a plain tuple would be returned. This inconsistency has
      been fixed by always returning a TroveTuple object. (CNY-3889)

Changes in 2.5.7:
  o New Features:
    * Attempt to restart an interrupted download instead of raising a
      'changeset was truncated in transit' error. The newly added
      downloadAttempts, downloadRetryThreshold, and downloadRetryTrim
      configuration options govern this behavior. (CNY-3886)
    * Add config options for selecting default group and factory recipe
      templates (CNY-3887)
    * Improve update speed for troves with a large quantity of unchanged
      files.
    * Mirroring to multiple targets now operates concurrently across all
      targets rather than sequentially.

  o Bug Fixes:
    * Fixed crash when using saved passwords after the session keyring
      was revoked. (CNY-3858)
    * Cached passwords are saved in the per-user keyring instead of the
      per-session keyring. (CNY-3858)
    * Introduce versioned RPM dependencies for any require or provide
      that has an exact version. This behavior can be disabled by
      setting the 'enableRPMVerisonDeps' config option to False.
      (CNY-3882)
    * Fixed capsule postinstall scripts failing if they referenced a
      shared file being preserved during the same job. For example,
      installing a library that calls ldconfig in the same job as
      installing glibc.i686 alongside glibc.x86_64. (CNY-3884)
    * Fixed updating encapsulated and native packages which move a file
      across a symlinked directory, especially in the case of UsrMove.
      (CNY-3885)
    * Fixed error when updating binaries with out-of-date prelinks.

  o Internal Changes:
    * The makefile has been updated to avoid running kidc when running
      'make install' with 'NO_KID=1'. (CNY-3887)

Changes in 2.5.6:
  o Bug Fixes:
    * Interrupting an update with Ctrl-C during "Committing database
      transaction" no longer results in the filesystem journal being
      rolled back after the database has already committed. (CNY-3106)
    * Fixed getChangeSetSize failing when given a job containing
      erasures. (CNY-3876)
    * Fixed a "pathId not in changeset" crash when updating a trove
      across labels after local filesystem file types were changed.
      (CNY-3877)
    * Allow None types when serializing update jobs. (CNY-3879)
    * Fixed a race condition in standalone proxy caches that could cause
      a crash when three or more clients requested the same changeset
      simultaneously. (CNY-3880)
    * Fixed "conary repair" crashing when a config file was replaced by
      a symlink. (CNY-3881)

  o Internal Changes:
    * Committing to repositories running Conary older than 2.1.0 is no
      longer supported.
    * Removed support for mod_python in the repository. Use a WSGI
      server such as gunicorn or uwsgi.

Changes in 2.5.5:
  o New Features:
    * Added a new repository content store type 'flat'. In this
      configuration contents are stored without any intermediate
      directories, which may improve access times and will improve
      sequential access by e.g. backups. To use it, use the syntax
      "contentsDir flat /path/to/store". (CNY-2406)
    * The time at which a trove was committed is now shown in "conary rq
      --debug --info". It is also shown without --debug for source
      troves. (CNY-3487)
    * Added a new 'subPackages' troveinfo that enumerates the names of
      packages created via PackageSpec and groups created via
      createGroup from the same source. Query, repquery, and
      showchangeset commands with the --info and --debug flag set will
      display the list of subpackages.

  o Bug Fixes:
    * The online help for GroupSetRecipe has been fixed to refer to the
      CML method that exists, rather than the SystemModel method that
      does not. (CNY-3868)
    * Fixed crash in GroupSetRecipe when using an empty find()
      (CNY-3872)

  o Internal Changes:
    * When committing changesets to a repository, regular contents are
      written before the database operations begin. This avoids holding
      the commit lock any longer than necessary.
    * Upgraded the embedded SQLite version to 3.8.7.1

Changes in 2.5.4:
  o New Features:
    * Progress information is no longer emitted when downloading
      ephemeral sources during a cook. This keeps logs from being
      bloated when using very large sources. (CNY-3865)
    * Add createAppOnlyArchive script for creating archives that could
      be used in an App Only deployment.
    * r.MakeInstall now takes a makeName argument for overriding the
      name of the make binary. Additionally, a makeName macro may be
      specified to override the default make binary used for both r.Make
      and r.MakeInstall.
    * Added cscache hit/miss counters to the proxy.
    * Minor performance improvements for updates.
    * Add an architecture configuration for i86pc (Solaris x86)
    * Allow tar binary name to be overriden by the tar macro.

  o Bug Fixes:
    * Conary no longer fails to load user/group information on platforms
      where uid 0 or gid 0 are not root. (CNY-3867)
    * Fixed applying updates with a configuration of 'dbPath :memory:'
      always failing with a permission error.
    * Policy no longer fails a build if /etc/ld.so.conf doesn't exist.

  o Internal Changes:
    * When running the test suite, if the python executable being used
      does not have cap_sys_chroot, skip the capsule tests that require
      cap_sys_chroot and print a message documenting how to enable those
      tests.
    * Define a MIN C macro for portabilty to Solaris.
    * Switch install, sed, cp, and make calls to use Makefile macros for
      portabilty to platforms that rename the GNU versions of those
      utilities.
    * Switch to using os.setpgid when configuring the build process
      instead of os.setpgrp because setpgrp creates a new session on
      Solaris.

Changes in 2.5.3:
  o New Features:
    * Key/Value metadata is no longer copied forward during the build
      process. To re-enable this behavior remove 'keyValue' from
      r.metadataSkipSet. (CNY-3854)
    * Add a new JsonUpdateCallback class that produces json-formatted
      output. Conary commands that use an UpdateCallback now take a
      --json flag to turn on json output (CNY-3855)
    * Disabled commitRelativeChangeset by default. This may improve the
      reliability of very large cooks. (CNY-3856)
    * Added support for LZO compression in sources.

  o Bug Fixes:
    * Fixed system-model updates doing pairs of erase/install operations
      instead of updates for all troves pulled in as dependencies
      (CNY-3841)
    * Some truncated gzip files no longer abort builds due to uncaught
      struct.error exception (CNY-3852)
    * 'conary rq' now emits a helpful error message instead of crashing
      when installLabelPath is not defined. (CNY-3853)
    * conarycfg: fixed parsing of repositoryMap scaling exponentially
      with the number of entries (CNY-3857)
    * Fixed 'buildlabel' macro not being set during initial checkin of a
      recipe

  o Internal Changes:
    * The includeConfigFile directive now normalizes relative paths and
      URLs. This improves compatibility with various types of web
      services.

Changes in 2.5.2:
  o New Features:
    * Added an updated version of the Conary introductory technical
      paper as doc/ConaryTechnology.fodt

  o Bug Fixes:
    * Fixed being unable to create roles via the web interface.
      (CNY-3837)
    * Fixed performance regression when committing to a very large
      repository. (CNY-3834)
    * Fixed model cache corruption when the system-model contained
      'patch' operations. (CNY-3836)
    * lookaside: fix sourceSearchDir always missing autosourced files
      (CNY-3845)

Changes in 2.5.1:
  o New Features:
    * The mirror process can now build bigger changesets, which slightly
      speeds up mirror jobs.  If configured using the new 'splitNodes
      False' option, the mirror can commit multiple versions of a trove
      at once, although doing so on an older repository will cause a
      crash.
    * Minor performance improvements when committing changesets.
    * Repositories can now accept changesets containing multiple
      versions of the same trove.
    * The Python dep analyzer is now compatible with Python 3, but no
      longer compatible with Python 2.4 (CNY-3828)

  o Bug Fixes:
    * Fixed mirror-mode changesets always including all file contents,
      instead of only those files that have changed. (CNY-3822)
    * Capsule synchronization no longer fails if a RPM contains a
      symlink but the filesystem contains a different type of file
      instead. (CNY-3823)
    * Fixed default userinfo handler crashing when malformed lines (e.g.
      comments) are present in passwd and group files. (CNY-3824)
    * A bug that caused erroneous Insufficient Permission errors when
      authenticating via an entitlement has been fixed. (CNY-3827)
    * Fixed a long-standing caching bug in which a system-model update
      would fail with unresolved dependencies that were already
      satisfied by installed troves. (CNY-3770)

Changes in 2.5.0:
  o New Features:
    * Significant performance improvements when working with
      configuration objects. Configuration metadata, such as the
      definition of each option, is now processed at import time and not
      each time the configuration is instantiated or copied.
    * Dropped support for Python 2.4. Conary now requires Python 2.6 or
      later.
    * Added systemId header to repository requests for client tracking.
      (CNY-3806)

  o API Changes:
    * Changesets are now inlined within the HTTP response when doing a
      getChangeSet call to the repository. This improves compatibility
      with load balancers and round-robin configurations by removing the
      need for a second request. (CNY-3819)
    * The 'getLog' web call has been removed
    * The 'closed' repository configuration option has been removed

  o Bug Fixes:
    * Fixed preinstall and preupdate scripts not running during system-
      model updates. (CNY-3803)
    * Fixed preserveOwnership not applying to files and directories with
      spaces in the name. (CNY-3789)
    * "conary rdiff --diff" no longer crashes when a binary file changes
      to a config file (CNY-3804)
    * "conary updateall" no longer fails if snapshotted troves in the
      system-model have been markremoved or otherwise cannot be found.
      (CNY-3796)
    * Fixed derived packages inheriting all file flavor instruction
      sets, not just those that are compatible with the build flavor.
      (CNY-3807)
    * Appropriately attach key/value metadata to troves through the
      r._addMetadataItem recipe method. (CNY-3809)
    * Command line options can now be defined using a dictionary-like
      syntax, which allows for default values too. (CNY-3810) (CNY-3810)
    * Negative cache entries are no longer used when there is only one
      URL to fetch for a source action. (CNY-3816)
    * Fixed a few instances where httpHeaders was not correctly passed
      when using a source action.
    * Basic auth is now always sent when fetching a source, rather than
      waiting for a 401 status code
    * GroupSetRecipe now defines an instance of the findFile interface
      to lookaside to enable fetching files. (CNY-3818)
    * Added support to logcat for parsing systemId field of the
      repository log. (CNY-3821)

Changes in 2.4.13:
  o New Features:
    * A trove's getNameVersionFlavor() now returns a
      trovetup.TroveTuple. (CNY-3798)
    * The syncCapsuleDatabase option now has four modes of operation in
      total. The new default is to prevent phantom troves from being
      erased during a model operation but permit them to be updated.
      See the description in the manpage for details.

  o Bug Fixes:
    * Remove hard coded icon name for windows package builds. (CNY-3801)

Changes in 2.4.12:
  o New Features:
    * Improved python dependency analysis. Changes include detecting
      explicit and implicit relative imports, creating all requires for
      "from" imports rather than just the parent package, and warning on
      missing requirements. (CNY-3790)
    * Mirroring by group (recursive mode) now starts much more quickly.
      (CNY-3446)
    * Added to all source actions an "ephemeral" parameter that keeps
      autosourced files from being committed to the repository.
      (CNY-3794)

  o Bug Fixes:
    * Fixed a failure when synchronizing capsule databases after a
      phantom component, but not the containing package, had been
      erased. (CNY-3791)
    * Fixed source control snapshots always being recreated when cooking
      locally, even if one was already cached.

Changes in 2.4.11:
  o New Features:
    * Conary operations now succeed through proxies that unilaterally
      re-encode as gzip (CNY-3781)
    * Added sample WSGI server configuration under extra/repos. The
      conary recipe also installs this in the conary-repository:server
      component (off by default). gunicorn and nginx are required for
      this default configuration.

  o Bug Fixes:
    * Fixed memory leaks and reference leaks in extension modules,
      discovered by Uri Simchoni (CNY-3784)
    * Update addGitSnapshot doc string to include information about the
      branch option. (CNY-3787)
    * Fixed a crash when using the web interface to view a filename
      containing non-ASCII characters. (CNY-3775)

Changes in 2.4.10:
  o New Features:
    * The addArchive source method now takes new preserveSetid and
      preserveDirectories keyword arguments to honor setuid/setgid bits,
      and to preserve directories that are empty, have non-root owner or
      group, or have non-default permissions (not 755). (CNY-3780)

  o Bug Fixes:
    * Fixed GroupSetRecipe's latestPackages() method crashing when
      removed troves are present in the repository (CNY-3779)
    * Fix CVS :ext: paths not being recognized as autosource. (CNY-3778)
    * Improved performance of path conflict checking when building
      groups containing packages with many files and potential path
      conflicts. (CNY-3782)
    * Fixed Python dep analysis on CentOS being extraordinarily slow
      (CNY-3783)

Changes in 2.4.9:
  o New Features:
    * Conary is now published under the Apache License version 2.0
    * Improved proxy server operation in WSGI mode
    * Added a "vhost" WSGI entry point that allows serving different
      repository configurations depending on the repository the client
      requested.
    * Conary proxies now use repositoryMap directives in their
      configuration to override URLs given by clients

  o Bug Fixes:
    * Fixed a crash when using "conary repair" on an encapsulated RPM
      containing ghost files (CNY-3773)
    * Fixed IPv6 literals not being escaped correctly in HTTP "Host"
      headers. (CNY-3776)

Changes in 2.4.8:
  o New Features:
    * Added --replace-modified-files, --replace-managed-files, and
      --replace-unmanaged-files options to the "conary rollback" command
      (CNY-3748)
    * The --replace-files option is now deprecated. Scripts should use
      the more specific options --replace-unmanaged-files, --replace-
      modified-files, --replace-managed-files, and --replace-config-
      files, depending on which scenarios need to be overridden.
      Typically only the first two will be useful and are safe other
      than that they may overwrite modifications to the system.
      (CNY-3763)

  o Bug Fixes:
    * Fixed createSourceTrove conflicting with markremoved troves when
      choosing a new version (CNY-3771)

Changes in 2.4.7:
  o Bug Fixes:
    * Fixed GroupSetRecipe builds featuring a subgroup containing bare
      components. Previously the parent group would not have the
      mandatory parent package for those components, making the group
      unpromotable. (CNY-3720)
    * The 'buildlabel' macro is now set at checkin time, enabling more
      straightforward recipes (CNY-3765)
    * Fixed "conary sync" not cleaning up an aborted update when no
      further operations needed to be performed (CNY-3669)

Changes in 2.4.6:
  o Bug Fixes:
    * Fixed a crash when migrating from an encapsulated package to a
      native package with the same contents. (CNY-3762)
    * Fixed an AssertionError crash related to info packages that was
      typically seen when migrating an appliance with custom info
      packages across repositories, or when migrating from a :user
      component containing a group to a separate :group component.
      (CNY-3685)

Changes in 2.4.5:
  o Bug Fixes:
    * r.RemoveCapsuleFiles now works on paths that do not provide a file
      dependency. (CNY-3760)
    * Fixed all updates on the CentOS 5 unencapsulated platform failing,
      due to the presence of an empty RPM database triggering a capsule
      sync. (CNY-3756)

Changes in 2.4.4:
  o New Features:
    * getSystemModel() now returns a SystemModel object, which exposes
      the file's contents and the system model path. (CNY-3753)

  o Bug Fixes:
    * A one-time crash experienced while upgrading from Conary 2.3 or
      earlier to Conary 2.4 has been fixed. This retroactively corrects
      the problem for prior versions of Conary by making the problematic
      module backwards-compatible, so that if it is imported partway
      through the upgrade process the upgrade is likely to proceed
      safely. (CNY-3752)
    * Capsule troves that are too old to have a stored RPM header digest
      are now matched correctly during the capsule database sync phase
      of the update. Previously, updates to a RHEL 5 system would
      recreate many phantom troves on every operation due to the
      mismatch. (CNY-3755)

Changes in 2.4.3:
  o New Features:
    * The Conary client API now exposes a hasSystemModel() call that
      returns True if the machine is system modeled, and a
      getSystemModel() call to retrieve the text of the model file.
      (CNY-3749)

  o Bug Fixes:
    * Fixed a crash that could occur when applying a multi-job rollback
      of capsule troves. (CNY-3747)
    * Fixed a bug that caused unusable rollbacks to be generated when
      erasing a capsule trove while "localRollbacks True" was
      configured. This only fixes newly-generated rollbacks -- any
      existing rollbacks created from previous versions still cannot be
      applied. (CNY-3751)

Changes in 2.4.2:
  o Bug Fixes:
    * The 'package' option of addCapsule now properly handles package
      names only. (CNY-3743)
    * Fixed updates on encapsulated SLES 10 systems always crashing
      since 2.4.0 due to a difference in the rpm-python API. (CNY-3745)

Changes in 2.4.1:
  o New Features:
    * Phantom components are now created with a parent phantom package
      for easier querying.
    * The date and time at which a trove was installed is now recorded
      in the Conary database. This information is visible through
      "conary q --info". (CNY-3740)
    * Users and groups are now broken down into their own components
      rather than having users have the side effect of creating groups.
      This allows for handling circular depenedencies in user group
      membership. (CNY-3731)

  o Bug Fixes:
    * Tag and trove scripts no longer run when --test is in effect

Changes in 2.4.0:
  o New Features:
    * Conary 2.4 includes a new WSGI-based repository stack. Forward-
      and backward-compatibility with clients is maintained. However,
      Python 2.6 is now the minimum version for repositories that wish
      to run on WSGI or that have a web interface, and these also
      require the WebOb library ( http://www.webob.org/ )
    * Conary can now automatically reconcile its own database with
      external capsule databases. If a package is installed in the RPM
      database without using Conary, the next Conary update operation
      will first fabricate a "phantom" trove as a placeholder. That
      trove can then be erased, updated to a regular encapsulated trove,
      or left as-is. Similarly, if a Conary-managed package is erased
      from the RPM database, the next update operation will also erase
      the corresponding Conary trove. This feature can be disabled by
      setting the 'syncCapsuleDatabase' configuration option to False.

  o Bug Fixes:
    * Fixed a bug in the system model dependency solver cache that
      caused surprising behavior when more than one trove in the search
      path provided the same dependency. (CNY-3735)
    * Fixed use of branch specs with system model (CNY-3645)
    * Fixed "cvc promote" when buildLabel is not set (CNY-3660)
    * Previously, updates could fail with an unhelpful 'TroveNotFound'
      error that named the top-level trove when in fact a network
      configuration problem had prevented fetching a sub-component of
      that trove. This has been corrected so that the original network
      error is displayed instead. (CNY-3732)
    * Similarly, "File Stream Missing" errors will no longer mask
      network problems that prevent reaching a file sourced from another
      repository. (CNY-3680)

Changes in 2.3.12:
  o New Features:
    * Switched r.Properties to taking a full config descriptor rather
      than field snippets. (CNY-3730)

Changes in 2.3.11:
  o New Features:
    * Added a --to-file option to "cvc cook" to write the result of a
      repository cook to file instead of committing.
    * Added support for specifying config properties that are attached
      to files rather than specific components.

  o Bug Fixes:
    * Fixed refreshing of autosourced URLs that contain a question mark.
      (CNY-3722)
    * The recipe loader now resolves autoLoadRecipe entries using the
      search flavor rather than buildFlavor. (CNY-3725)

Changes in 2.3.10:
  o New Features:
    * Added support for caching repository passwords with keyutils
      (CNY-3718)
    * "Hidden" troves committed by a mirror script are now fetchable.
      This allows commit mail to be sent from a mirror target.

  o Bug Fixes:
    * PGP keys will no longer be deleted from the repository if the user
      that uploaded the key is deleted. (CNY-3710)
    * Changesets generated on systems using Python 2.7 now use a diff
      format compatible with Conary running on older versions of Python.
    * The never-used "conary updateconary" command, last seen in version
      0.71.2, and associated server support have been removed.
    * Fixed a crash when updating a capsule package with a changed file
      version but the same fileId. (CNY-3719)

Changes in 2.3.9:
  o Bug Fixes:
    * Fixed the 'rollback' command failing if --from-file was not
      specified. (CNY-3711)

Changes in 2.3.8:
  o New Features:
    * Added an experimental psycopg2 dbstore driver.

  o Bug Fixes:
    * Added --from-file to rollback command to allow passing a set of
      changesets which will be searched for capsule content. This is
      only needed/useful for localRollbacks of capsule packages.
      (CNY-3705)
    * Requests that get or put changesets now send the X-Conary-
      Servername header, fixing a proxying issue with some rBuilder
      configurations.

Changes in 2.3.7:
  o New Features:
    * The new rPath Corporate and Designated PGP signing keys have been
      added to the default keyring. (CNY-3702)

  o Bug Fixes:
    * Derived packages no longer build regular expressions for the set
      of files in a single component. (CNY-3594)
    * Python requires are now resolved against the destdir Python first
      even if there is a system Python of the same version. (CNY-3699)

Changes in 2.3.6:
  o New Features:
    * Added a "reference" section to mirror script configuration. If
      provided, the reference repository will be used to determine what
      troves are to be mirrored but the content will be downloaded from
      the "source" repository. This allows mirroring only the troves
      visible on an external mirror while using a closer copy of the
      repository contents that might have more troves than desired.
    * Added support for new MSI file magic.

  o Bug Fixes:
    * Conary now preloads all installer modules required for the entire
      operation before beginning. This prevents a bug where Conary
      updates itself to a new version with incompatible internal APIs,
      then attempts to load the now-incompatible module and crashes.
      (CNY-3662)

Changes in 2.3.5:
  o New Features:
    * The 'commitaction' repository commit hook now accepts python
      module names, which will be searched for on the regular Python
      search path.

  o Bug Fixes:
    * Fixed a bug that caused downloading PGP keys to always fail.
    * getFileContents now succeeds when a capsule itself is requested,
      rather than trying to extract contents from the capsule archive.
      (CNY-3686)
    * r.RemoveCapsuleFiles() now removes the automatically generated
      provides for that path (CNY-3695)
    * cvc explain now includes reference documentation for CapsuleRecipe
      and its policies (CNY-3694)

Changes in 2.3.4:
  o New Features:
    * `conary rdiff` is now equivalent to changeset/showcs, taking the
      same command line arguments and producing the same output
      (CNY-3678)

  o Bug Fixes:
    * Python packages will no longer provide modules with site-packages
      in the name. (CNY-3677)

Changes in 2.3.3:
  o Bug Fixes:
    * Including configuration files over HTTP on Python 2.7 was broken
      since 2.3.0, this has been fixed. (CNY-3672)
    * A bug in handling launchpad URLs with addBzrSnapshot first
      introduced in 2.3.0 has been corrected. (CNY-3674)

Changes in 2.3.2:
  o New Features:
    * The new "proxyMap" configuration item has been added, making proxy
      management now more extensive and configurable.  This allows for
      load balancing and failover across multiple proxies of the same
      type. (CNY-3427)

  o Internal Changes:
    * The transport code has been refactored into a different module to
      simplify subclassing and robustness in flaky network scenarios. To
      simplify the code running on different python versions, urlparse
      from python 2.7 was backported and internalized. (CNY-3458)
    * Changed how fingerprints are calculated to facilitate fingerprint
      caching in the future (this invalidates all fingerprints in
      existing caches)
    * Changeset caches are now one directory deep instead of two.
    * Changesets cached by a repository no longer encode full paths to
      file contents. This allows content stores to be moved without
      flushing the cache.

Changes in 2.2.16:
  o New Features:
    * Capsule files will no longer conflict at build time due to mtime
      differences; the ignoreAllConflictingTimes flag to addCapsule is
      now ignored.
    * Python modules reachable through multiple sys.path entries are now
      provided under each of those paths.

  o Bug Fixes:
    * Conary 2.2.12 changed the structure of the update.UpdateFlags
      object. Since we no longer restart after critical updates,
      rpmcapsule.py needs to accept both the old style flags and the new
      style ones, in case it has updated from pre-2.2.12. (CNY-3662)
    * A bug that caused WIM capsule package builds to fail has been
      fixed. (CNY-3663)
    * An issue that caused a traceback when building native packages for
      a Windows platform has been fixed. (CNY-3664)
    * Python modules provided in a directory added using .pth files are
      now detected properly when building with a different Python
      interpreter than the system Python. (CNY-3667)
    * Specifying tags for addBzrSnapshot is now less restrictive, by not
      forcing a tag: specification. As a result, one can now specify
      tags like revno: or branch: too. See
      http://wiki.bazaar.canonical.com/BzrRevisionSpec for revision
      specifications. (CNY-3647)
    * Importing RPMs that contain a prelinked executable no longer
      crashes. (CNY-3671)

Changes in 2.2.15:
  o New Features:
    * Added support for breaking RPM jobs based on native Conary
      dependencies. (CNY-3655)
    * Added the capability to white-out the Conary representation of RPM
      dependencies. (CNY-3656)
    * Added the r.RemoveCapsuleFiles policy to exclude encapsulated
      files and directories from Conary package manifests. (CNY-3657)

  o Bug Fixes:
    * A bug in the dependency ordering code has been corrected. This bug
      could cause some troves to be installed before their requirements
      are installed, thus temporarily leaving the system in a non-
      dependency-closed state. End users are unlikely to be affected by
      this bug. (CNY-3654)

Changes in 2.2.14:
  o New Features:
    * A new command, search, was added, to allow for model searching.
      (CNY-3649)
    * Repository contents files are now created world-readable by
      default. The actual permissions are dependent on the process'
      umask parameter.
    * Mirror script configuration files now accept an
      "excludeCapsuleContents" option which permits mirroring of troves
      from repositories that do not contain capsule contents.
    * Repositories now log full stack traces to a file in /tmp, the path
      of which is logged in the main error log.

Changes in 2.2.13:
  o New Features:
    * Added support for setting package flavor based on MSI information
      from the Windows Build Service when generating MSIs. (CNY-3641)

  o Bug Fixes:
    * Platform and component information is now properly passed to the
      Windows Build Service. (CNY-3642)
    * The TroveSet.makeOptional method was inappropriately discarding
      all optional troves from the base TroveSet.  It now includes those
      optional troves in the optional set of the result. (CNY-3646)

Changes in 2.2.12:
  o New Features:
    * conaryclient.newtrove's createSourceTrove now accepts an
      additional keyword argument "metadata", containing key/value
      metadata to be stored in the newly created source trove.
      (CNY-3628)
    * GroupRecipe PathConflicts policy now records the conflicting paths
      which were explicitly allowed and the system model based install
      code treats those paths as if --replace-managed-files were enabled
      whenever that group would be present at the end of the operation
      (CNY-3634)
    * Added support for building 64bit MSIs based on the build flavor.
      (CNY-3617)
    * Added support for determining flavor for encapsulated MSI
      packages. (CNY-3636)

  o Bug Fixes:
    * Fixed typo in BuildMSI build action documentation. (CNY-3627)
    * Jobs which install shared contents for a file would fail if those
      contents were delivered in the update changeset as both a diff and
      complete contents (CNY-3631)
    * Always use the cached source when building sources from CVS
      repositories. (CNY-3336)
    * No longer attempt to set the mode of files that are not part of
      the package. These files are normally side effects of other policy
      actions. (CNY-3607)
    * Changed job ordering to install info packages before the critical
      section. (CNY-3629)
    * Groups implemented as GroupSetRecipe will now build under rMake.
      (CNY-3624)
    * A single job with overlapping files would erroneously include
      local file information on one of the versions of the file in the
      rollback, preventing that rollbacks from being applied. (CNY-3637)
    * RPM capsule installation no longer fails when file types change.
      (CNY-3630)
    * Creating rollbacks for individual files being replaced during an
      update would fail if multiple incoming troves owned the file in
      question. (CNY-3633)
    * The GroupSetRecipe SearchPath method is now correctly documented
      to take Repository or TroveSet objects as methods, and now checks
      its arguments for sanity and reports errors usefully. (CNY-3639)

  o Internal Changes:
    * The recommended version of SQLite for use with Conary has been
      upgraded to 3.7.5

Changes in 2.2.11:
  o New Features:
    * Added the ability to manually specify configuration properties,
      rather than requiring a packaged file. (CNY-3619)

  o Bug Fixes:
    * Conary 2.2.9 introduced the PathConflict policy, which was added
      to allow building groups with intentionally conflicting paths. If
      path conflicts were allowed in inner groups, Conary would build
      groups lacking weakrefs.  This has been fixed, and affects only
      Conary 2.2.9 and 2.2.10. (CNY-3625)

Changes in 2.2.10:
  o New Features:
    * Added basic support for memcached for fingerprints, dependencies,
      and troveInfo. The support is for both the proxy and the
      repository, but the cache is not actively invalidated.

  o Bug Fixes:
    * Promoting redirect troves now rewrites versions in redirects when
      the target of the redirect has been promoted according to the
      promote map, and leaves other redirects untouched.   Previously,
      it converted the redirect into a redirect to nothing.
      Additionally, a script called "promote-redirects" has been added
      to automate the process of finding and promoting redirect packages
      between labels. (CNY-1900)
    * The changemail script will now send mail even if rdiff fails when
      attempting to generate a list of changes between versions of
      source packages.
    * cvc rdiff tried to show changes in autosource files whose names
      didn't change, causing a traceback (CNY-3383)
    * Several potential SQL injection vulnerabilities have been
      eliminated. These vectors require repository administrator
      privileges and a non-standard configuration to exploit, so
      potential impact is low. (CNY-3612)
    * Corrected a bug that would allow authenticated repository users to
      grant themselves additional repository privileges including
      additional read access and write access, but not administrative
      privileges or access to repository mirror services. (CNY-3611)
    * Corrected a bug that would allow authenticated repository users
      with limited mirror privileges to deny repository mirror services
      to other authenticated users. (CNY-3610)
    * Conary was too vigilant enforcing file conflict checking during
      RPM updates. Many cases need to be caught by the database layer
      instead of the capsule installation layer to avoid false
      positives. (CNY-3620)

  o Internal Changes:
    * Some limitations of the "conary repair" command have been
      documented. (CNY-3618)

Changes in 2.2.9:
  o New Features:
    * The "cvc explain" command now honors the PAGER environment
      variable, and if PAGER is unset or is set to "less", has
      additional formatting that shows more character styles.
    * GroupSetRecipe, a new superclass for building groups, has been
      added. Documentation is available via "cvc explain"; start with
      the command "cvc explain GroupSetRecipe" and follow references to
      Repository, TroveSet, and SearchPath documentation.
    * The "conary install" command has been added.  It is equivalent to
      the "conary update --keep-existing" command.  While the "--keep-
      existing" argument option has been not commonly recommended in the
      old update model because it can easily introduce packages with
      versions that are unintentionally out of sync, it is commonly
      useful with a system model because the search path used for a
      system model can keep versions in sync.
    * The new group policy PathConflicts has been added, allowing more
      granular control over which paths are allowed to conflict.
      (CNY-3505)
    * Added support for specifying trove requirements on other troves.
      (CNY-3517)
    * Add support for defining the actions that run based on the target
      platform. (CNY-3519)
    * Added support for building specially formatted zip archives into
      MSIs (CNY-3475)
    * The BuildMSI build action has been updated to always store the
      Windows Build Service log as part of the package build log.
      (CNY-3521)
    * Add support for specifying web applications to the Windows Build
      Service. (CNY-3522)
    * Added support for storing and persisting MSI component
      information. (CNY-3523)
    * Added support for WIM capsules (CNY-3473)
    * In group recipes the add, replace, addAll, and addCopy methods now
      take a allowMissing keyword argument that prevents the action from
      failing if the trove can not be found. (CNY-3532)
    * An experimental implementation of a WSGI conary repository is now
      available.
    * Added support for specifying and storing msiexec arguments.
      (CNY-3550)
    * A new Properties policy parses iconfig property description files
      and adds the information from them to Conary packages. (CNY-3571)
    * Conary now works with python 2.7. (CNY-3582)
    * Handle Linux ABI type for sonames by mapping it to SysV (CNY-3584)
    * --no-restart is now implied for operations in a chroot (since we
      would just run the same conary version anyway), and is allowed
      when conary is run on the system's root directory (CNY-3515)
    * A new update mechanism called "system model" has been added.  In
      this model, a file called /etc/conary/system-model describes what
      should be installed on the system.  This file is modified by
      certain conary update commands, and can also be edited with a text
      editor.  The system model allows a system to be updated relative
      to a search path that includes groups as well as labels, leading
      to more coherent sets of updated packages.  It also allows re-
      starting updates with transient failures; the filename /etc/conary
      /system-model.next is reserved for storing the system target state
      during an update operation. (CNY-3592)
    * On systems with a system model, the "conary unpin" command
      synchronizes the system to the model after unpinning. (CNY-3591)
    * gobject-introspection's gir files are now included in :devel
      components by default, because they are non-arch-specific
      development artifacts. (CNY-3579)
    * Sped up metadata lookups during builds by collapsing many
      getTroves() into a single call.
    * Sped up path conflict checking when path names conflict and file
      signatures need to be compared
    * Conary no longer restarts after updating Conary ("critical
      restarts") by default.  When an alternative root has not been
      provided, the --restart option is available to choose to restart.
      (CNY-3601)

  o API Changes:
    * The conary command line handling has been made available as
      conary.cmds.conarycmd, and the cvc command line handling has been
      moved from conary.cvc to conary.cmds.cvccmd.  Similarly,
      conary.branch has been renamed to conary.cmds.branch, conary.clone
      has been renamed to conary.cmds.clone, conary.commit has been
      renamed to conary.cmds.commit, conary.cscmd has been renamed to
      conary.cmds.cscmd, conary.fmtroves has been renamed to
      conary.cmds.fmtroves, conary.metadata has been renamed to
      conary.cmds.metadata, conary.query has been renamed to
      conary.cmds.query, conary.queryrep has been renamed to
      conary.cmds.queryrep, conary.rollbacks has been renamed to
      conary.cmds.rollbacks, conary.showchangeset has been renamed to
      conary.cmds.showchangeset, conary.updatecmd has been renamed to
      conary.cmds.updatecmd, and conary.verify has been renamed to
      conary.cmds.verify. The old locations will be available for
      backward compatibility for the foreseeable future. (CNY-3471)

  o Bug Fixes:
    * Make negative openpgp key cache entries to avoid repeated server
      queries for keys which don't exist. (CNY-3450)
    * Labels no longer allow equal signs in them.
    * Ignore images without Windows content when evaluating results from
      the Windows Build Service. These images are normally used for
      system rescue. (CNY-3558)
    * Add information about MSIs and WMIs to the documentation string of
      the addCapsule source action. (CNY-3563)
    * Querying RPM deps is now possible if the deps contains a colon.
      (CNY-3289)
    * The migrate command is now displayed in the basic help text
      (CNY-3456)
    * Synthesized soname requirements map "Linux" to "SysV" because a
      Linux ABI ELF object is capable of using dlopen() to open a SysV
      ELF object. (CNY-3604)
    * Cleaned up standard conary help and moved least commonly used
      sub-commands to verbose help. (CNY-3605)
    * The lookaside cache now correctly supports ftp urls with
      user/passwords. (CNY-3508)

Changes in 2.1.28:
  o Bug Fixes:
    * Content injection for capsules is no longer retrieving the
      changeset over HTTP when it is available locally. (CNY-3573)
    * isEncapsulatedContent is reset when derived capsules overwrite
      capsule content. (CNY-3577)
    * The proxy layer will now properly include in changesets any files
      with isCapsuleOverride() set. (CNY-3578)
    * Conary proxies will no longer crash if a changeset is requested
      which has more troves than the current process file descriptor
      limit. (CNY-3497)
    * The getFileContentsCapsuleInfo call no longer returns results in
      database order (which is non-deterministic). (CNY-3581)
    * The proxy now works around device files inadvertently marked as
      overrides of the capsule. (CNY-3583)
    * Another case where content overriden outside of a capsule is not
      included in the changeset is now fixed. (CNY-3586)
    * Deriving large packages no longer runs into regular expression
      size limitations. (CNY-3594)
    * Capsule-based packages no longer allow their contents to be
      changed - that can be achieved in a derived package. (CNY-3590)

Changes in 2.1.27:
  o New Features:
    * Support for PostgreSQL 9.0 has been added.
    * The Requires policy now takes an optional pythonFlagNamespace
      keyword argument which, if provided, is attached to flags in
      python dependencies generated by Provides and Requires. (CNY-3493)
    * The object representing an RPM file header now has additional
      methods, getFiles() and getFilesByPath(), which return convenient
      file objects. (CNY-3567)

  o Bug Fixes:
    * Don't execute capsule update operations when the fileId of the
      underlying capsule has not changed.
    * Another instance where passwords could be exposed in extended
      tracebacks has been fixed. (CNY-3552)
    * The LZMAFile class can now handle gzip-compressed file streams.
      (CNY-3553)
    * The read method of util.LZMAFile is now properly dealing with
      short reads from the underlying pipe. (CNY-3564)
    * The os.getcwd function can raise an exception if the working
      directory has been deleted; the internal _freezeFromChangesets
      call was changed to no longer call os.getcwd if only absolute
      paths are used. (CNY-3557)

Changes in 2.1.26:
  o Bug Fixes:
    * Make negative openpgp key cache entries to avoid repeated server
      queries for keys which don't exist (CNY-3450) (CNY-3450)
    * promoting groups which include multiple groups with the same name
      (either strongly or weakly) when those groups come from source
      components with different names no longer fails (CNY-3525)
    * A bug in inspection of the rpm module in rpmExpandMacro has been
      fixed. (CNY-3506)
    * Fixed perl dependency calculation for the case when perl itself is
      being built. (CNY-3077)

Changes in 2.1.25:
  o New Features:
    * It is now possible to choose whether to merge kernel module
      symbols into a single Conary dependency when importing RPM kernels
      and modules.  The new default is not to merge the symbols, to
      enable multiple interdependent kernel modules. (CNY-3518)

  o Bug Fixes:
    * The repository commit email system now can be given a mailhost
      with the --mailhost argument; localhost is used as the default
      mailhost. (CNY-3206)

Changes in 2.1.24:
  o Bug Fixes:
    * Documentation for the "user" configuration option has been added
      to the conary.1 man page. (document-user-config)
    * Platforms which we need to support rpm's netsharedpath don't
      necessarily have expandMacro in their python module; add our own
      binding in misc.c (CNY-3506)
    * The repository commit email system has been modified to use python
      internal email and smtplib modules.  It no longer relies on an
      external mail program, and handles non-ascii characters correctly.
      (CNY-3206)
    * Fixed a hard-to-trigger crash when opening a build logger PTY
      fails. (CNY-2938)
    * Added hardlinked file support to CpioStream. (CNY-3504)
    * Bz2File.read() now returns the ammount of data that is requested.
      (CNY-3513)

Changes in 2.1.23:
  o New Features:
    * Support "data.tar.lzma" in .deb files (CNY-3491)
    * respect RPM's _netsharedpath macro during capsule handling
      (CNY-3503)

  o Bug Fixes:
    * Derived packages now work with packages containing shared files
      and and ghost files. (RBLD-335)
    * A bug introduced in Conary 2.1.21 that prevented `cvc promote`
      from functioning has been corrected. (CNY-3490)

Changes in 2.1.22:
  o Bug Fixes:
    * A bug introduced in Conary 2.1.21 that prevented `cvc cook` from
      functioning has been corrected. (CNY-3490)
    * Fix an inconsistency between Conary and RPM databases when RPM
      fails to install a requested package. (CNY-3488)
    * Rewrite derived package shadow creation code because the previous
      attempt to support capsules was fragile and frankly a bad idea.
      (RBLD-326)
    * Fix exception when doing a repository cook when the recipe sources
      a multiurl of mirrors. (CNY-3485)

Changes in 2.1.21:
  o New Features:
    * The --no-recurse option is now allowed with the "conary migrate"
      command. This can be used to rebuild a system from a manifest
      file.
    * A no-scripts option has been added.  If set, capsule scripts,
      trove scripts, and tag scripts are skipped during an update.
      (CNY-3452)
    * Conary now records in /var/log/conary the order in which RPM
      chooses to install encapsulated RPMs. (CNY-3460)
    * When RPM fails to unpack a package when being invoked as non-root,
      Conary will now warn about the failure but will not fail the
      entire transaction. (CNY-3462)
    * Conary now validates RPM capsule operations against the RPM
      database as early as possible to flag errors when they occur.
      (CNY-3455)

  o Bug Fixes:
    * Make negative openpgp key cache entries to avoid repeated server
      queries for keys which don't exist (CNY-3450) (CNY-3450)
    * Process directory creation for other file types (CNY-3451)
    * Fixed a repository crash when converting a cached changeset for an
      older client. (CNY-3453)
    * The getCapsulesTroveList function was restored to sqldb for use in
      recreatedb.
    * Fixed signing of packages with pycrypto 2.1 (CNY-3465)
    * Fixed a bug which caused an internal server error when the same
      trove permission was applied to more than two roles. (CNY-3469)
    * When multiple installed conary components shared an underlying RPM
      capsule removing one of those components would result in the
      conary database becoming out of sync with the rpm database
      (CNY-3470)
    * Changesets can contain shared files where one is a diff and the
      other is not. The diff will be used (CNY-3483)

  o Internal Changes:
    * Hotspot profiling hooks have been removed. (CNY-3250)
    * added cksig script for verifying (and fixing) signatures in a
      repository
    * Add argument to the API for cooking troves to allow someone to
      specify a changeset file instead of committing the changeset to
      the repository. (CNY-3466)
    * The transport layer is now handling network errors more reliably.
      (CNY-3429)

Changes in 2.1.20:
  o Bug Fixes:
    * Injector code for relative changesets creates the new trove once
      instead of once for every file being merged. (CNY-3444)
    * symbol hashes found in RPMs are used by ksym deps as well as
      kernel deps (CNY-3442)
    * UtilizeUser and UtilizeGroup policies now support macros in the
      user and group argument (CNY-3445)
    * Make negative openpgp key cache entries to avoid repeated server
      queries for keys which don't exist (CNY-3450)

Changes in 2.1.19:
  o New Features:
    * added --disconnected option as an advanced option for updates
      (CNY-3105)
    * conary q --path /dir/ (with the ending /) now displays the owners
      of all files in /dir. The list of files is sorted before the
      owning troves are looked up. (CNY-610)
    * The Requires policy can now take an removeFlagsByDependencyClass
      keyword argument to customize the set of flags to match platform
      behavior. (CNY-3443)

  o Bug Fixes:
    * Walking troves on the local system no longer walks implied
      linkages (CNY-3440)
    * sizeOverride metadata has no any effect if it is set to zero.
      (CNY-3441)
    * cvc now adds recipes as text files even if --binary is specified.
      (CNY-3200)
    * RPM kernel deps now include the symbol hash if it is defined
      within the RPM. (CNY-3442)

Changes in 2.1.18:
  o Bug Fixes:
    * An optimization introduced in Conary 2.1.0 (CNY-3282) caused
      filter expressions using tuples to express required or forbidden
      file mode bits at build time.  This regression has
      been fixed. (CNY-3437)
    * sizeOverride metadata is now never copied when a new version of a
      trove is created. (CNY-3438)
    * addCapsule now fails with a clear error when the same file is
      added multiple times.

  o Internal Changes:
    * When looking for an LGPL libelf, the Conary build process wil now
      look for either "Library" or "Lesser" in the name of the license,
      and will consider /usr/include/libelf.h as a candidate LGPL
      header.
    * transport.URLOpener now shares no_proxy support with the lookaside
      cache.

Changes in 2.1.17:
  o New Features:
    * Added a new option to the mirror configuration, matchTroveSpecs
      which is a list of regular expressions that are matched against
      full troveSpecs in order to select which troves will be mirrored.
      (CNY-3334)
    * The addCapsule source action now takes a ignoreAllConflictingTimes
      boolean argument which causes it to not raise errors when
      overlapping paths otherwise allowed have conflicting mtimes.
      (CNY-3415)
    * Made conary.lib.magic more resiliant to errors that show up only
      with certain implementations of libelf. (CNY-3430)

  o Bug Fixes:
    * Output text for the conary update command has been changed to more
      clearly describe dependency resolution problems. (CNY-3154)
    * Shared library RPATH entries with a double leading slash (//) no
      longer cause paths to be recorded in soname dependencies in
      certain circumstances. (CNY-3425)
    * Allow RPM packages to create /etc/passwd and /etc/group properly,
      even if the files already exist (due to a info- package, for
      example) (CNY-3428)
    * Running Conary updates in single-threaded mode correctly execute
      group trove scripts. (CNY-3431)
    * Size stored in troveInfo now excludes any capsules (CNY-3432)
    * The sizeOverride metadata field can be used to override the
      reported total file size of a trove. (CNY-3432)

  o Internal Changes:
    * Combined TroveCache and TroveCacheWrapper objects in build code.

Changes in 2.1.16:
  o New Features:
    * RPM capsule packages can now derived.  In addition, capsule 
      recipes can now be used to modify the contents of a capsule or add
      files to the capsule component in the non-derived case as well. 
      (CNY-3348)
    * RPM capsules will now represent the HDRID/SHA1HEADER tag in
      troveInfo.  This will differentiate RPMs that are not really
      the same but have been built with the same NEVRA. (CNY-3410)
    * Some unhandled tags will cause errors at build time, to
      ensure that any necessary handling is done before such
      packages are built into a repository. (CNY-3404)
    * Allow automatic sharing of InitialContents files, including ghost
      files for encapsulated RPMs
    * Allow encapsulated files in /usr/share/doc to silently replace each
      other. This mirrors a feature in the patched version of RPM Red Hat
      shipped in RHEL4 and RHEL5 which is used for biarch packages.
      (CNY-3420)

  o Bug Fixes:
    * For locale RPM dependencies, RPM flags are now properly converted 
      to conary dep flags (CNY-3411)
    * Clone operations no longer print an error in the callback. (CNY-3413)
    * The lookaside now properly handles URLs that include arguments.
      (CNY-3418)
    * Requests to a capsule-injecting proxy no longer fail if they
      contain a mix of uncached capsule and non-capsule troves.
      (CNY-3417)
    * Pluggable policy can now override internal policy of the same
      name.  (CNY-3419)
    * Tags now only execute the "handler update" command if the
      tag handler script is installed.  (CNY-3422)

  o Internal Changes:
    * Tests for 'group-' in a name now check for :, ensuring that the
      check doesn't match a group component.
    * The "recreatedb" script is now installed as part of "make install".

Changes in 2.1.15:
  o New Features:
    * Recipes that have a class member list named 'pathIdSearchBranches' will
      search the branches defined in the list for pathIds to reuse while 
      cooking. (CNY-3398)

  o Bug Fixes:
    * Build groups whose flavors end up identical now causes one of those
      builds to be discarded rather than an exception about "maximum
      recursion depth exceeded" (CNY-3401)
    * Optimized population of lookaside cache for recipes containing large 
      numbers of source actions such that it is *much* faster. (CNY-3406)
    * Conary proxies will no longer cache changesets that were
      truncated in transit. Additionally, clients will produce a more
      useful error message if they download a truncated changeset.  (CNY-3140)
    * The filewrap and wrapdir options for r.Run() previously did not
      wrap fopen64 or freopen64. (CNY-3405)
    * Previously, user and password information for the http/https proxy
      were visible in a traceback if a network exception occured. (RBL-5191)
    * Split out info packages from jobs even when RPM capsules are
      used (CNY-3387)
    * Modified lookaside cache file structure to include URL parameters, 
      fragments and ports to better generate a unique file path for a given 
      URL (CNY-3408)

Changes in 2.1.14:
  o Bug Fixes:
    * Disable diff/patch merging for RPM config files (CNY-3399)

  o New Features:
    * Added support for RPM capsules to ChangesetExploder class

  o Internal Changes:
    * Added file flags to allow conary to override file contents and attributes
      for capsule-based files (such as from RPM).
    * Changesets are now loaded incrementally rather than as one big string;
      this avoids a potentially large memory spike opening large changesets
    * Added slots to various stream and trove objects
    * StreamCollections are intialized as if thawing an empty string rather
      than instantiating all of the child elements (which are often not needed
      anyway). This reduces total ram usage by more than 5% on large
      changesets.

Changes in 2.1.13:
  o Bug Fixes:
    * Fixed crash in lookaside.fetchURL when accessing an authenticated http
      URI using python 2.6.5. (CNY-3393)
    * Changes for sharing files with different fileIDs are now done for
      non-encapsulated files as well. (CNY-3396)
    * Installing critical packages as part of jobs which cannot be split
      due to capsules no longer causes an exception.
    * The Conary command-line client will no longer traceback when command
      specific options are given without a command
      (e.g. 'conary --what-requires'). (CNY-3364)

Changes in 2.1.12:
  o New Features:
    * Config files from RPM capsules are now handled by Conary instead of
      RPM, including diff/patch merging.
    * Emulate RPM file coloring behavior to allow a package to take
      ownership of files from another package based on the ABI used
      by those binaries. (CNY-3385)
    * File sharing no longer requires identical fileIds. Files can now be
      shared between troves even if metadata like link groups is different
      between the files.
    * The caching layer in the Conary proxy will now use locking
      to prevent other processes from trying to do the same work.
      (CNY-3374)

  o Bug Fixes:
    * gzip files that are corrupt in the first 4KB of compressed data
      no longer cause all policies that check for file type using
      conary's "magic" module to trace back. (CNY-3377)
    * conary.lib.util now has an fnmatchTranslate function that strips
      the end-of-string termination consistently in python 2.6.5 and
      in older versions. (CNY-3378)
    * dbstore's createIndex() method no longer fails if invoked multiple
      times without reloading the schema. (CNY-3380)
    * A bug related to Java files containing classes with no requirements
      is now fixed. (CNY-3379)
    * Unicode representations of flavors are now converted to ASCII
      strings before being parsed. (CNY-3381)
    * Fixed problem with the lookaside cache when a recipe defines a custom
      source action. (CNY-3386)
    * Fixed bug in verify which caused traceback with error messages
      about incorrect trove signatures.
    * Previously, user and password information for Conary repositories
      was hidden in backtraces only when the the user and password
      information came from separate "user" configuration.  Now, even
      if the user/password information is provided directly within a
      repository URL, it will still be hidden. (RBL-5191)
    * Python 2.6.5 now enforces that file objects opened with fdopen be
      passed a "w+" mode (instead of plain "w") if read operations
      are also intended. (CNY-3388)

  o Internal Changes:
    * Renamed isPayload file flag to isEncapsulatedContent.
    * Added file flags to allow conary to override file contents and
      attributes for capsule-based files (such as from RPM).

Changes in 2.1.11:
  o New Features:
    * The recreatedb script is now capable of populating the Conary
      database with packages in the RPM database that are found in
      the Conary repositories in the installLabelPath. (CNY-3373)

  o Internal Changes:
    * Added ability to commit changesets without executing capsule
      implementations. This allows us to build a conarydb which reflects
      the current state of a system without reinstalling packages through
      the capsule handler.

  o Bug Fixes:
    * The Java package policies for computing provides and requires are
      now more efficient. (CNY-3372)

Changes in 2.1.10:
  o New Features:
    * The "conary migrate" command no longer requires interactive
      mode, and now defaults to yes rather than no. (CNY-3361)
    * Added --diff option to verify and showchangeset commands to display
      output as a git-formatted diff
    * Added --new-files option to verify to include files which were added
      to the system outside of conary package management. The
      verifyDirsNoNewFiles configuration option was added to pare down the
      tree conary looks through for new files.
    * Added exceptions and exceptDeps options to RPMRequires

  o Internal Changes:
    * Optimized StreamCollection diff and __eq__ operations to use frozen
      data if available
    * Merged internals of localcs/verify implementation into new classes
    * Flavor objects can now be used with the stdlib "pickle" module.

  o Bug Fixes:
    * SSL XMLRPC connections will now retry before raising an exception
      (CNY-3369)
    * Java requirements for classes depending on other classes for which
      provides have been dropped no longer propagate as trove or file
      requirements. (CNY-3362)
    * Auto-sourced files will now be fetched through an proxy if the
      appropriate *_proxy environment variable is set of the a proxy is
      configured for conary. (RBL-5714)
    * Lookaside fixed for files that have identical names but different
      contents (CNY-3256)
    * Jobs would be split inappropriately when capsules were pulled in
      through dependency resolution (CNY-3367)

Changes in 2.1.9:
  o Bug Fixes:
    * The NO_PROXY environment variable no longer applies to conary
      proxies. (CNY-3360)

Changes in 2.1.8:
  o Bug Fixes:
    * Added abort-on-error to conary rollback command which causes rollback
      be aborted if any pre scripts fail. (CNY-3327)
    * Fixed bug introduced in Conary 2.1.0 which caused conary to ignore
      ownership differences for executable files. (CNY-3354)
    * When SetModes() is called twice, honor the last invocation with
      regard to setuid and setgid, including if neither setuid nor
      setgid is set.  Also, make it possible to override setuid and
      setgid bits in a derived package. (CNY-3344)
    * Fixed a bug in Conary 2.1.0 which caused updates to fail
      because a temporary table persisted across jobs. (CNY-3339)
    * Changed default behavior of imageGroup flag in group recipes so that
      checkOnlyByDefaultDeps is now set to True (CNY-3356)

Changes in 2.1.7:
  o New Features:
    * Conary now allows configuration files that appear to be encoded
      in Windows Code Page 1252 if they do not have other specific
      characteristics of binary files. (CNY-3353)

  o Bug Fixes:
    * CheckinCallback was moved from cvc.py to commit.py, in order to
      prevent the conary package from depending on conary-build.
      (CNY-3314)
    * Zero epochs are no longer stored as NULL in the troveInfo.
      (CNY-3350)
    * A file descriptor leak caused by a circular dependency in the
      update code has been fixed. (CNY-3352)

Changes in 2.1.6:
  o Bug Fixes:
    * A bug in the getChangeSetFingerprints call that resulted in
      fingerprints different from those calculated by Conary proxies has
      been corrected.
    * Rollbacks no longer fail if a file type changed before and after
      the relevant update has been appliend. (CNY-3340)
    * Ghost files that are part of rpm capsules are marked as being part
      of the changeset (as opposed to being included in the capsule).
      The proxy code that injects contents was made aware of that, to
      avoid creating incomplete changesets. (CNY-3346)

Changes in 2.1.5:
  o Bug Fixes:
    * PythonSetup now respects the r.macros.pyver if it is set;
      r.macros.pyver now reflects the currently running version of
      python if it is not set by other means. (CNY-3325)
    * The documentation for the Automake build action was corrected.
      (CNY-3329)
    * A bug in unusual commit paths, that would cause repositories to
      not store file contents for contents which were part of capsules
      as well as part of normal troves, was fixed. (CNY-3332)
    * RPM capsules properly update when files stayed the same between
      old and new versions of the RPM. (CNY-3335)
    * Ghost symlinks shared between multiple capsules being packaged
      together as part of the same conary source component no longer
      cause the build to fail. (CNY-3336)

Changes in 2.1.4:
  o Bug Fixes:
    * A redundant check that could trigger an assertion error in
      the lazy cache code has been removed. (CNY-3331)

Changes in 2.1.3
  o New Features:
    * Conary now stores RPM obsolete information as troveinfo data.
      (CNY-3328)

  o Bug Fixes:
    * Building rpm capsules properly eliminates dependencies in the
      RPM namespace that are also discovered by Conary. (CNY-3318)

Changes in 2.1.2:
  o New Features:
    * Conary now runs all destdir policies for capsule packages.
      Previously, it disabled destdir policies to avoid unintentional
      modification; now all destdir policies should take capsules
      into account and some destdir policies are required. (CNY-3320)
    * Scripts from capsules are now written as files that are not
      packaged but are available for inspection during the packaging
      process, and policy can investigate script files. (CNY-3321)

  o Bug Fixes:
    * Committing relative changesets with multiple specifications for
      a single fileId no longer causes a repository traceback when
      those specifications are part of different troves. (CNY-3316)

Changes in 2.1.1:
  o New Features:
    * Added repair command as an experimental feature. (CNY-1800)
    * Files marked as "missingok" in encapsulated RPMs now have that
      status represented by a "MissingOkay" flag on the corresponding
      Conary file object. (CNY-3306)
    * Files from encapsulated RPMs now have the mtime from the
      RPM recorded in troveInfo.  The mtime of last change is
      still used to calculate fileIds, preserving knowledge of
      when meaningful file information has changed. (CNY-3307)
    * Added support in verify and update paths for prelinked
      binaries. (CNY-3298)

  o Bug Fixes:
    * Changeset reassembly for capsules ignores directories. (CNY-3305)
    * Encapsulated symbolic links are represented as having the mode
      that will exist on the filesystem, even if that varies from the
      mode recorded in the capsule. (CNY-3304)
    * Previously, getTroveLeavesByPath() didn't return leaves; it
      returned the most recent trove which includes that path.
      It now returns only leaves (most recent versions) that include
      that path, and if the path is only included in older versions,
      no troves are returned. (CNP-184)

  o Internal Changes:
    * Database connection objects now have a close_fork() method that
      closes the connection without notifying the server.

Changes in 2.1.0:
  o New Features:
    * Conary now allows packages to be installed using foreign package
      managers via wrapped content called capsules. RPM capsule support
      is included in this release. (CNY-3217, CNY-3213)
    * Added ignoreDependencies configuration option, which allows users
      to specify certain dependency classes which should be ignored
      during installs. The default is "abi rpmlib".
    * The xz compression file format is now supported for decompressing
      sources. (CNY-3207)
    * The changemail.py repository commit action module now takes an
      optional --maxsize argument and truncates changemail messages
      to fit. (CNY-3205)
    * The Run build action now does path-based build requirement
      discovery like most build actions. (CNY-3222)
    * Conary now allows identical files to be shared during installs
      and updates. Both troves own the shared files, and they must be
      updated at the same time when the shared files change.
    * Conary now honors the no_proxy environment variable to allow
      direct connections to specific hosts and domains. (CNY-3246)
    * Added excludeCapsuleContents config option for servers.
    * Added ChangeSet.removeCommitted() to filter already-committed
      troves from a changeset.
    * The bootstrap python module dependency discovery proxy now
      provides additional useful informational messages to aid
      debugging.
    * Conary proxies are responsible for reassembling the content for
      changesets containing capsules. (CNY-3228, CNY-3259)
    * The --capsules command line option modifies showchangeset,
      repquery, and query commands to display file information for
      capsules instead of for installed files.
    * A new Conary proxy setting, injectCapsuleContentServers, controls
      changeset content injection for proxies talking only to hosts in
      this list. (CNY-3261)
    * Conary no longer uses regular expressions to represent manifest
      files and other internally-generated lists of files matched by
      policy, and so will not raise OverflowError for manifests with
      many files, or from policy generated from source objects, on
      platforms with a restricted regular expression code size.
      (CNY-3282)
    * The python dependency finder client has been modified to resolve
      incompatibilities on the client side with python 2.3. (CNY-3285)
    * Conary can now read cpio archives directly. (CNY-3280)
    * The Conary repository now provides a method for obtaining commit
      progress updates. "conary commit" now provides progress
      output. (CNY-3290)

  o Build Changes:
    * When cooking groups where checkOnlyByDefaultDeps is set to False,
      added dependencies will now inherit the byDefault setting of the
      depending component. (CNY-3195)
    * The imageGroup flag in group recipes now implies
      checkOnlyByDefaultDeps=False. (CNY-3195)
    * Group search paths may now contain lists or tuples of troves to be
      considered as a single "bucket". (CNY-3286)

  o Bug Fixes:
    * In-core changesets previously could be merged only once into a
      ReadOnlyChangeSet.  After multiple merges, reset() previously
      failed to reset the underlying in-core changeset.  This has been
      fixed.
    * Conary no longer exits with an unhandled KeyError exception if
      an unknown dependency type is encountered in the local database.
      (CNY-3232)
    * Decompression with xz is preferred over unlzma, as CNY-3194
      intended. (CNY-3231)
    * rpm2cpio now correctly handles rpm packages compressed with xz.
      (CNY-3234)
    * Unpacking an RPM with addArchive or addCapsule now functions
      correctly even if the CPIO archive in the RPM contains a
      non-traversable directory. (CNY-3244)
    * When running an external entitlement generator, use /dev/null for
      stdin instead of closing the file descriptor.
    * Added logging to several source actions to ensure that some output
      is provided to make debugging build failures easier.
    * Call lstat() instead of stat() to deal with circular links.
      (CNY-3251)
    * Bootstrapping python dependencies now uses python source intead
      of a version-specific compiled python file.
    * The addCapsule source action properly verifies GPG keys when a
      keyid argument is supplied. (CNY-3258)
    * Commiting signed troves to repositories without signatures no
      longer causes repository tracebacks.
    * Repositories no longer store duplicate file path information when
      a path is committed for the first time by a job which references
      it multiple times.
    * Replacing a symlink with a regular file no longer creates the
      regular file as the target of the symlink.
    * Local rollbacks properly restore file contents when the file was
      replaced by a non-regular file (such as a symlink)
    * Cooks will no longer block indefinitely if a subprocess forks and
      does not exit. (CNY-3284)
    * When startGroup is called, flags will now be properly copied from
      the parent group. (CNY-3287)
    * Replacing a symlink which was part of a loop no longer causes a
      traceback.

  o Internal Changes:
    * A repository's internal getfile function now avoids any database
      access when no files have been requested.
    * Loading troveinfo data uses bulk operations, speeding up
      repository commits.
    * Committing changesets now iterates over troves the changeset is
      relative to, rather than getting them one at a time, significantly
      reducing the number of sql calls.
    * Conary now uses a single call when validating that file objects
      exist in the repository during a commit.
    * Repository commits now handle file paths and file streams
      separately, in order to reduce the size of the temporary tables
      and the commit path.
    * The number of SQL calls used to create the flavors needed by a
      repository commit has been dramatically reduced.
    * No-operation SQL calls during repository commits when no redirects
      are being commited were eliminated.
    * Repository commits now merge all dependencies from the temporary
      tables into the final tables at once rather than once per trove.
    * Repository commits now update permission tables for all new troves
      at once.
    * Updates to latest tables are now done for all troves at once, and
      are based on the current latest entries and the new trove. Formerly
      they were done one at a time based on everything in the repository
      (through a view).
    * The rpmhelper.Header object can now produce dependency sets that
      represent what an RPM requires and provides.
    * A new RPM dependency class has been added. This class is used
      to represent dependencies expressed in RPM packages that cannot
      be mapped directly to a native Conary dependency.
    * Colons in dependency flags are now escaped as \: to allow
      deterministic thawing.
    * CIL dependency parsing uses xml.etree.ElementTree, if available,
      instead of elementree.ElementTree.
    * The LDFLAGS setting is now honored when linking binaries.
    * Trove and TroveChangeSet objects now represent paths as
      directory/basename pairs.
    * Changeset dict of absolute file object changes are now indexed more
      efficiently.
    * StreamCollection classes can now choose to ignore the skipSet when
      freezing for a performance boost
    * Dirnames/basenames are added as a single operation at the beginning
      of a repository commit to make the ids available for the files
      build removing the need for large, complex joins later.

Changes in 2.0.50:
  o Bug Fixes:
    * cvc rdiff now functions correctly on trove versions where no
      previous version exists. (CNY-3218)
    * Updates of multiple flavored groups containing pre-update scripts
      no longer fail after the critical update is applied. The fixed
      Conary issue is related to CNY-3216, but only manifests itself
      when multiple groups are present. (CNY-3219)
    * Path-based action build requirement discovery now functions
      correctly when spaces are present in environment variables or
      adjacent spaces are present before the name of the executable in
      a command string. (CNY-3224)
    * When building local changes, conary would sometimes look through
      the database by fileId to get the path for a file it needed,
      instead of just looking in the filesystem directly. That caused a
      failure when two paths had the same fileId but one of them had
      been removed from the system. (CNY-3226)
    * Building from the repository will no longer attempt to re-download
      autosourced files. (CNY-3221)

  o Internal Changes:
    * Conary will now link against an embedded copy of sqlite if a
      specific version of sqlite has previously been configured and
      built under the conary/pysqlite3/ directory.  At this time,
      the supported version is 3.6.18.

Changes in 2.0.49:
  o Bug Fixes:
    * Updates of flavored groups containing pre-update scripts no
      longer fail to continue after the critical update is applied.
      (CNY-3216)
    * Old rpm packages that do not have a PAYLOADCOMPRESSOR tag in their
      headers are correctly handled. (CNY-3210)

Changes in 2.0.48:
  o Bug Fixes:
    * A bug introduced in the previous release that caused installations
      of device nodes as a non-root user to crash has been fixed.
      (CNY-3208)

Changes in 2.0.47:
  o Bug Fixes:
    * Directory permissions are no longer unnecessarily updated if they
      have not changed. (CNY-3202)
    * A race condition in restoring files that share content has been
      fixed. The race involved changing the contents of the restored
      file before references to that file are restored. (CNY-3203)

Changes in 2.0.46:
  o New Features
    * If python-keyutils is available, cvc will try to interact with
      the user's session keyring. (CNY-3190)
    * Conary now uses xz in preference to unlzma to decompress lzma
      data. (CNY-3194)
    * A new function, parseChangeSpec, that parses a single trove
      update specification such as name=ver1[flv1]--ver2[flv2], was
      added to cmdline.py. (CNY-3197)

  o Internal Changes:
    * The code path leading to getChangeSet was reworked to use
      significantly fewer repository calls, resulting in a massive
      speedup for uncached, large requests.

  o Bug Fixes:
    * PGP passphrases, required for signing troves, are now fetched
      using a callback. (CNY-3189)
    * Repositories running on postgresql can properly handle queries
      for labels sharing the hostname portion. (CNY-3192)
    * The sha1 for files in a repository could be improperly left as
      NULL for some cases involving shadows. This has been fixed,
      and migrating existing repositories to version 17.3 will fix
      existing missing sha1 checksums.
    * Group pre-execution scripts now run exactly before any package
      that is part of the group. Previously, pre-execution scripts
      were run at the very beginning of the update, where the
      probability of their interpreter not being installed was high,
      especially for pre-install scripts. (CNY-2705)
    * Group pre-execution scripts no longer unnecessarily fetch
      information they already have from the repository. (CNY-3196)
    * Password information for XMLRPC server URLs is now hidden in
      tracebacks. (CNY-3198)

Changes in 2.0.45:
  o New Features:
    * The standalone Conary repository server now prints a message if
      it fails to import the Conary REST api.
    * Added the restore command, which restores file ownership to troves
      from which they were removed (because of a remove operation or
      --replace-files).
    * The addGitSnapshot action now accepts a branch= argument.
      (CNY-2368)

  o Internal Changes:
    * Fetching path hashes from a changeset now uses absolute trove info
      when available (which it is for any recent enough server), instead
      of merging differential trove info with database trove info, which
      significantly speeds up update planning.
    * Database operations now use the TRUNCATE command where available,
      which may speed up some repository queries.
    * An internal API used for emulating repository access by certain
      roles previously did not function when given a specific set of
      roles; this has been corrected.

  o Bug Fixes:
    * A consistent exception is now raised when bad XML-RPC data is fed
      into conary's parser on systems without the sgmlop package
      installed. (CNY-3180)
    * An error in handling queries for labels sharing the host name
      component has been fixed. (CNY-3187)

Changes in 2.0.44:
  o New Features:
    * Conary can now be configured with a set of certificate authorities
      (trustedCerts) against which all secure repository access will be
      validated. (CNY-2735)
    * Conary now logs the starting, output, and error exit codes of
      trove scripts to the /var/log/conary file. (CNY-3150)
    * The "conary updateall" command now honors the --just-db
      option. (CNY-3167)
    * The EULA_Conary.txt file has been renamed to
      EULA_Conary_Dual_License.txt in order to highlight the contents
      of the beginning of the file, which describe a choice of license
      terms.  The contents of the file are not changed, and the licenses
      under which Conary may be used are not changed. (CNY-3168)
    * The SetModes build action now takes an optional allowNoMatch
      keyword argument, that causes a warning to be printed instead of
      failing the build when the target file does not exist. (CNY-3171)

  o API Changes:
    * Added removeInvalidRollbacks() to client API. (CNY-2933)
    * The conary.lib.mainhandler.MainHandler.main() method now sets
      sys.excepthook only if the setSysExcepthook method variable
      is True (as it is by default), allowing subclasses to take
      responsibility for setting sys.excepthook differently. (CNY-3170)

  o Bug Fixes:
    * An internal function used for installing files no longer leaks a
      file descriptor on error. (CNY-3152)
    * Unknown errors while retrieving PGP keys for archive verification
      are now gracefully handled. (CNY-3120)
    * The cvc refresh command now ignores negative cache entries.
      (CNY-3157)
    * The cvc sign command properly handles keys specified by key ID, in
      addition to fingerprints. (CNY-3139)
    * The conary updateall --items command now honors --labels,
      --full-versions and --flavors flags. (CNY-3138)
    * The --lsprof option now writes out profiling information even if an
      exception occurs, for both the conary and cvc commands.
    * Dependency numbers in temporary dependency checking tables no longer
      overlap dependency numbers in the persistent database.
    * Dependencies with multiple flags previously were not marked as
      satisfied during dependency resolution passes, forcing extra work
      on subsequent passes.
    * Local rollbacks previously failed to restore contents when a file's
      metadata changed but the contents stayed the same.
    * Generating local rollbacks previously failed for non-root users when
      the file was unreadable due to permissions.
    * The ccs2tar script uses tarfile.open() in a way that is compatible
      with both python 2.4 and 2.6 (CNY-3160)
    * Brace expansion produces results similar to bash. (CNY-3158)
    * Trove searches with invalid (non-ASCII) input no longer cause a
      crash on PostgreSQL-backed repositories. (CNY-3165)
    * Flavor processing in depSetFreeze previously did not properly handle
      return codes from depFreezeRaw, which could lead to a segmentation
      fault. (CNY-3166)
    * Path normalization no longer produces erroneous double-slash entries
      in /etc/ld.so.conf. (CNY-3142)
    * Accessing a server through a Conary proxy that injects entitlements
      now correctly forces the use of SSL. (CNY-3176)

  o Internal Changes:
    * Update handling now looks for preerase trove scripts in the local
      database instead of instantiating full troves from the database and
      looking in those troves.
    * Dependency tables for removed troves are no longer dropped and
      rebuilt during each iteration of dependency solving; they are now
      incrementally built during subsequent iterations.
    * Dependency ordering code now looks in the local database for trove
      references instead of instantiating troves to get that information.
    * Code which decides what referenced troves need to be erased when
      collections are erased now:
        - looks in the local database for trove references instead of
          instantiating troves to get that information.
        - batches reference checks, pin checks, and presence checks
          across troves instead of checking those for each trove
          individually.
    * Fast-pathed code which matches old troves with new troves for the
      case where only a single old trove and a single new trove with
      a given name exist.
    * Graph calculations for dependency ordering now only occur when the
      results are needed instead of for every pass through the dependency
      resolver.
    * Reworked rdiff to not download a full changeset from the
      repository. It now downloads only the config (text) files and diffs
      them on the client. This allows it to show diffs for changes across
      repositories and yields a nice speedup. (CNY-3039)
    * Reworked "conary remove" functionality to generate a changeset for
      the file remove and commit that through the normal update path.
    * During dependency checks for new troves, Conary no longer includes
      every trove which requires a given dependency in the SQL tables.
      Instead, it includes that dependency only once and expands the
      matched requirements when we order troves (which is the only time
      it matters).
    * Added simple caching of path hashes from the database to improve
      performance of large system updates.

Changes in 2.0.43:
  o Internal Changes:
    * Additional information is now included when Conary receives
      corrupt changesets, to assist in diagnosing the cause of
      the changeset corruption. (CNY-2629)

  o Bug Fixes:
    * File paths from changesets are now properly normalized, and the
      rest of the code correctly handles the single-slash prefix in
      the case of installing to the main root directory. This fix
      completes the change introduced in Conary 2.0.41 and reverted
      in Conary 2.0.42, that caused tag handlers to malfunction
      when run by Conary 2.0.41. (CNY-3142)
    * Conary now puts libtool .la files in :devellib components
      by default, rather than in :lib components, for better
      multilib development environment support. (CNY-3143)
    * An internal function, mkdirChain, used to create directories,
      could be subject to a race condition on Python 2.4. This has
      been corrected. (CNY-3145)
    * The documentation for the mode= argument to several build
      actions has been improved to make it clearer to specify an
      octal number. (CNY-3146)
    * The cvc refresh command properly handles URL strings that contain
      username and password specifications. (CNY-3108)

Changes in 2.0.42:
  o Bug Fixes:
    * A previous change that normalized paths before being passed into
     tag handlers has been reverted. (CNY-3141)

Changes in 2.0.41:
  o Bug Fixes:
    * When a derived packages was created incorrectly, Conary could
      sometimes trace back; in these cases, Conary will now print a
      more useful error message. (CNY-3125)
    * Displaying the output from verify spent a significant amount of time
      querying repositories for information which was available in the local
      database. All data accesses for verify are now satisfied locally
      for a significant (10x) speedup in performance).
    * The output for conary verify is more succinct; instead of two
      summary lines per component validated, it now prints one line
      per component that has differences to display. (CNY-2419)
    * Using --verbose on verify now gives some progress indication.
    * Removed improper options for localcs from the man page.
    * Verify significantly sped up.
    * Turned off threading in recreatedb, because threading broke
      for some manifests. (CNY-3128)
    * Rewrote SQL query which removes old dependencies for better performance.
    * The cvc file cache now understand file mode changes as well as 
      content changes. (CNY-3082)
    * Key signatures for archives in source components are no longer checked 
      when the source is in the repository, but rather checked at commit
      time. (CNY-3130)
    * Fixed bug which caused files to be dropped from builds when two
      paths shared the same pathId somewhere in the history of that
      trove. (CNY-3133)
    * Updates and local changeset generation handle troves with renames,
      though cases with multiple versions of such troves being installed
      simultaneously have known shortcomings. (CNY-3134)
    * Updating source directories to versions which added or removed a
      factory now updates the CONARY file properly. (CNY-3073)

  o New Features:
    * Verify now relies on file size and mtime to determine whether files
      have been modified.  The --hash option has been added to verify to
      force sha1s to be used instead.
    * The system database can now return file objects along with troves
      to avoid double walking of the file tables.

  o Internal Changes:
    * TroveSource.walkTroveSet now walks troves in a sorted, depth first order.

Changes in 2.0.40:
  o Bug Fixes:
    * keepRequired now recognizes that local troves may have had files
      removed, preventing file conflicts with incoming troves
    * Fixed formatting error in cvc explain that caused policy actions to be
      listed twice. (CNY-3107)
    * Conary ignores configuration file errors for certain local
      operations including conary query, rblist, and showcs. (CNY-3111)
    * Python flags on a Requires dep now use exactly the flags on the 
      corresponding Provides, rather than being trimmed to match flags on
      python:runtime's Requires deps. (CNY-3030)
    * Disallow characters '"\\()[] in labels

  o New Features:
    * Added getLabelsForHost call, and bumped server protocol to 66. (CNY-2771)
    * Added getFilesFromTrove call, and bumped server protocol to 67. (CNY-3100)
    * Repositories now check the database to see which files already exist
      instead of looking in the filesystem for a noticeable speedup in commit
      time for systems with NFS based data stores.
    * In a GroupRecipe, r.remove now takes a use flag to determine if a trove
      should be removed. This matches the behavior of r.add*. (CNY-3115)
    * Added types to allow creation of sockets and named pipes via
      conaryclient/newtrove.py code paths
    * The "migrate" command now accepts the "--from-file" option (CNY-3114)
    * Standalone and apache servers now pull in REST api from the crest
      project if the code is available. Note that restlib and xobj are
      required for the crest implementation, and that the "baseUri" must
      be specified in the server config file (it's normally /conary).
    * Repository commits now take advantage of knowing which parts of the
      commit have not changed since the old version for better performance
    * The internal OpenPGP implementation can now change passphrases
      on secret keys. (CNY-3123)

Changes in 2.0.39:
  o Bug Fixes:
    * Fixed potential segfault in sqlite bindings when running under
      python 2.6. (CNY-3103)
    * Promoting a binary foo from a to b, and then promoting a group containing
      foo from b to a will no longer cause foo to be unnecessarily repromoted.
      (CNY-3088)
    * Fixed an interaction with loadRecipe overrides used by rmake and
      autoloadRecipes that would cause rmake to not find any matches
      for autoloadRecipes that were included in biarch flavored superclasses.
      (CNY-3090)
    * Redirect components should not have build requires set (CNY-3069)
    * Updates are no longer halted by the signal SIGWINCH, or SIGURG, which are 
      normally ignored. (CNY-3098)
    * getTrovesBySource now returns a list of the accessible binaries associated
      with a source even if the source is not accessible. (CNY-3099)
    * Changeset-based migrations no longer fail when a flavor is dropped
      from the group that is being migrated. (CNY-3101)

  o New Features:
    * Attempting to promote a binary will no longer reclone the binary 
      if a binary is already the latest at the target branch, even if
      there is a later source committed on the target branch. (CNY-3089)

Changes in 2.0.38:
  o Bug Fixes:
    * Conary versions 1.1.20 (April 2007) through 2.0.37, inclusive, use a 
      SHA256 implementation provided by the pycrypto package, which contained 
      an implementation that generates faulty digests for certain message 
      lengths. To compensate, a backward compatibility module that implements 
      bug-for-bug compatibility with the incorrect SHA256 algorithm has been
      added, in order to inter-operate (generate and validate signatures) 
      with Conary versions which use the incorrect SHA256 implementation 
      in pycrypto. (CNY-3086)
           
Changes in 2.0.37:
  o Bug Fixes:
    * Resolved a bug introduced in the 2.0.36 sha1Uncompress function
      that could cause update operations to fail. (CNY-3084)

Changes in 2.0.36:
  o New Features:
    * Policy can now be added per distribution in the directory
      /usr/lib/conary/distro/policy. (CNY-3071)

  o Bug Fixes:
    * More fixes for flavored superclass groups - you can now commit
      recipes when autoloading flavored superclass groups. (CNY-3061)
    * Schema migrations are now transactional, meaning that any failure
      during migration will roll back cleanly where possible. (CNY-2789)
    * If a user removes a file, and then recreates the file as a
      directory, the warning message previously did not include the
      affected path.  This has been fixed. (CNY-3076)
    * Path conflicts generated during group cooks correctly print. (CNY-3079)
    * You can now display buildreqs using --show-buildreqs for other
      types of recipes other than packages (CNY-3075)
    * You can now add archives with files with % in them when perserving 
      ownership. (CNY-3080)
    * All troveInfo is now used to calculate a changeset fingerprint, 
      regardless of the client version specified.  This allows a proxy 
      to expire its cached version when extended trove info is 
      updated. (CNY-3083)
    * Bugs that could cause erroneous error messages in
      conary.lib.misc.sha1Copy() and conary.lib.misc.sha1Uncompress()
      have been fixed.

Changes in 2.0.35:
  o Bug Fixes:
    * setTroveInfo no longer sends extended metadata information to 
      update services that cannot understand it. (CNY-3050)

Changes in 2.0.34:
  o Bug Fixes:
    * You can now have flavored groups for superclass groups - these can
      be created when superclass groups are created as a part of another
      group recipe. This release includes additional fixes over
      those added in 2.0.33.  (CNY-3061)
    * Post-mortem debugging sessions with recipes using --debug-all now start 
      at the point of the innermost exception, making debugging easier.

Changes in 2.0.33:
  o New Features:
    * When adding an XML file (filename ending in ".xml") to a source
      component, it will be added as a text (config) file by default,
      and so changes will be managed with diff/patch merging.  Specify
      the --binary option to avoid merging. (CNY-3045)
    * When adding groups via addAll, conary now reports the exact
      name, version, and flavor of the group being added. (CNY-2977)

  o Bug Fixes:
    * Fixed reporting of errors when using glob objects in actions such as 
      r.Remove. (CNY-3055)
    * Promotion of source components where files have been renamed across
      repositories has been fixed. (CNY-3059)
    * Preserving ownership in tar archives containing files with missing
      intermediate directories now functions. (CNY-3060)
    * Added support for python module discovery in python 2.6, which 
      uses a new PREFIXES variable to determine where to search for modules.
      (CNY-3063)
    * Metadata promotion is more robust in the context of other inaccessible
      or missing older troves. (CNY-2611)
    * Promotion of inidividual components is no longer allowed. (CNY-2941)
    * Fixed a case conaryclient.makeSourceTrove could fail to create
      a trove because it tried to assign it a previously existing version.
      (CNY-3028)
    * You can now have flavored groups for superclass groups - these can
      be created when superclass groups are created as a part of another
      group recipe.  (CNY-3061)
    * A bug that caused an IOError when a repository attempted to
      commit a changeset larger than 2 GiB has been fixed (CNY-3065)

Changes in 2.0.32:
  o New Features:
    * FlavorPreferences now handle s390{,x}. (CNY-3056)

  o Internal Changes:
    * Extended traceback representations display longer strings. (CNY-3053)

  o API Changes:
    * Extended logic in deps.getShortFlavorDescriptors to handle cases where
      prefers vs requires needs to be distinguished. (CNY-3054)
    * checkin.refresh is now a developerApi and takes a new dirName
      parameter. (RBLD-139)

  o Bug Fixes:
    * Git no longer defaults to the master branch, so we now specify the 
      branch when pulling. (CNY-3012)

Changes in 2.0.31:
  o Client Changes:
    * addMetadataItems() automatically creates digests
    * MetadataItem.freeze() no longer creates metadata digests
    * Metadata now has a version 1 digest computed only if it includes
      extended metadata

  o Server Changes:
    * Hide extended metadata from old clients (CNY-3050)
    * addMetadataItems() now rejects metadata items which don't have digests

Changes in 2.0.30:
  o Internal Changes:
    * Refactored the code used for cvc diff and cvc rdiff to provide
      an internal iterator interface that does not directly print
      output, for rBuild. (CNY-3043)

  o Bug Fixes:
    * On multiarch systems, a repository query for all versions of a trove
      could prefer an x86 troves over a multiarch trove, if the x86 flavor
      scored higher against the system flavor (CNY-3041)
    * Conary would unpack 64 bit integers incorrectly on platforms where
      long was 64 bits instead of 32 (CNY-3042)
    * Conary unpacked 16 bit values by treating them as 32 bit values,
      which broke on big endian machines (CNY-3042)
    * Disallow empty trove names and component names
    * Metadata now allows new types to be added, and key/value metadata
      is a new type. Without this troves with key/data metadata attached
      were unuseable by older versions of conary (CNY-3040).
    * Added a new signature type which includes new metadata types.
    * Made Trove.verifyDigests() verify signatures of metadata.
    * A bug that caused python dependencies to not be discovered when
      using alternate versions of python has been fixed (CNY-3029).

Changes in 2.0.29:
  o New Features:
    * cvc diff now optionally takes a set of files to diff.  Note that
      providing a revision now requires the --revision argument, to
      differentiate revisions from files. (CNY-2384)
    * Added --build-log and --show-file parameters to conary rq. (CNY-2584)
    * Group, Fileset, and Redirect recipes now check and record build 
      requirements. (CNY-3016)

  o Client Changes:
    * Support for obtaining changeset fingerprints has been added to
      the network repository client.
    * Transient files whose contents have changed will be restored if the
      file had been previously removed from the local system (CNY-2987)
    * generateStatus() call didn't handle a root parameter properly. This
      didn't cause cvc problems, but didn't work properly within rbuild
      (CNY-3026).

  o Server Changes:
    * Code using a shim client can now more securely "imitate" a user by
      passing in a ValidPasswordToken object in lieu of the actual
      password. (CNY-2968)
    * Writing files into the content store now decompresses and validates
      the sha1 once instead of once per content store. Additionally, file
      creation and the sha1 computation are now done in C instead of python.
    * Significantly reduced the number of SQL queries used to commit groups
      to repositories for a noticeable improvement in commit performance.
    * Temporary tables for commits of collection and files are merged into
      the final tables at the end of the changeset commit instead of
      incrementally following each trove.
    * The original client IP is now used for logging and
      authentication when a request is received from a HTTP proxy.
      (CNY-3006)

  o Bug Fixes:
    * ABI dependencies are no longer checked on erase. (CNY-2991)
    * createSourceTrove now honors filestreams marked as config. (CNY-3011)
    * Subscribing to log messages now works with a system time
      that requires more than 10 characters to represent the seconds
      (after Saturday November 20 2286 17:46:39 UTC). (CNY-3019)
    * Committing now works through restrictive proxies. (CNY-3032)
    * A bug that manifested itself as a TroveNotFound when accessing
      multiple repositories through the same url has been fixed. (CNY-3027)
    * A bug that caused conary to segfault while creating changesets under
      python 2.6 has been fixed. (CNY-3033)
    * An API method nologUpdateSrc has been added, which raises exceptions
      instead of returning None to indicate failure as the old updateSrc method
      did.  (CNY-3035)

Changes in 2.0.28:
  o New Features:
    * Groups now support pre-rollback scripts. (CNY-2908)

  o Server Changes:
    * Added paranoidCommits option which checks trove data has been stored
      properly in the SQL database before allowing the commit to complete.

  o Bug Fixes:
    * Fixed handling of troves erased by an update job which satisfy
      dependencies of packages being installed, so that an error
      message is given instead of an assertion being raised (CNY-2996).

  o Build Changes:
    * The default build requirements for rmake have been added to the
      BaseRequiresPackage base class to allow rMake to build against non-rPath
      Linux platforms (CNY-3005).

  o Other Changes:
    * New PGP signing keys have been added.

Changes in 2.0.27:
  o New Features:
    * Metadata information can now be extracted from debian packages.
      (CNY-2995)

  o Client Changes:
    * The "conary rollback" command now handles --info and --interactive
      flags, which behave similarly to the "conary update" flags. (CNY-820)

  o Bug Fixes:
    * Conary no longer checks for the existence of a db journal on startup,
      making it possible to perform cvc operations while updating your
      system. (CNY-2958)
    * Files with (only) unsatisfied Java requirements that are filtered
      out using r.Requires(exceptDeps) no longer have their provides
      removed. (CNY-3001)
    * A bug that caused the frozen list of trove script compatibility
      information (created if using the "toClass=" keyword argument
      when adding a trove script) to be recorded in a random order has
      been fixed.  Because sorting the list causes a different Trove
      signature digest to be generated, this version of Conary
      introduces version 2 trove signatures.  Conary will ignore
      version 1 trove signatures on old troves that have multiple
      trove script compatibility entries.  (CNY-2997)
    * Conary ignores journal if the database is currently being locked
      by an update.  Its existence does not signify a failed update,
      but rather a currently running one. (CNY-3008)


  o Build Changes:
    * A new type of metadata information, storing key-value pairs,
      is now available. (CNY-2983)

Changes in 2.0.26:
  o Build Changes:
    * The way that factories are cooked has been changed so that buildRequires
      are set (for building in rMake) and so that platforms may override the
      default build requirements. (CNY-2986)

  o Bug Fixes:
    * A bug causing cooks to fail when Perl was not installed on the
      build system has been fixed. (CNY-2989)
    * A bug that prevented Java dependencies from being parsed
      correctly in some cases, for example when given on a "conary rq
      --what-provides" command line, has been fixed.  Previously a
      "bad java dependency: flags required" error message was
      generated. (CNY-2990)

Changes in 2.0.25:
  o Bug Fixes:
    * "conary emerge" no longer emits warnings. (CNY-2835)
    * A bug that prevented proper ownership and permissions from being
      recorded when using r.addArchive(..., perserveOwnership=True)
      and the archive had a prefix of "./" has been fixed.
      Additionally, a bug that could cause permissions to be assigned
      to files with similar paths as those created by addArchive has
      been fixed. (CNY-2953)
    * Promote in 2.0.24 could traceback instead of printing an error message
      if no troves were present to clone.
    * A bug causing addSource to use the wrong file if there was a name
      collision between a filename in an rpm and the source directory
      has been fixed. (CNY-2627)
    * A bug causing createNewSourceTrove to erroneously change pathIds
      has been fixed. (CNY-2971)
    * When installing with the --root option and a trailing '/'
      character provided, Conary previously wrote new entries
      in the ld.so.conf without a leading '/' character.  This
      has been fixed. (CNY-2982)

  o Build Changes:
    * Cross-compiling packages that include perl modules can now
      provide perl: dependencies; the perl @INC path needs to
      be provided via the r.Requires(bootstrapPerlIncPath=...)
      keyword argument. (CNY-2943)
    * Packaging a version of perl that requires libraries in the
      destdir to start but does not use RPATH now succeeds. (CNY-2955)
    * When the perl @INC path includes elements that are symlinks in
      the destdir, the symlinks are now resolved for correct perl:
      provides. (CNY-2949)
    * When discovering perl: dependencies using a bootstrap perl,
      Conary now sets LD_LIBRARY_PATH. (CNY-2959)
    * ComponentRequires now handles :cil, :java, :perl, :python, and :ruby
      components in the same manner it handles :lib. (CNY-2935)
    * The r.addArchive() method can now extract file contents from
      dpkg .deb files when the data is bzip2-compressed. (CNY-2967)
    * Promote now uses hasTroves to check to check the completeness of a
      promote instead of fetching group troves for improved performance.
    * Builtin recipes have been broken out so that there's no need to
      commit conary internals to repository based recipes. BaseRequiresRecipe
      has been introduced. (CNY-2898)
    * Files in /var/log, /var/run, and /var/cache are now automatically marked
      InitialContents. (CNY-2578)
    * Explicit calls to r.Requires are now honored in derived recipes.
      (CNY-1760)
    * The r.addArchive() method can now extract control contents from
      dpkg .deb archive files. (CNY-2967)

  o Client Changes:
    * Shim commitChangeSet() and getFileContents() calls now fall back to
      network access properly

  o Server Changes:
    * Added --lsprof argument to standalone server
    * If a user's mirror permission was granted by the second or subsequent
      role, the anonymous permissions were inappropriately granted to the user
      (CNY-2964)

  o Internal Changes:
    * Reimplemented dependency freezing in C
    * DependencySet objects now store the frozen depenedency by default
      and thaw it only when the thawed objects are needed (CNY-2410)
    * Intern frozen dependency and frozen StringCollection strings (CNY-2410)
    * DependenciesStream and FlavorStream objects now subclass from
      DependenciesSet instead of having a DependenciesSet object as an
      attribute. This saves one object per instance. (CNY-2410)

Changes in 2.0.24:
  o New Features:
    * includeConfigFile now interprets paths relative to the file
      currently being processed, for files and URIs. (CNY-2950)
    * includeConfigFile now supports a ~/path syntax to substitute the
      current user's home directory. (CNY-1650)

  o Client Changes:
    * Added support for getFileContents call to ShimNetClient (CNY-1669)
    * Added support for commitChangeSet and commitChangeSetFile to
      ShimNetClient (CNY-2545)
    * During promote operations use the cloned history for packages for
      the components of those packages as well. (CNY-1867)
    * Promote now uses group weak references to learn about all of the
      components for a package instead of downloading all of the package
      troves for the source. (CNY-1867)

  o Bug Fixes:
    * The ccs2tar script now correctly handles changeset files containing
      directories, symlinks, and other non-regular files. (CNY-2954)

  o Internal Changes:
    * More of the file installation path was moved into C for improved
      performance
    * Added misc.pack() and use it to freeze TroveRefsFilesStream and
      StreamCollection objects
    * Initial step of promote takes advantage of weak references to avoid
      downloading so many packages (CNY-1867,CNY-2410)
    * The shim network client now supports CONARY_CLIENT_LOG environment
      variable
    * Conary update no longer caches all hostnames immediately on
      update - instead hostnames are cached as they are accessed.  This
      avoids unnecessary caches when installing from changesets. (CNY-2832)
    * Track CLONEDFROMLIST in troveInfo now as well as CLONEDFROM. This
      keeps track of the full clone history of a trove, with the most
      recent parent at the end of the list.
    * Use CLONEDFROMLIST instead of CLONEDFROM where available to remove
      the need to follow the cloned from history in time. (CNY-1867)

Changes in 2.0.23:
  o New Features:
    * A new commitaction module that logs to a database the results of
      all commits in to a repository has been added as logaction.py 
      (CNY-2814, CNY-2849)
    * Some trove sources now deal better with being passed a trove name
      of None when using findTroves. (CNY-2923)
    * Added --replace-files, --replace-modified-files, replace-config-files,
      --replace-managed-files to updateall. (CNY-2512)

  o Build Changes:
    * Promote now uses the source trove for packages to determine the
      source trove for components instead of downloading the components
      themselves. (CNY-1867)
    * Promote no longer uses getTroves() to look up clone history; it uses
      getTroveInfo() instead. This provides a significant performance
      improvement as well as a significant RAM savings. (CNY-1867)
    * Checking for recloning (due to changes in referenced trove sets) now
      skips components, improving promote performance. (CNY-1867)
    * The file contents of dpkg .deb files can now be extracted by
      r.addArchive() (CNY-2926)
    * Conary now provides python: dependencies during incompatible
      cross-builds. (CNY-2914)
    * The Transient policy now follows packaging instead of walking
      the filesystem, avoiding inconsistencies caused by side effects
      of other policies. (CNY-2939)
    * When bootstrapping a python that is unable to load the pydeps
      module for python dependency discovery, fall back to the
      cross-compiling case. (CNY-2940)

  o Bug Fixes:
    * Recipes containing a mirror:// style source can be properly committed
      to the repository. (CNY-2848)

  o Internal Changes:
    * Moved findOrdering boolean into DependencyCheck object.
    * Cleaned up graph code during dependency checks to remove redundant
      calls in some (relatively obscure) cases.
    * Reworked MPI-to-long conversion to work on four bytes at a time.
    * TroveChangeSet objects in changesets are now sorted by the
      name/version/flavor of the new trove.
    * Thawing ReferencedTroveSet objects now looks up values with a single
      slice instead of one index at a time for a performance improvement.
    * Check the dependencyCache when thawing Dependency objects before
      thawing them instead of after (helping performance as well as memory
      usage).
    * Use a WeakValueDictionary for the dependencyCache instead of an
      ObjectCache.

Changes in 2.0.22:
  o Build Changes:
    * The loadSuperClass and loadInstalled methods now returns the loaded
      recipe class so that the loaded class can be referenced anonymously.
      This makes factories more flexible. (CNY-2900)
    * The addPatch source action now takes a "filter" keyword argument
      that provides a command line that can modify the patch; for
      example, by calling the filterdiff program. (CNY-2874)
    * Builds previously failed in some circumstances when Conary
      discovered no need only for :runtime components listed in
      buildRequires.  This has been fixed, and error reporting
      improved for similar classes of bugs in the future. (CNY-2904)

  o Client Changes:
    * The new boolean conaryrc option downloadFirst has been added to
      instruct Conary to download all required changesets from the
      repository before proceeding to update steps. (CNY-2808)

  o Bug Fixes:
    * Conary 2.0.20 introduced a bug adding dependencies to postgres-based
      repositories; this has been resolved.
    * Starting in 2.0.20, dependency resolution started locking the
      database unnecessarily.  This affected rmake dependency resolution,
      and is now resolved.
    * Mirroring code now correctly detects when access control changes
      in the source repository require the generation of absolute
      changesets for mirroring. (CNY-2888)
    * A permission check error for users that only have trove access
      entitlements has been fixed. (CNY-2761)
    * A problem with the autoLoadRecipes config option has been fixed.
      (CNY-2909)
    * A permission check problem when trove names are used as trove
      patterns in ACLs has been fixed. (CNY-2913)

Changes in 2.0.21:
  o Build Changes:
    * Added support for RPM payloads which have been compressed with
      lzma.  The /usr/bin/unlzma program must be available to use this
      feature.  (CNY-2834)

  o Client Changes:
    * Added separate s390x architecture. (CNY-2852)
    * An error introduced in 2.0.20 which caused an assertion failure during
      dependency checking has been fixed (CNY-2883)

Changes in 2.0.20:
  o Code Changes:
    * Dependency checking can now be run without computing the dependency
      order
    * Added closeDatabase parameter when creating an updateJob to prevent
      that updateJob from closing the database when it's destroyed. This
      is a workaround to support CNY-1834
    * Build dependency temporary tables incrementally instead of rebuilding
      them each time. This results in speedup for group building approaching
      50%.

  o Bug Fixes:
    * updates after a local update of a package that is referenced in
      multiple groups now function again. (CNY-2882)

Changes in 2.0.19:
  o Bug Fixes:
    * Removed unnecessary repository accesses that were occuring while
      determining local system changes during an update. (CNY-2876)
    * "import os" within recipes now functions again. (CNY-2879)

Changes in 2.0.18:
  o Protocol Changes:
    * The addRoleMember() and getRoleMembers() calls are now exposed
      via XMLRPC. (CNY-2862)
    * Added support for package creator specific data to trove info and
      the getPackageCreatorTroves() repository call (CNY-2855)

  o Bug Fixes:
    * A rare error that occurred when an updating containing several groups
      that contained different versions of the same package has been 
      fixed. (CNY-2860)
    * Some .car format files previously caused builds to fail; this
      has been corrected. (CNY-2871)
    * Tracebacks no longer print each filename twice (bug introduced
      in Conary 2.0.16). (CNY-2872)

  o Build Changes:
    * When the configure script run by r.Configure() or r.ManualConfigure()
      fails, "command not found" messages are highlighted, and possible
      missing buildRequires based on those messages are sought in the
      repository. (CNY-2708)
    * All missing buildRequires found by noticing programs used in source
      actions, build actions, and policies are reported immediately as well
      as summarized at the end of the build, to make it clearer why each
      requirement has been suggested. (CNY-2858)
    * The r.addPatch() method now takes an optional patchName keyword
      argument, which is the name of the patch program to use to apply
      the patch. (CNY-2858)

Changes in 2.0.17:
  o Build Changes:
    * Recipes loaded based on the autoLoadRecipe configuration directive
      are now ordered based on the loadedTroves list in the packages
      containing those recipes. (CNY-2694)
    * The information provided by the "cvc status" command is now
      available through the checkin.generateStatus API call, and
      it now handles new packages that have not yet been checked
      in. (CNY-2843)
    * The "cvc log" command now has a --newer option that prints
      only log messages that are newer than the current checkout,
      and has been modified to be consumable via a new
      checkin.iterLog API call. (CNY-2840)
    * Building factories which haven't been checked in should work now
      (CNY-2757)
    * Specifying checkDeps and resolveDeps no longer causes an extra
      dependency check when building a group
    * Checking out a source trove without a buildLabel set, but with
      a version specified, no longer gives a confusing warning about
      the buildLabel being unset. (CNY-2783)

  o Bug Fixes:
    * A bug that caused a traceback when rolling back the installation
      of a group containing a post-rollback script has been corrected.
      (CNY-2844)
    * A bug that caused a traceback during metadata lookup when
      installing files to a new component has been corrected.  (CNY-2846)
    * A bug causing magic to identify almost every file as a tarfile
      has been fixed. (CNP-135)
    * When rolling back an update started with Conary version 2.0.15 or
      older, that generated multiple rollback points (generally as a
      result of the presence of critical updates as part of the job),
      the rollback scripts are properly executed. (CNY-2845)
   
  o Server Changes:
    * The deleteUserByName() xmlrpc call now only deletes the role
      with a matching name on very limited situations (CNY-2775)

Changes in 2.0.16:
  o Code Changes:
    * magic has been extended to identify tar archives. (CNY-2825)

  o Bug Fixes:
    * Derived packages created from an unmodified shadow now choose
      the correct binary from which to derive. (CNY-2776)
    * A bug that caused conary to traceback when formating strings in the
      syslog logger has been fixed. (CNY-2689)
    * A workaround for a bug in the standard python library that can
      prevent the display of extended debugging information has been
      added.
    * Unmodified shadows will be recognized as already present when
      promoting them to their parent branch.  Previously they would be 
      re-promoted unnecessarily. (CNY-2837)
    * conary update --test no longer executes the tagscripts associated 
      with the update. (CNY-2800)
    * Multi-stage rollbacks correctly execute the post-rollback script
      after all affected troves have been rolled back, instead of between
      stages. (CNY-2829)

  o Build Changes:
    * Info recipe actions (r.User, r.Group, and r.SupplementalGroup) are
      now available in package recipes. (CNY-2723)
    * Python packages now use %(libdir)s instead of %(prefix)s/lib for pure
      Python libraries.  This is an artifact left behind from fixing CNY-2110
      and CNP-121.
    * A bug causing log output to be lost if conary's log module was
      imported in a recipe has been fixed. (CNY-2813)

  o Server Changes:
    * Testing the HTTPS environment variable to know whether a
      connection is secure is now case-insensitive, because existing
      implementations differ in case. (CNY-2838)

Changes in 2.0.15:
  o Code Changes:
    * We've started using a @publicApi decorator to tag methods which
      are part of the public conary API. (CNY-2367)
    * xmldata.py is no longer part of the Conary library. (CNY-2765)

  o Bug Fixes:
    * An incompatibility of the db2db migration script with the latest
      repository schema has been corrected. (CNY-2774)
    * An error in the handling of multiple URLs with addArchive has
      been fixed. (CNY-2778)
    * sys.argv is not defined under mod_python; importing cvc.py should
      no longer fail as a result of using sys.argv as a default argument
      to main(). (CNY-2786)
    * kernel:runtime is no longer included as a critical update when
      updating conary, because we no longer use abi dependencies to order
      updates.  (CNY-2787)
    * repository code handles correctly the removal of groups that
      include troves from other repositories. (CNY-2802)
    * When using sqlite, some temporary tables used the invalid column
      datatype of STRING instead of TEXT. This has been fixed. (CNY-2013)
    * Fixed bug that made the repository code return incomplete data
      for the getPackageBranchPathIds call in certain situations. (CNY-2810)

  o Build Changes:
    * Removed defaultBasePackages configuration option as well as the
      functionality for loading recipes from the filesystem based
      on configuration.
    * Reworked recipe loading to make the code more understandable.
    * Implemented autoLoadRecipes configuration option. (CNY-2694)
    * Using the byDefault parameter to startGroup only determines the
      byDefault setting when the new group is added to its parent group.
      (CNY-2791)

  o Protocol Changes:
    * The commitCheck() xmlrpc API call has been added that will check
      commit permissions for a trovelist before having to send the 
      changeset for commit (CNY-2683)
    * The getPackageBranchPathIds xmlrpc API call accepts now a list of 
      dirnames instead of prefixes for improved performance (CNY-2743)

  o Client Changes:
    * Added an option --exclude-groups to promote that allows the promotion
      of all the packages within a group without the promotion of the group
      itself. (CNY-2801)

Changes in 2.0.14:
  o Bug Fixes:
    * A bug causing python-setuptools to incorrectly appear to be an
      excessive build requirement has been fixed. (CNY-2738)
    * A bug in which python-setuptools was sometimes incorrectly not
      recognized as being needed in buildRequires has been fixed. (CNY-2772)
    * A regression has been fixed that caused rMake to abort when recursing
      through a group recipe that added troves with full versions. (CNY-2768)
    * When reporting possibly excessive buildRequires, not mentioning
      buildRequires at all in the recipe caused Conary to report the
      immediate superclass's buildRequires as the recipe's buildRequires.
      This bug has been resolved. (CNY-2769)
    * A bug that caused the --context flag to not be recognized when
      specified before a command has been fixed. (CNY-2770)
    * A bug that caused buildRequires calculation in TagSpec to be slow has
      been fixed. (CNY-2773)

Changes in 2.0.13:
  o Build Changes:
    * When cooked, factories can now package additional files in their
     :recipe component. (CNY-2748)
    * Moved VersionConflicts to pluggable policy and removed default
      exceptions. (CNY-2716)

  o Client Changes:
    * PGP Keyring location is no longer determined using $HOME, which
      is unreliable; a getpwuid(3) lookup is used instead. (CNY-2722)
    * The number of retries for providing a passphrase when signing
      troves changed from 3 to 5. (CNY-2709)

  o Code Changes:
    * Some incompatibilities with python2.5 have been removed.

  o Bug Fixes:
    * More optimizations for the pathId lookup query times for some
      package builds. (CNY-2742)
    * A bug that caused an InsufficientPermission error when a user
      only has repository access permissions added by trove calls
      getNewTroveList() has been fixed. (CNY-2755)
    * A bug that caused a request to add access to a trove for a role
      to be ignored if the same trove was used previously to grant
      access to a different role has been fixed. (CNY-2758)
    * A bug that caused an InsufficientPermission error when a user
      requests a changeset to which the user has been granted access
      with addTroveAccess has been fixed. (CNY-2760)
    * The XML writer in xmldata.py is now encoding using UTF-8.
      (CNY-2756)

Changes in 2.0.12:
  o Build Changes:
    * Conary now warns about some possibly unused build requirements.
      This requires conary-policy 1.0.16 or later. (CNY-2232)
    * Suggested additions to buildRequires lists are now separately
      encoded in the XML build log. (CNY-2621)
    * Loaded recipe modules are no longer tracked in sys.modules (RPL-2409)
    * The source components needed to build everything in a group can
      now be found when the group uses searchPaths. (CNY-2710)
    * The SubscriptionLogWriter (CNY-2622) sometimes caused builds
      to fail.  This issue has been resolved. (CNY-2717)
    * Group builds now store the searchPath used with the built troves in
      the repository. (CNY-2721)

  o Client Changes:
    * Conary will now re-read /etc/resolv.conf if an error occurs when
      resolving a hostname. (CNY-2703)
    * Conary now caches the result of IP lookups and uses the cached
      results if an IP address lookup fails during an update. (CNY-2260)
    * Migrate now preserves local installs only of groups and kernels.
      Before, all manually-installed components and troves that were
      referenced by the group being migrated would be updated instead
      of erased. (CNY-2569)
    * An API (the createSourceTrove() method of client objects) has
      been added which creates source troves without using the
      conary.checkin module. (CNY-2498)

  o Bug Fixes:
    * The internal function _ensureReadableRollbackStatus now directly
      ensures that it collects the necessary state it needs to succeed
      instead of relying on that state having been previously collected.
      (CNY-2711)
    * Conary repository migration from repository databases created by
      conary 1.2.x has been fixed. (CNY-2731)
    * In rare cases, some output could corrupt logging data during
      builds.  This has been fixed. (CNY-2734)
    * MySQL performance when inserting troves with large numbers of
      files has been fixed. (CNY-2737)

  o Repository Changes:
    * The addUser() xmlrpc call no longer automatically creates a
      matching role. (CNY-2604)

  o Server Changes
    * The repository code and repository schema have been updated to
      allow for faster processing and lookup of file pathIds (CNY-2468)

Changes in 2.0.11:
  o Build Changes:
    * Added 'factory' command to cvc for displaying and changing the factory
      of the currently checked out recipe (CNY-2690)
    * The SubscriptionLogWriter now handles line continuation. (CNY-2693)

  o Bug Fixes:
    * A regression introduced by the build requirements suggestions for
      recipes using r.MakePathsInstall has been fixed. (CNY-2697)
    * A bug that caused a traceback when r.MakeDevices() is called
      with a path that contains 'lib' has been fixed. (CNY-2692)
    * A regression introduced by the multi-URL support for addArchive
      has been fixed. (CNY-2696)

Changes in 2.0.10:
  o Build Changes:
    * An xml formatted log has been added to :debuginfo. This is in
      addition to the human readable log. The xml log contains the same
      information as the human readable log, plus additional contextual
      information useful for formatting the log data. (CNY-2487)
    * AutoResolve defaults to True for image groups. (CNY-2291)
    * Exceptions and inclusions to policies that don't match anything
      will now emit an error. (CNY-2221)
    * A new selective logging facility for policy to use to inspect
      build output has been added. (CNY-2622)
    * It is now possible to pass a list of multiple URLs to addArchive.
      Conary will try to download the source from each URL, in order,
      until it succeeds. (CNY-2505)
    * Recipe actions have now the ability to suggest build requirements.
      (CNY-935)
    * Running "cvc cook" in a directory with a CONARY file now builds the
      sources specified by that checkout.  This is particularly useful for
      source troves which do not provide recipes thanks to a factory.
      (CNY-2642)
    * Conary now looks for factories in the same places it looks for
      superclasses, including the current working directory for local
      cooks. (CNY-2641)
    * Suggesting build requirements produces a warning if the supplied
      command cannot be found in the search path. (CNY-2663)
    * Skip FactoryRecipeClass when loading recipes to make it easier to
      develop factory recipes. (CNY-2666)
    * Checking out multiple sources with a single command line once again
      creates the CONARY files properly. (CNY-2645)
    * The addArchive source action now supports .war and .jar archives.
      (CNY-2684) 

  o Bug Fixes:
    * Previously, rollbacks could restore files from local rollbacks
      by overwriting existing contents rather than replacing the file.
      In addition, the operation was not journaled properly.  (CNY-2596)
    * A bug in finding the sources required to build all the packages for
      a group that omitted replace() packages has been fixed.  This mainly
      affected rmake builds of group recipes. (CNY-2605)
    * An error in the repository that caused a malformed exception to
      be returned to the client when a trove was missing has been
      corrected. (CNY-2624)
    * If launched with sudo, Conary will no longer change the owner
      on the user's PGP keyring, and will use the proper system-wide
      keyring. (CNY-2630)
    * When using PostgreSQL as a repository backend, some queries
      could be executed with poor execution plans (CNY-2639)
    * A bug that caused a local cook (e.g., "cvc cook pkg.recipe") to
      fail at "Copying forward metadata to newly built items..." when
      the Conary repository for that recipe is not available has been
      fixed. (CNY-2640)
    * Checking out source components which used factories now preserves
      the factory
    * Building directly from recipe files which use factories for superclasses
      now works (CNY-2656)
    * The conary rdiff command works correctly for groups that include
      troves from foreign repositories. (CNY-2544)
    * An issue related to the build logger not properly setting the
      logging pseudo-tty in raw mode has been fixed. (CNY-2647)
    * Conary can now parse perl dependencies with periods in them from
      the command line. (CNY-2667)
    * On failure, the proper URL is returned to the Conary client
      library. This fixes a regression introduced in the Conary 2
      codebase, where only the selector part of the URL would be
      returned. (CNY-2517)
    * A source of circular references which could cause unpredictable
      memory usage has been removed. (CNY-2674)
    * Tighten the rules for what characters are allowed in version strings
      (CNY-2657)
    * Fixed a file descriptor leak when using in-memory-only databases.
    * Performance problems when retrieving an uncached changeset with
      a Postgresql backend have a workaround (CNY-2695)

  o Client changes
    * More of the update logic is now protected by the filesystem journal,
      and the journal now cleans up rollback state on failure. (CNY-2592)
    * Conary now displays more progress information during the
      "Preparing changeset request..." phase.  Much of the time in
      this phase is spent communicating with the repository.  Now
      "Requesting changeset ..." and "Downloading" will be shown as
      data is transferred.

Changes in 2.0.9:
  o Bug Fixes:
    * A bug that occasionally caused a thread deadlock when multiple
      threads access the local system Conary database concurrently has
      been fixed. (CNY-2586)
    * Checking out sources unpacks duplicate binary files (CNY-2543)
    * Derived packages use the revision which was shadowed from to find
      the version to derive from instead of the latest on the branch
      (CNY-2577)
    * A bug that occurred when rMake recursed through a group recipe
      that made use of the replace command has been fixed. (CNY-2606)

Changes in 2.0.8:
  o Client Changes:
    * A close() method has been added to UpdateJob objects. It is
      recommended to call the method explicitly instead of relying
      on the object to be collected when going out of scope.
      (CNY-2489)

  o Build Changes:
    * Group recipes now implement a requireLatest command. It can be
      passed as a keyword argument to r.add, r.replace, r.addAll, and
      r.addCopy.  This flag defaults to True. (CNY-1611)
    * requireLatest has also been implemented as a recipe level
      attribute.  Setting requireLatest to False for a recipe will
      affect the default for all calls to r.add, r.replace, r.addAll,
      and r.addCopy. (CNY-1707)
    * Conary now has support for group policies. Policies deriving from
      GroupEnforcementPolicy and ImageGroupEnforcementPolicy will be
      run on groups at the end of the cook process. (CNY-2378)
    * ImageGroup is now an attribute tracked in a group's troveInfo.
      This attribute is set for groups meant to define a complete,
      functional system, and implies that ImageGroupEnforcementPolicy
      group policies have been run for that group, recursively.
      (CNY-2520)
    * The VersionConflicts group policy has been added. This group
      policy enforces that two different versions of a trove will not
      be accidentally included in one install image. (CNY-2371)
    * TroveFilters now exist. Trove filters allow a packager to
      reference particular troves within a group for group policy
      inclusions/exceptions. (CNY-2477)
    * The Conary policy to fix trailing newlines in config files has
      been corrected to handle non-writable config files. (CNY-2559)
    * Conary will now warn if the PGP keyring is not writable, and
      will continue, instead of stopping with an error. (CNY-2555)
    * The "cvc derive" command now creates a reference directory
      named _OLD_ROOT_ alongside _ROOT_ when the --extract argument
      is provided. (CNY-2530)
    * A new group recipe command, startGroup, has been added, which
      calls createGroup, addNewGroup and setDefaultGroup in one step.
      (CNY-2197)
    * The addCvsSnapshot source action no longer caches the HEAD of
      the repository, since cvs export will not use it. (CNY-2568)
    * Macros from config files and from the command line are now
      available to group recipes. (CNY-2574)
    * A new concept, recipe factories, has been implemented. (CNY-2549)
    * Binary packages built from superclass recipes will be unflavored,
      regardless of any flavor-related references in a recipe.
      (CNY-2576)

  o Bug Fixes:
    * Conary no longer loses ownership of changed files when updating
      multiple flavors of the same version of the same package at the same
      time. (CNY-2553)
    * If Conary is running on kernels which, under certain circumstances,
      return EINVAL when calling poll(), the lazy file cache will only
      count the file descriptors it has open itself. (CNY-2571)
    * conary rdiff works correctly for groups that include troves from
      foreign repositories. (CNY-2544)
    * Job invocation information no longer uses null characters,
      which are not allowed in an XML document. (CNY-2580)
    * Updating files which point to other files (due to a PTR in the
      changeset) previously failed when those other files were not
      being installed at the same time (due to a "conary remove"
      on those files, for example). (CNY-2595)
    * Excluding all Java files in the r.Provides policy no longer
      produces a stack trace. (CNY-2594)

Changes in 2.0.7:
  o Build Changes:
    * Handling pkg-config dependencies has been moved to conary-policy.
      (CNP-93)

  o Bug Fixes:
    * When resuming the update after the execution of a critical update,
      Conary will now use the original file replacement flags. This
      corrects file conflict errors in a migrate when a critical update
      was present. (CNY-2513)
    * The lazy file cache was using /proc/self/fd as a method of
      determining the number of open file descriptors for the current
      process. However, under certain circumstances the directory is not
      readable. The lazy file cache now uses a poll(2)-based technique.
      (CNY-2536)
    * If the directory where the public keyring is stored does not exist,
      it is now automatically created. (CNY-2504)

  o Other changes:
    * Reading metadata from RPM files now validates the size of the RPM
      and the sha1 of the full set of metadata.

Changes in 2.0.6:
  o Build Changes:
    * Java dependencies for classes that are not dependency-complete
      are now automatically disabled. To re-enable them, the missing
      dependencies should be added as buildRequires. (CNY-2175)
    * Build actions that do not match anything (r.Move, r.Copy, etc.)
      will now log exactly what they were trying to do. (CNY-2216)

  o Bug Fixes:
    * A minor bug in the display of the password prompt has been fixed.
      (CNY-2497)
    * When x86_64 is specified and a biarch package is available, Conary
      will mention the biarch as an alternative flavor instead of the x86 one.
    * Derived packages will now work on x86_64 systems even if a biarch 
      flavor is specified. (CNY-2494)
    * Signatures of unexpected types on subkeys are now ignored. (CNY-2490)
    * When updating a group which contained a package that used to be
      byDefault False but is now byDefault True, Conary will now install
      the package. (CNY-2507)
    * When using the tagScript argument with the client's applyUpdateJob
      call, the paths to group scripts to be executed are stored relative
      to the root of the installation, instead of absolute. The tag
      script is always supposed to be executed under chroot. (CNY-2523)

  o Server Changes:
    * The serverName configuration option now allows glob-style
      wildcards.  (CNY-2293)
    * Slow SQL queries used to remove unused entries from the
      TroveFiles table and TroveTroves table have been rewritten to
      make some queries faster with repositories implemented with a
      sqlite database. (CNY-2515)

  o Other changes:
    * The file EULA_Conary.txt has been added to clarify that Conary
      is available under two licenses, and to state the conditions
      under which the two licenses apply.

Changes in 2.0.5:
  o Client Changes:
    * Conary now attempts to provide hints about flavor combinations that would
      work if it cannot find a flavor that matches your exact request 
      (CNY-1920).
    * The rollback API now raises a RollbackError instead of returning
      non-zero on errors. (CNY-1643)

  o Build Changes:
    * When file conflicts occur while cooking groups, the deps that
      caused a package to be pulled in are listed. (CNY-2308)
    * Config policy will automatically append a newline to non-binary files.
      Files that are marked as Config and appear to be binary will
      continue to trigger an error as they have previously. (CNY-2422)
    * Perl requirements that are not present on the system or provided by
      the package being built are dropped. (CNY-2180)
    * Two expansion functions have been introduced to package recipes:
      r.glob and r.regexp. These functions return an object that can be
      substituted for any API parameter that calls for a string based
      regexp or glob. (CNY-2222)
    * Group recipe actions like "r.addAll" and "r.addCopy" now record
      the version of the group that is being copied from into the newly
      created group. (CNY-2359)
    * Add code to display new-style metadata through rq, q, and showchangeset,
      as well as propagate that metadata via cooking, promoting, shadowing,
      and committing source packages.  Entering this metadata must still 
      be done through scripts.  (CNY-1808)
    * Added a hook that allows build requirements to be overridden by
      rMake. (CNY-2427)

  o Bug Fixes:
    * Conary no longer tracebacks when building a package that contains 
      a pkgconfig reference to a file in the current package that is in a
      symlinked directory. (CNY-2455)
    * The order in which configuration files are read when a glob was
      passed to includeConfigFile is now deterministic. (CNY-2483)

  o Server Changes:
    * Roles that have the mirror flag set no longer assume anonymous
      fallback for trove access authentication (CNY-2473)

Changes in 2.0.4:
  o Bug Fixes:
    * Moving an unmodified shadow to tip via cvc promote no longer causes
      an error. (CNY-2441)
    * Recipes using addSvnSnapshot no longer modify the conary
      configuration object's tmpDir setting (CNY-2401)
    * Fixed a rare bug in which dependency resolution would fail when
      a dependency that used to be provided by one installed package
      is now provided by two new packages. (CNY-2459)

  o Client Changes:
    * Conary will now use the proxy settings stored in its local
      configuration when loading remote configuration files. (CNY-2363)
    * PGP keys having some self signatures that fail to pass are
      no longer failing, as long as at least one self signature passes.
      (CNY-2439)
    * The client enforces the trust model using the internal
      implementation of OpenPGP. (CNY-1895)

  o Build Changes:
    * Policies that move files in destdir now track path changes they
      make so that files will end up in the correct package or component
      after being moved, when "package=" or "component=" has been used
      in a build action. (CNY-1679)

Changes in 2.0.3:
  o Build Changes:
    * PGP version 3 keys are now supported for verification of
      package signatures. According to RFC4880, version 3 keys are
      deprecated. (CNY-2420)
    * Superclasses are now loaded from the filesystem. Superclasses
      can now be cooked. Doing so will make a changeset that installs
      the recipe itself on the filesystem. (CNY-983)
    * When building packages, Conary now reads /etc/ld.so.conf.d/*.conf
      files to determine whether to include the path in the dependency.
      (CNY-2433)
    * The /etc/ld.so.conf.d/*.conf handling added to Conary 1.2.13
      introduced a bug that could erase necessary entries from
      ld.so.conf in some circumstances.  This bug has been
      resolved. (CNY-2440)
    * Spaces in URLs are now automatically escaped. (CNY-2389)
    * The Requires() policy now inspects Lib: and Lib.private:
      pkg-config keywords in .pc files to find library files, and
      where it finds them, it adds appropriate Conary trove
      requirements to the .pc files. (CNY-2370)

  o Client Changes:
    * The implementation of the util.mkdirChain function has been
      changed to no longer use exceptions internally to signal that the
      directory already exists. Raising exceptions is a relatively
      expensive operation that slows down the data store. Exceptions are
      still used internally in the very infrequent case of intermediate
      directories not existing. (CNY-2405)
    * Conary will not downgrade packages if no version is specified by
      the user, but, due to an out of date mirror or other reasons, the
      update available for a package is older than the currently
      installed package. (CNY-2402)
    * Conary now recognizes /etc/ld.so.conf.d/*.conf files, adding an
      include line to /etc/ld.so.conf if they exist, and does not add
      new duplicate entries to /etc/ld.so.conf for directories already
      specified in /etc/ld.so.conf.d/*.conf files. (CNY-2432)
    * A getDatabase() method has been added to the ConaryClient class.
      This method returns the local system database object. Code that
      needs to query the local system database should use this method
      to obtain the database object. (CNY-2316)

  o Bug Fixes:
    * A bug that caused an unhandled exception when adding a new role
      in the Conary repository web interface has been fixed.

Changes in 2.0.2:
  o Build Changes:
    * PGP version 2 signatures are now properly parsed. Version 2
      signatures are documented in the outdated RFC1991 and are
      considered deprecated, but some PGP keys contain them.
      (CNY-2417)

Changes in 2.0.1:
  o Build Changes:
    * The Requires() policy now inspects Lib: and Lib.private:
      pkg-config keywords in .pc files to find library files, and
      where it finds them, it adds appropriate Conary trove
      requirements to the .pc files. (CNY-2370)

  o Bug Fixes:
    * An update bug that could result in a trove integrity error has
      been fixed. The issue would occur when updating packages where,
      for some files, the only changes are to file versions. (CNY-2403)

Changes in 2.0.0:
  o Major Changes:
    * The way Conary handles architecture flavors has been changed,
      primarily for better support for multilib systems that support
      having both 32-bit and 64-bit packages installed.
    * The Conary repository Access Control List capabilities have been
      significantly upgraded to support per-trove ACLs. Trove
      permissions are cached and recalculated whenever the ACLs change
      or new troves are added to the repository, for better scaling
      and fast changeset retrieval.
    * All dependencies on the GnuPG "gpg" program have been removed;
      Conary now implements the required OpenPGP functionality
      internally.

  o Optimizations:
    * Conary 2.0 is significantly faster for many repository commit
      operations.  Some "cvc promote" operations, in particular,
      have a 200% performance improvement.  Some group commit
      operations are 75% faster.  Creating a new shadow can be as much
      as 100% faster.  Details of some of the changes that provide
      the improvement are below.
    * Committing to repositories has been reworked to pull all
      modified streams from the repository or database with one
      query. (CNY-2053)
    * Unchanged stream sets now return None on diff.  This prevents
      the Conary repository from having to do unnecessary work to
      retrieve the "old" version of a stream and apply a diff when
      nothing actually changed.
    * Unchanged file streams are now 2-byte, backwards compatible,
      sequences instead of more complex representations of "nothing
      changed".
    * The commit code (both client and server) recognizes unchanged
      files and does not merge stream sets for them.
    * Distributed changeset creation no longer recompresses file
      contents.
    * "cvc promote" no longer recompresses non-config files during
      changeset assembly. (CNY-2202)
    * "cvc promote" now gets file contents and streams from changesets
      when a lot of them are needed from the same trove. (CNY-2202)
    * Changesets that represent a "cvc promote" operation have been
      changed to be relative to either the source of the promote (if
      promoting within a server) or to the current version on the
      target. (CNY-2202)
    * The "cvc shadow" command now commits relative changesets when
      the shadow is made to the same repository as the original trove.
    * The Conary client now tries to perform update jobs as close to
      updateThreshold (without going over) as practical for a
      noticeable performance improvement. (CNY-2283)
    * Committing changesets to the repository has been modified to
      check for files which don't have contents available (during a
      promote or shadow, for example) with one SQL query. Previously,
      a single SQL query was used to check for each file. (CNY-2053)

  o Build Changes:
    * Conary will now ignore flavoring and requirements from ELF
      libraries that are built for architectures other than the
      architecture that is being built for.  This avoids a common
      problem where a single extra (unused) sparc file library
      causes an entire package to be flavored to be installed on
      systems that support both x86 and sparc instruction sets,
      as that configuration is not meaningful. (CNY-1717)
    * The rarely used "cvc describe" command line interface has been
      removed. (CNY-2357)
    * The rarely used "cvcdesc" script has been removed. (CNY-2357)
    * Spaces in URLs provided in source actions such as addArchive
      are now automatically escaped to make them legal URLs. (CNY-2389)
    * The "cvc promote" command now uses the labels and branches
      specified in the "from" section of any promote as the place to
      search for packages (CNY-2235).
    * The PackageSpec documentation incorrectly stated that you could
      pass both package and component information to it; this has
      been corrected to properly redirect to ComponentSpec for this
      usage. (CNY-2387)

  o Client Changes:
    * The "getTroveLatestByLabel" client-side call has been added.
    * Most repository exceptions are demarshalled using logic in the
      exception class itself rather than in a large if/elif block.
      (CNY-747)
    * The "troveNames" and "troveNamesByServer" methods now accept a
      "troveTypes" argument, and by default return only troves that
      are present. (CNY-1838)
    * The mirror client supports a --fast-sync flag which will only
      scan for new troves in the source and skip the time-expensive
      scans for changed trove info records. (CNY-1756)
    * The mirror client supports a --absolute flag which will make it
      use only absolute changesets to mirror content. (CNY-1755)
    * The rollback stack code has been split into a separate class.
      (CNY-2061)
    * A new "conary rmrollback" command that removes old rollbacks has
      been added. (CNY-2061)
    * Rollback objects now have an "isLocal" method to tell whether
      applying that rollback will require repository access. (CNY-2077)
    * Conary now allows a biarch system to have one flavor that
      expresses both the x86 and x86_64 support. The flavorPreferences
      configuration option informs conary to prefer x86_64 packages.
      This change allows group building to automatically resolve x86
      packages. (CNY-525)
    * Conary no longer uses gnupg for OpenPGP key management. (CNY-2349)
    * Conary clients no longer send an absolute URI when talking
      directly to a repository server. (CNY-2324)
    * Many repository permission handling methods have been renamed
      for consistency. For a complete list, see doc/PROTOCOL.versions
      in the Conary source code. (CNY-2298)
    * Setting/resetting the admin field permission is now handled by the
      setUserGroupIsAdmin() call instead of addAcl/editAcl. (CNY-1782)

  o Server Changes:
    * The scoring for target flavor sets has been fixed. (CNY-1539)
    * The (unimplemented) concept of caps for permissions has been
      removed.
    * Server methods have been decorated with the
      @requireClientProtocol decorator.
    * The "usergroups" term has been replaced with "roles" in the
      repository web user interface. (CNY-1973)
    * Server exceptions have been reworked to have marshalling logic in
      the exception class instead of in a large if/elif block. (CNY-747)
    * Server exceptions are marshalled in the proxy layer now instead of
      in both the proxy and server layers.
    * When the repository database is locked, "RepositoryLocked"
      exceptions are now returned for all code paths. (CNY-1596)
    * The repository call log now tracks changeset cache misses. (CNY-1843)
    * Repositories no longer pass anonymous hints to the proxy layer.
      The hint has been False since Conary 1.1.29.
    * The "troveNames" method now filters by using the "troveTypes"
      argument. (CNY-1838)
    * The "getPackageBranchPathIds" method no longer requires access
      to the entire version history of a package; it returns the
      pathIds and fileIds for troves the user is allowed to
      see. Previously, an InsufficientPermission exception was raised
      if part of the version history of a package was not visible to
      the user. (CNY-2038)
    * The repository call log now records the time required to service
      the request. (CNY-2305)
    * A "serializeCommits" boolean server configuration option has been
      added.  This is best turned on for repositories used for development,
      but is unneeded for repositories that are mirrors. (CNY-2285)

  o Protocol Changes:
    * The XML-RPC protocol now allows passing keyword arguments for
      exceptions.  (CNY-747)
    * XML-RPC return values no longer include the "useAnonymous" flag.

Changes in 1.2.12:
  o Client Changes:
    * A getDatabase() method has been added to the ConaryClient class.
      This method returns the local system database object. Code that
      needs to query the local system database should use this method
      to obtain the database object. (CNY-2316)

  o Build Changes:
    * Spaces in URLs are now automatically escaped. (CNY-2389)
    * The Requires() policy now inspects Lib: and Lib.private:
      pkg-config keywords in .pc files to find library files, and
      where it finds them, it adds appropriate Conary trove
      requirements to the .pc files. (CNY-2370)

  o Bug Fixes:
    * The PackageSpec documentation incorrectly stated that you could
      pass both package and component information to it; this has
      been corrected to properly redirect to ComponentSpec for this
      usage. (CNY-2387)
    * An update bug that could result in a trove integrity error has
      been fixed. The issue would occur when updating packages where,
      for some files, the only changes are to file versions. (CNY-2403)

Changes in 1.2.11:
  o Client Changes:
    * The error message printed when Conary encounters an unhandled
      exception has been changed to reflect the fact that the common
      case is merely poor handling of the error condition, rather than
      another bug.  It has also been reformatted to display better in
      rITS. (CNY-2265)
    * The "conary-debug" script that collects information to help
      debug a crash has been enhanced to include the recently-added
      manifest file. (CNY-2338)

  o Build Changes:
    * PythonSetup synopsis now mentions the setupName keyword
      argument. (CNY-2360)
    * The conary.1 manual page now documents the purpose of the
      /etc/conary/components directory. (CNY-2361)
    * The clearBuildReqs() function now has a synonym called
      clearBuildRequires() and the clearCrossReqs() function now has a
      synonym called clearCrossRequires().  The old function names
      will be deprecated in the future. (CNY-834)

  o Bug Fixes:
    * When building groups, r.addCopy() now respects the groupName
      flag. (CNY-2345)
    * The searchPath parameter in group methods now works when it
      contains packages (before it worked only with labels). (CNY-2372)
    * A bug that was preventing users with colons in their passwords
      to use the web interface has been fixed. (CNY-2374)
    * Attempting to add entitlements for unknown entitlement classes
      now raises an UnknownEntitlementGroup exception. (CNY-2377)
    * Committing source packages that use shell-style brace and
      glob expansion in addPatch() can now be committed to a
      repository. (CNY-1152)

Changes in 1.2.10:
  o Client Changes:
    * The "conary verify" command no longer complains about files which
      have been removed with "conary remove". (CNY-950)
    * Local rollbacks for removals now store the original contents for
      modified config files. (CNY-2350)
    * Permission errors now list both the URL and the repository
      hostname. (CNY-2211)

  o Server Changes:
    * A new boolean server configuration option, serializeCommits,
      has been added to explicitly limit contention in certain cases.
      Successfully enabling it requires a minor schema update. (CNY-2285)
    * Servers in maintenance mode no longer return Internal Server
      Errors to GET requests from clients. (CNY-2229)

  o Build Changes:
    * The addPatch() source action honors shell-style brace and glob
      expansion when sourceDir is defined. (CNY-1152)
    * A new "cvc explain" command has been added. "cvc explain"
      displays the documentation for recipe methods.  For example,
      "cvc explain addSource" shows the on-line documentation for the
      addSource() source action. (CNY-2242)
    * The command line interface to cvc derive (added in Conary 1.2.8)
      has been changed.  It now derives onto your buildLabel by default,
      with a --target option to derive onto a different label.
      The cvc derive interface is subject to further change.

  o Bug Fixes:
    * A bug that caused an exception when inspecting ELF files with a
      standalone ABI has been fixed. (CNY-2333)
    * A bug that caused updates with group scripts to fail when run
      with the '--root' option with a trailing slash in the path has
      been fixed. (CNY-2348)
    * An issue related to file placeholders potentially being lost while
      rewriting rollback changesets has been fixed.

Changes in 1.2.9:
  o Documentation Changes:
    * The documentation strings for the update code have been revised
      to include the most common exceptions raised as part of
      prepareChangeSet and updateChangeSet. (CNY-1732)

  o Build Changes:
    * File level requirements provided by the same file are dropped.
      (CNY-2177)
    * Java dependencies that do not start with a valid TLD are now
      excluded. (CNY-2176)
    * The exceptDeps keyword parameter is now allowed for r.Provides(),
      analogously to r.Requires(). (CNY-1485)
    * The new sourceDir keyword parameter is now available for
      r.addSource(), r.addPatch(), and r.addArchive() to specify that
      the source is found within the maindir. (CNY-1439)
    * LD_LIBRARY_PATH is now set when calling bootstrapped python, in
      order to load the correct python libraries. (CNY-2319)
    * The :config component is built by file location, rather than
      from files marked as config files by the Config policy.
      This means that the configComponent configuration item no
      longer operates. (CNY-2256)

  o Client Changes:
    * A keepRequired config option has been added. This has the same
      effect as always setting the --keep-required flag on update.
      (CNY-569)
    * The error message for erased dependencies is now more explicit
      about what happened to the package that is no longer providing
      dependencies, and where the package with the missing dependencies
      came from. (CNY-2248)
    * We now record the current state of the database to a flat file
      after updates as an extreme recovery mechanism.  (CNY-1801)

  o Bug Fixes:
    * The "logcat" script no longer errors out if the log file is empty
      or contains None for entitlements. (CNY-2252)
    * Repositories running under Apache are now correctly displaying
      the real error when trying to generate the verbose traceback
      emails. (CNY-2320)
    * An update job that includes a critical update and an update to a
      group that includes a pre-update script will no longer run the
      script twice. (CNY-2325)
    * A bug that could cause incorrect SQLite database error messages
      has been fixed. (CNY-1840)

Changes in 1.2.8:
  o Client Changes:
    * Added the cvc derive command. (CNY-2237)
    * A new method, conary.conaryclient.getClient(), has been added to
      allow the creation of a conaryclient with configuration to match
      that would be used with a conary command line client. (CNY-1745)
    * Unhandled exceptions that are raised inside a progress callback
      no longer terminate the update process.  A warning is emitted
      and the update continues. (CNY-2304)

  o Internal Changes:
    * The Conary library now has a parallel implementation to gpg
      for the trust algorithm. (CNY-1988)

  o Bug Fixes:
    * A problem occurring when updating troves sharing a large
      number of identical files has been fixed. (CNY-2273)
    * Repository traceback emails are now more verbose. (CNY-2287)
    * Methods starting with two underscore characters are considered
      internal and are no longer passed to the XML-RPC library for
      marshaling. (CNY-2289)
    * It is now possible to clone a group that contains references to
      both a cloned package and the version that the cloned package
      originated from. (CNY-2302)
    * When data from stdin is provided to a taghandler, but the
      taghandler is missing or fails to read some or all of the data,
      it will no longer result in a database locked error. (CNY-2257)
    * Conary no longer exits with an unhandled exception if /tmp does
      not exist when attempting to run a trove script (e.g., group
      pre/post scripts). (CNY-2303)

  o Client Changes:
    * Added cvc derive as a client-side call (CNY-2237)
    * A new method, conary.conaryclient.getClient(), has been added to
      allow the creation of a conaryclient with configuration to match
      that would be used with a conary command line client. (CNY-1745)
    * CONARY_CLIENT_LOG environment variable can now specify a path for
      a log of all of the repository calls made by the client (use logcat
      to view it) (CNY-2313)

Changes in 1.2.7:

  o Build Changes:
    * The cvc command now prints out the most recent log message from
      the underlying source code control system when creating new
      snapshot archives. (CNY-1778)
    * Conary now has support for cmake, using the r.CMake() build
      action in recipes. (CNY-1321)

  o Bug Fixes:
    * Fixed a traceback that would occur when a component doesn't exist
      even though its containing package does. (CNY-2213)
    * Cloning with --default-only no longer removes references to
      components of packages that are not being cloned. (CNY-2226)
    * A bug that prevented "cvc cook" from being able to look up path
      IDs if a component of the package being built was missing from
      the repository has been fixed. (CNY-2250)
    * PGP keys using unknown string-to-key specifiers (as generated by
      "gpg --export-secret-subkeys" for the corresponding secret key)
      are no longer producing an error when iterating through the
      keyring. (CNY-2258)
    * Embedded signatures in secret subkeys now use the public key's
      cryptographic key, which does not require a passphrase to
      be decoded. (CNY-2224)

Changes in 1.2.6:
  o Build Changes:
    * When cooking packages or groups, conary now displays the methods
      that are called. It also displays the methods that are unused,
      making it easier to see if a function from a superclass has been
      left out. (CNY-2193)

  o Bug Fixes:
    * Use of macros in the r.Link() build action worked only in limited
      cases. (CNY-2209)

  o Client Changes:
    * Mirror mode now includes full file streams in changesets, instead
      of differential streams. (CNY-2210)

Changes in 1.2.5:
  o Client Changes:
    * The OpenPGP implementation now merges PGP keys properly.
      (CNY-1987)
    * The OpenPGP implementation is capable of generating trust
      signatures. (CNY-1990)
    * A bug which could cause troves containing *identical* files to
      become corruped in a system database has been fixed. Note that
      repository databases were not affected. (CNY-2191)

  o Build Changes:
    * MakeDirs now handles trailing '/' characters in directory names.
      (CNY-1526)
    * Using the new provideGroup keyword argument to the r.User()
      method in a UserGroupRecipe, you can now specify that the user's
      primary group needs to be already on the system, rather than be
      added while creating the user. (CNY-2096)

  o Bug Fixes:
    * A bug that resulted in a KeyError when removing a trove from a
      group that has 3 levels of subgroups has been fixed. (CNY-1372)
    * A bug that could result in a decremented source count when
      promoting a package to a sibling of a parent branch has been
      fixed. (CNY-2108)
    * A problem resulting in derived packages corrupting files with the
      same content was fixed. (CNY-2157)
    * A bug that caused internal server errors when retrieving
      changesets that contained compressed file data over 4 GiB in size
      has been fixed. (CNY-2170, CNY-2173)
    * HTTP error codes generated by HTTP proxies are now properly
      interpreted by Conary clients. (CNY-2181)
    * When talking to a repository, Conary proxies will now
      automatically switch the protocol to HTTPS whenever authentication
      information is injected on behalf of the client. (CNY-2184)
    * addSvnSnapshot no longer generates conflicts in the paths for
      temporary checkouts. (CNY-2196)

Changes in 1.2.4:
  o Bug Fixes:
    * A file that was mistakenly ommitted from packaging has been
      added to the build. (CNY-2155)

Changes in 1.2.3:
  o Build Changes:
    * The addSvnSnapshot() source action now has the ability to add
      specific SVN revisions via the 'revision' argument. (CNY-2156)
  o Bug Fixes:
    * An update failure that would occur when two versions of a package
      have been installed, one local, one from a repository, has been
      fixed. (CNY-2127)
    * A regression introduced in 1.2.1 affecting patch files that apply
      multiple changes to the same file has been fixed. (CNY-2142)
    * Group scripts now have file descriptor 0 (stdin) connected to
      /dev/null. Previously, stdin was closed, a potential problem
      for scripts that open file descriptors and then disconnect from
      the terminal. (CNY-2143)

  o Client Changes:
    * Added listkeys, addkey, and getkey commands to cvc for basic
      command line PGP key management. (CNY-2150)

Changes in 1.2.2:
  o Build Changes:
    * Python and Ruby dependencies with lib-specific flags now cause
      the package to be architecture-flavored. (CNY-2110)
    * Groups using setSearchPath now prefer packages on the labels and
      troves listed explicitly in the searchPath over other labels,
      even if the label is specified in the add() command. For example,
      if your searchPath includes foo=conary.rpath.com@rpl:1/1-1-1, then
      r.add('foo', 'conary.rpath.com@rpl:1') in a group recipe will now
      find version 1-1-1 over later versions. Before, it would find the
      latest version in the repository if you specified the label in the
      r.add() command. (CNY-1993)

  o Client Changes:
    * The conary command line now accepts 'rb' as an alias for
      'rollback'.
    * The output of 'rblist' now combines packages and their components
      in a single line (similar to the output of 'update'). (CNY-2134)

  o Bug Fixes:
    * When parsing the GPG keyring, PGP version 2 keys are now ignored.
      (CNY-2115)
    * Direct key signatures for PGP keys are now accepted. (CNY-2120)
    * Source control recipe actions such as addMercurialSnapshot()
      no longer produce directory names that can collide with
      a trove with the same name on a different label, producing
      a snapshot of a different source control repository. (CNY-2124)
    * Tag scripts are now closing file descriptors larger than 2
      before calling a function from the exec family. (CNY-2114)
    * A bug in determining the correct version for packages when
      multiple branches of that package exist on the same label has
      been fixed. (CNY-2128)
    * Multiple entitlements to the same host name are now properly
      handled. (CNY-2105)
    * The URL sent back to the client when connecting through an
      HTTP proxy is now correctly computed by repositories. (CNY-2117)
    * setSearchPath now searches the leaves for every source in the
      search path before falling back and searching the rest of the
      repository. Before, it would search the leaves for each label,
      then the rest of the labels, and finally groups. (CNY-2131)

Changes in 1.2.1:
  o Build Changes:
    * The addGitSnapshot() source action is now available. (CNY-1965)
    * Cooking derived packages no longer warns about their
      experimental state. (CNY-2092)
    * loadInstalled does not search the local database for a matching
      package on checkin, but instead searches the repository. This
      makes it easier to develop packages that are correct, with the
      potential of not building on the current machine. (CNY-2027)

  o Client Changes:
    * The Conary client is now less aggressive in sending keepalive
      packets with long-running requests. (CNY-2104)
    * Promote and clone callbacks are more verbose. (CNY-2063)

  o Bug Fixes:
    * Schema migration for the Latest table now correctly handles
      branches that end in redirects. (CNY-2081)
    * Adding a large number of user maps is now more efficient
      if the new addServerGlobs method is used. (CNY-2083)
    * Redirects between branches on the same label, which were
      necessary before Conary 1.2.0, are again handled correctly.
      (CNY-2103)
    * The 'conary updateall' command again properly handles the
      --replace-files command-line argument. (CNY-2112)
    * Patches are no longer partially applied when building. A
      partially applying patch results now in a failure. (CNY-2017)
    * A bug which caused Conary to incorrectly determine the flags
      for python dependencies on 64-bit systems has been fixed.
      (CNY-2091)
    * Ruby dependencies now function properly in a bootstrap build
      of the ruby package. (CNY-2109)

Changes in 1.2.0:
  o Build Changes:
    * A bug which caused Conary to compute python dependencies
      incorrectly when using an external version of python (such
      as when building python itself) has been fixed. (CNY-2087)

Changes in 1.1.96:
  o Server Changes
    * External entitlement servers can now specify per-entitlement
      timeouts and automatic retry values (CNY-2060)

  o Client Changes:
    * Update journal did not have an entry for hard links which were
      made to targets which already existed on the system, causing
      system corruption if the journal had to be rolled back. (CNY-1671)
    * The critical update information now includes enough data to
      re-create the original update job. (CNY-1608)
    * Unknown trove info types in the database are properly stored in
      extracted trove info. (CNY-2059)
    * diff and patch now support files without trailing newlines.
      (CNY-1979)

  o Build Changes:
    * More paths (/usr/lib/.*-sharp.*/) have been added to :cil
      components. (CNY-2080)
    * Path ID lookups now ignore permission errors; in such a case, a
      new path ID is computed. (CNY-1911)
    * Conary now handles python files that specify a python interpreter
      that is not available on the system or in the builddir.  It will
      print a warning and not attempt to compute dependency information
      for those files. (CNY-2050)
    * loadSuperClass and loadInstalled now print out name, version
      flavor of the package that was used when loading. (CNY-1967)

  o Bug Fixes:
    * When running in threaded mode, don't install signal handlers,
      since that is not supported. (CNY-2040)
    * URLs returned by prepareChangeSet, getChangeSet, and
      getFileContents are all based on the URL the client used to call
      the repository instead of built internally by the repository.
      (CNY-2034)
    * An issue that was preventing the repository server, under certain
      circumstances, to determine the proper URL to use has been fixed.
      (CNY-2056, CNY-2058)
    * A regression from Conary 1.1.34 related to self-signature
      verification on private PGP keys has been fixed. (CNY-2047)
    * An issue related to Conary proxies running in non-SSL mode,
      talking to SSL-enabled repository servers has been fixed.
      (CNY-2067)
    * Related to CNY-2034, Conary proxies are now properly computing
      the return URL. (CNY-2069)
    * The client is now properly computing the downloaded file's
      digest if a size limit was specified. (CNY-2072)
    * A regression from Conary 1.1.94 that caused some local cooks to
      fail to be installable due to incorrect primary trove information
      has been fixed (CNY-2078)

  o Other Changes
    * InodeStreams and FileStreams now preserve unknown elements,
      allowing future additions to those without breaking fileId
      computation. (CNY-1971)

Changes in 1.1.95:
  o Server Changes
    * A bug which triggered an exception while migrating postgresql
      repositories has been fixed. (CNY-1912)
    * The getNewTroveInfo call works faster for mirror operations.
      (CNY-2006)
    * An issue that prevented the server from responding with the
      proper error message when in maintenance mode has been fixed.
      (CNY-2005)
    * An issue that was affecting cooking performance when looking
      up path IDs has been fixed. (CNY-1996)

  o Client Changes:
    * A bug which prevented the mirror client from using hidden commits
      when mirroring to a single target has been fixed. (CNY-1981)
    * Clone/promote no longer complains when a buildreq is not also
      being cloned to the new location. (CNY-1844)
    * Turned off flavorPreferences for 1.2 release, as they are not
      quite ready. (CNY-2023)

  o Bug Fixes:
    * Bootstrapping python can now find system conary when using the
      bootstrapped python to determine python dependencies. (CNY-2001)
    * A bug in findTroves when using partial labels, introduced as
      part of 1.1.90, has been fixed. (CNY-2011)
    * cvc operations no longer trace back when the current working
      directory can no longer be accessed. (CNY-2014)
    * Redirects to nothing are now displayed when using --trove-flags.
      (CNY-2025)
    * Stack frames now wrap long lines to make them easier to read.
      (CNY-2016)
    * Comparison of VersionSequence objects is now more robust.
      (CNY-2020)
    * Autosourced files added to both a shadow and its parent now merge
      properly. (CNY-1856)

Changes in 1.1.94:
  o Bug Fixes:
    * Python extension modules installed at the top level of the Python
      search path no longer produce a traceback when computing
      dependencies. (CNY-1995)

Changes in 1.1.93:
  o Build Changes:
    * Filesets now accept macros. (CNY-148)
    * crossRequires are now ignored when not cross compiling. (CNY-1950)
    * Malformed .jar files are now ignored when computing Java
      dependencies. Previously, Conary exited with an error while
      attempting to process them. (CNY-1983)
    * Conary dependencies are no longer attempted when cross-compiling,
      and when bootstrapping python, modules are now sought in system
      python directories as well as in the destdir. (CNY-1986)
    * Python extension modules (.so files) now expose the proper
      dependencies by providing, for example, itertools (the true
      name) as well as itertoolsmodule (as it has previously), but
      requiring the shorter name if it is available on the system.
      (CNY-1077)

  o Client Changes:
    * The cvc promote and clone commands are now more efficient and do
      not download unnecessary packages. This also makes it possible
      to clone packages where access to some of the included troves
      is unavailable at the time of the promote or clone operation.
      (CNY-1913)
    * A bug which prevented the mirror client from using hidden commits
      when mirroring to a single target has been fixed. (CNY-1981)
    * Filesets are now cloneable. (CNY-1297)

  o Server Changes
    * A bug which triggered an exception while migrating postgresql
      repositories has been fixed. (CNY-1912)

  o Bug Fixes:
    * The clone and promote commands now work when cloning over removed
      packages. (CNY-1955)
    * searchPath will now provide only the best flavor match when
      matching against groups with more than one version of a package
      available. Previously, it would return all matches. (CNY-1881)

Changes in 1.1.92:
  o Bug Fixes:
    * ccs2tar correctly handles changesets with duplicate contents and
      hard links. (CNY-1953)
    * An error in the way attributes of ServerProxy classes get
      marshaled has been fixed. (CNY-1956)
    * If local flags (e.g. kernel.smp) are defined in /etc/conary/use,
      cooking no longer produces a traceback. (CNY-1963)
    * The last trove source in a trove source stack is now properly
      passed flavor information. (CNY-1969)
    * Derived packages properly handle files that were not flavored due
      to an exception in the upstream packages. (CNY-1954)
    * The transport layer is automatically encoding non-ASCII strings
      into XMLRPC Binary objects. (CNY-1932)
    * An error that was causing warnings to be printed while cooking
      groups has been fixed. (CNY-1957)

  o Server Changes
    * A bug which triggered an exception while migrating postgresql
      repositories has been fixed. (CNY-1912)

  o Build Changes:
    * Mono (CIL) files are now placed in :cil components by default.
      (CNY-1821)

  o Other Changes
    * The transport layer is using BoundedStringIO objects for
      compression, decompression and XMLRPC encoding/decoding, to
      avoid excessive memory consumption. (CNY-1968)

Changes in 1.1.91:
  o Client Changes:
    * A new configuration option, "flavorPreferences", has been added.
      The client uses this list of flavors in trove selection.
      (CNY-1710)
    * Large files are now compressed on disk instead of in memory when
      creating rollbacks. (CNY-1896)
    * The Conary client API is now more careful with releasing open
      file descriptors. (CNY-1834)
    * The "migrate" mode has changed to overwrite changes made to
      files that are not yet owned by Conary, but already exist on the
      system, as well managed, non-configuration files that have
      changed. (CNY-1868)
    * When signals are received during updates, the journal is now
      rolled back before conary terminates. (CNY-1393)
    * A 'cvc checkout' of multiple projects uses far fewer repository
      calls now, and uses a single changeset.
    * The 'cvc update' and 'cvc diff' commands now accept a source
      version argument without a source count. (CNY-1921)

  o Server Changes:
    * Setting "forceSSL" once again requires a HTTPS connection be
      used when authentication data is passed to an Apache based
      Conary Repository. (CNY-1880)
    * A bug that caused incorrect values for sourceItemId and
      clonedFromId to be used when groups and components were
      committed as part of one changeset has been fixed. (CNY-1903)
    * A bug that caused the Latest table to be rebuilt incorrectly
      when migrating to schema version 15.0 has been fixed.
      (CNY-1909)

  o Build Changes:
    * Redirects will now be followed in group recipes. Previously,
      including redirects would result in an error. (CNY-1693)
    * Derived recipes can now be based on troves which have files
      that have the same content (SHA1) as each other but are
      members of different link groups (are not intended to be
      installed as hard links to each other). (CNY-1733)
    * Derived packages now work properly if the troves they are based
      on contain dangling symlinks. (CNY-1914)
    * Symbolic links that have not changed in a derived package are
      now correctly ignored by policies that are not interested in
      unmodified files. (CNY-1879)
    * The build flavor string used for building a trove is now stored
      as part of that trove's troveInfo field. (CNY-1678)
    * Looking up path IDs now stops when all files have been found,
      instead of always walking the shadow hierarchy. (CNY-1911)
    * multilib cooks set only Arch.x86_64. (CNY-1711)

  o Bug Fixes:
    * The new OpenPGP parsing code now accepts Version 3 keys and
      signatures, without verifying them. (CNY-1931)
    * A file descriptor leak in the getFileContents method has been
      fixed.
    * If ignoreErrors is set for a configuration file, that setting is
      now honored for contexts as well.
    * Troves with large numbers of identical files now erase faster,
      thanks to a SQL fix in sqldb.iterFiles. (CNY-1937)
    * Python dependency determination now properly ignores filenames
      like "python.so" when looking for version flags. (CNY-1940)
    * Conary now correctly avoids assuming that standard I/O files
      are objects with fileno() methods. Previously, calling
      Conary interfaces with non-file objects associated with
      standard input, output, or error could trace back. (CNY-1946)
    * The --buildreqs option for 'conary q' now functions when
      multiple build requirements have the same name.
    * An issue related to the flavor preferences list not being
      properly populated when a group was cooked has been fixed.
      (CNY-1951)

  o Other Changes:
    * Conary tracebacks now report values for each variable in the
      local namespace in each frame. (CNY-1922)
    * select() calls have been replaced with poll() for higher
      efficiency. (CNY-1933)

Changes in 1.1.35:
  o Client Changes:
    * Unknown trove info types in the database are stored in extracted
      trove info properly (CNY-2059)
    * diff and patch now support files without trailing newlines (CNY-1979)

Changes in 1.1.34:
  o Build Changes:
    * The default settings from r.add() will now override the default
      settings from an r.addAll() (CNY-1882)
    * Looking up path IDs is now stop when all files have been found,
      instead of always walking the shadow hierarchy. (CNY-1911)

  o Bug Fixes:
    * A bug that caused an error message in the rPath Appliance
      Platform Agent (rAPA) when using an entitlement generator has
      been fixed. (CNY-1946)

Changes in 1.1.33:
  o Build Changes:
    * The addArchive() source action now handles xpi archives. (CNY-1793)
    * Unknown flags are now ignored when calling loadRecipe with a
      flavor, instead of printing a traceback.

  o Update Changes:
    * Updates to groups are now allowed to be merged with other groups
      in update jobs, reducing the number of jobs that are used for
      updates.

  o Client Changes:
    * Cloning now always increments group version counts, mimicing
      the behavior of group cooking. (CNY-1724)
    * When promoting, --all-flavors is now on by default.  However, if
      a flavor to promote or clone is specified, promotes will be
      limited by that flavor. (CNY-1535)
    * Several commands, such as promote, update and rq, now take an
      --exact-flavors flag.  If specified, the flavors for each trove
      must match exactly - no system flavor or heuristic is used to
      find the trove you want. (CNY-1829)
    * If there is a problem with domain name resolution, conary will
      retry 5 times. However, if the connection fails after those
      attempts, future connection requests will now fail after one try.
      (CNY-1814)

  o Bug Fixes:
    * The SQLite "ANALYZE" command is no longer run on local SQLite
      databases. Any data stored by the "ANALYZE" command will be
      removed from the local database unless it is being accessed
      read-only. Database performance is poor on databases with
      "ANALYZE" data in them. (CNY-778)
    * Some bugs related to installing relative changesets were fixed.
      These bugs would manifest themselves by making relative changesets
      not installable when the network was down. (CNY-1814)

Changes in 1.1.32:
  o Client Changes:
    * A getDownloadSizes() method has been added to the ConaryClient
      object to determine the over-the-wire transfer size of the jobs
      in an UpdateJob object.  Call requires a single repository be
      the source of the entire update. (CNY-1757)
    * cvc reports a more accurate error message when the CONARY file in
      the current directory is not a regular file

  o Server Changes:
    * A "infoOnly" parameter to has been added to the getChangeSet()
      repository method in protocol version 51. (CNY-1757)
    * The list of repository methods is now automatically generated
      instead of statically listed. (CNY-1781)
  
  o Bug Fixes:
    * The addSvnSnapshot() source action now uses the lookaside directory
      for generating the snapshot, instead of using the remote repository.
      (CNY-1777)
    * A bug that prevented unused entries in the Versions table of the
      system Conary database from being cleaned up after erasures has
      been fixed.
    * A bug that caused changes in the byDefault status of a trove to
      be omitted from local rollbacks has been fixed. (CNY-1796)

Changes in 1.1.31.4:
  o Server changes:
    * Setting "forceSSL" once again requires a HTTPS connection be
      used when authentication data is passed to an Apache based
      Conary Repository. (CNY-1880)
    * A bug that caused incorrect values for sourceItemId and
      clonedFromId to be used when groups and components were
      committed as part of one changeset has been fixed. (CNY-1903)
    * A bug that caused the Latest table to be rebuilt incorrectly
      when migrating to schema version 15.0 has been fixed.
      (CNY-1909)

  o Client changes:
    * Large files are now compressed on disk instead of in memory when
      creating rollbacks. (CNY-1896)

Changes in 1.1.90:
  o Major Changes:
    * Label multiplicity, in which a trove on the same label
      appearing on multiple branches was understood as meaning that
      all the trove can be installed at once, is being generally
      deprecated.  Instead, a newer trove on a different branch that
      ends with the same label as an older trove will be considered
      together with and generally preferred to the older trove.
      Branch affinity, in which Conary keeps packages from the same
      branch during an update, is therefore replaced with label
      affinity, in which Conary keeps packages from the same label
      during an update.  Many of the individual changes in this
      version are parts of implementing this general change in
      behavior.

  o Client Changes:
    * Added getTroveLatestByLabel as a client-side call.
    * Label lookups pick the latest version which matches instead of
      the latest version on each branch.
    * Replaced branch affinity with label affinity.
    * getAllTroveLeavesByLabel() filters results by server names to
      eliminate spurious results from repositories which host multiple
      server names. (CNY-1771)
    * The cvc and conary commands now ignore broken pipes on standard
      output instead of producing a traceback. (CNY-1853)
    * Redirects follow the label of the branch they were built with
      instead of the branch itself.
    * Building redirects to a branch is now deprecated; redirects should
      point to labels instead. (CNY-1857)
    * The --replace-files option has been split into
      --replace-managed-files, --replace-unmanaged-files,
      --replace-modified-files, and --replace-config-files. The original
      option is still accepted, and is equivalent to specifying all four
      of the new options simultaneously (CNY-1270)
    * When updating, conary will never automatically drop an architecture
      from an installed trove (unless you specify the flavor to update to 
      explicitly).  (CNY-1714)
    * Dependency resolution now allows updates to go across branches if the
      branches are on the same label.
    * Dependency resolution now follows the same "never drop an architecture"
      rule as other update code. (CNY-1713).
    * Added --show-files parameter to "conary config" to display where
      configuration items came from.
    * Newly installed transient files now silently replace files which are
      otherwise unowned. (CNY-1841)

  o Build Changes:
    * The cvc update command can now update multiple directories
      simultaneously.
    * Java files are now put in a :java component by default. (CNY-527)
    * Python dependencies now include flags designating the major version
      of python involved, as well as a flag distinguishing the target
      architecture library directory (normally "lib" or "lib64") to
      enhance update reliability.  When building a bootstrap python
      or using a different python executable than Conary is running
      with, Conary will use an external python process to determine
      python dependencies. (CNY-1517)
    * Ruby dependencies are now generated, and Ruby modules are placed
      in a :ruby component by default.  Flags are included in the
      dependencies similar to the Python flags, except that they are
      not conditional. (CNY-612)
    * Ensure that two binaries with the same source count but different
      build counts end up with the same build count after cloning. (CNY-1871)

  o Scripts Changes:
    * Repository database migration scripts have been integrated into a 
      common unit.

  o Bug Fixes:
    * Fix a bug in commit code that made r.macros.buildlabel unusable because
      you could not commit recipes that used it.  (CNY-1752)
    * An internal class, _AbstractPackageRecipe, has been renamed to
      AbstractPackageRecipe, in order to allow the inclusion of its
      methods in its subclasses' documentation pages.  The old name is
      still available for compatibility with older modules.  (CNY-1848)
    * Multiple entitlements can be stored for a single hostname or glob
      (previously only the last hostname for a particular hostname/glob
      would be used). (CNY-1825)
    * Cloning the source component for filesets is now allowed.
    * includeConfigFile now sorts files that are matched in globs
    * The default settings from r.add() will now override the default
      settings from an r.addAll() (CNY-1882)
    * Cloning no longer downloads components that won't be cloned (CNY-1891)

  o Other changes:
    * The showchangeset script now displays information on redirect
      troves.

Changes in 1.1.31.3:
  o Server changes:
    * Added EntitlementTimeout exception to notify clients that an
      entitlement has timed out from the authentication cache (CNY-1862)
    * Added remote_ip to user and entitlement based external authentication
      checks (CNY-1864)
    * Fixed bug in proxy which prevented remote_ip from being passed to
      internal repository

  o Client changes:
    * Reread entitlements from disk when EntitlementTimeout is received
      (CNY-1862)

  o Other changes:
    * Logcat now works for calls which passed lists of entitlements

Changes in 1.1.31.2:
  o Proxy changes:
    * Proxy can now inject entitlements and user authentication on behalf
      of clients (CNY-1836)

Changes in 1.1.31.1:
  o Bug Fix:
    * Proxies used wrong getChangeSet call for old protocol versions (CNY-1803)

Changes in 1.1.31:
  o Bug Fix:
    * A bug that caused an Internal Server Error when a Conary proxy
      attempted to convert a changeset for an older client when the
      upstream Conary repository was not running 1.1.29 or later has
      been fixed. (CNY-1792)

Changes in 1.1.30:
  o Bug Fixes:
    * The version cache for upstream servers in the Conary proxy
      incorrectly included user information in the URL, causing
      KeyErrors when users were switched to anonymous. (CNY-1787)
    * An issue related to the formatting of repository map entries
      has been fixed. (CNY-1788)
    * The Conary proxy no longer supports protocol version 41
      (and hasn't for a few releases).
    * An issue that was affecting the performance of the getChangeSet
      API call on Conary proxies running in an apache environment
      has been fixed.

Changes in 1.1.29:
  o Client Changes:
    * In conaryrc files, repositoryMap entries can now use wildcards
      for the server name.
    * Multiple entitlements can now be sent to each server.
    * Server names in entitlements may include wildcards.
    * Entitlements may be placed in conaryrc files now using
      'entitlement server entitlement'. "conary config" displays
      entitlement information.
    * A bug that limited a single MetadataItem to less than 64 KiB has
      been fixed.  Conary 1.1.29 will produce metadata that will not
      be visible to older clients.  Likewise, metadata produced by
      older clients will not be visible to Conary 1.1.29 and later
      clients. (CNY-1746)
    * Metadata items can now store strings with NUL characters in
      them. (CNY-1750)
    * The client API will now raise an InsufficientPermission error
      instead of an OpenError when the client's entitlements are
      not allowing access. (CNY-1738)

  o Build Changes:
    * Refreshed autosource files are now displayed by 'cvc revert' and
      'cvc diff'. (CNY-1647)
    * Support for the Bazaar revision control system has been added via
      r.addBzrSnapshot(). (requires bzr >= 0.16).

  o Server Changes:
    * (Nearly) all repository operations are now performed using the
      permissions of the anonymous user in addition to the permission
      set for any user authentication information which is present.
    * Path names in the entitlementsDirectory no longer have any
      meaning. All entitlements are read, and the serverName in the
      XML for the entitlement is used to determine which server to
      send the entitlement too.
    * Entitlement classes are no longer used as part of authentication;
      they may still be specified, but repositories now look up the
      class(es) for an entitlement based on the key.

  o Internal Changes:
    * The restart information, necessary for Conary to resume execution
      after a critical update is applied, now includes the original
      command line. The way this information is stored is incompatible
      with very old versions of Conary.  Downgrading from Conary
      version 1.1.29 (or newer) to version 1.1.11 (or older) is known
      to fail. (CNY-1758)

  o Bug Fixes:
    * 'conary rblist' no longer produces a stack trace if the
      installLabelPath configuration option is not set. (CNY-1731)
    * A bug that caused an "Error parsing label" error message when
      invoking "cvc commit" on a group recipe that used
      r.setSearchPath(str(r.labelPath[0]), ...) has been
      fixed. (CNY-1740)
    * Proxy errors are now reported in the client, for easier
      debugging. (CNY-1313)
    * A bug that caused an "Unknown error downloading changeset" error
      when applying an update job that contained two different
      versions of the same trove has been fixed. (CNY-1742)
    * Adding redirects which pointed to otherwise-unused branches
      corrupted the database by creating a branch without corresponding
      label information.
    * When critical updates are present in an update job that has
      previously downloaded all the changesets, Conary will no longer
      unnecessarily re-download the troves. (CNY-1763)
    * TroveChangeSet.isRollbackFence() now returns the correct answer
      if the trove changeset does not contain absolute trove
      info. (CNY-1762)
    * A bug related to entitlement directories containing unreadable
      files has been fixed. (CNY-1765)
    * A bug that prevented epydoc from producing documentation on
      the Conary code has been fixed. (CNY-1772)
    * Conary will temporarily fall back to reading unsigned group
      script information from changeset files that are created by
      Conary < 1.1.24.  Once rBuilder creates changesets with a newer
      version of Conary, this change will be reverted. (CNY-1762)
    * Changeset files are now written as absolute paths in the
      changeset index file. (CNY-1776)
    * Entitlement configuratioon lines continue to accept an entitlement
      class for backwards compatibility purposes. (CNY-1786)

Changes in 1.1.28:
  o Documentation Changes:
    * Incorrect references to createGroup have been fixed. (CNY-1700)

  o Build Changes:
    * Files added with in the repository and locally no longer cause
      'cvc update' to fail as long as the files have the same fileId.
      (CNY-1428)
    * r.Link allows full paths to be specified for the target of the
      link as long as the directory matches the source of the link.
      (CNY-751)
    * "cvc mv" has been added as a synonym for "cvc rename".
    * r.addCvsSnapshot() now works correctly with anonymous,
      pserver-based, servers. Previously, cvs checkout would fail due
      to strange characters being in the destination directory.
    * r.add*Snapshot() will now raise errors if the shell commands they
      are executing fail for any reason

  o Bug Fixes:
    * An index has been added to improve the performance of various
      file stream related queries in a Conary repository. (CNY-1704)
    * Directories in binary directories are no longer (incorrectly)
      provided. (CNY-1721)
    * "conary update" now works with read-only changesets. (CNY-1681)
    * the setTroveInfo call refuses to update missing troves (CNY-1741)

  o Server Changes:
    * getChangeSet call now returns supplemental information
      (trovesNeeded, filesNeeded, and removedTroves) for each individual
      job separately, instead of combining them for the entire job list.
    * proxy now combines all upstream changeset requests into a single
      job request for servers running this version or later. (CNY-1716)
    * mirrorMode wasn't passed through to changeset fingerprint calls
      from the caching code.

Changes in 1.1.27:
  o New Features:
    * All group cooks for one source must be done as a large cvc cook
      action instead of one-by-one. (CNY-1303)
    * Group flavors are much shorter if you turn on the config item
      "shortenGroupFlavors".  Some flags, like
      vmware and xen and architecture flags, are always included in a
      group flavor. (CNY-1641)
    * The Conary client is now able to access the network using
      authenticated HTTP proxies. (CNY-1687)

  o Build Changes:
    * A new recipe method, r.MakeFIFO(), is available which will create
      a named pipe at a specified location. (CNY-1597).

  o Internal Changes:
    * Flags for update jobs changed from a bitmask to a class.
    * Removed vestigial support for file label priority paths.

  o Bug fixes:
    * Patch code no longer fails when trailing context is missing at
      the end of the file. (CNY-1638)
    * Files with no permissions set (chmod 0) confused Conary due to
      improper checks for None. (CNY-1678)
    * Errors in the changeset downloading code are no longer ignored
      by the client. (CNY-1682)
    * An error in the resumption of a build has been fixed. (CNY-1684)
    * The introduction of mirrorMode during changeset cration (CNY-1570)
      caused the generation of empty diffs in some cases. mirrorMode now
      includes full contents for all files instead of generating diffs
      (CNY-1699)
    * If you're promoting two flavors of the same version of the same trove,
      they will now always have the same version on the target branch.
      (CNY-1692)

Changes in 1.1.26:
  o New Features:
    * The listcachedir script has been added to help with maintenance
      tasks for the repository changeset cache. (CNY-1469)
    * Conary proxies are now adding an HTTP Via: header. (CNY-1604)

  o Internal Changes:
    * Creating changesets supports a 'mirrorMode', which includes file
      contents of files if their version has changed (even if the sha1
      of those contents are the same). Mirroring uses this to ensure
      complete contents. (CNY-1570)

  o Client Changes:
    * A potential race condition where an update could change the state
      of the Conary database while the rollback code is executing has
      been fixed. Note that as part of the fix for CNY-1591, the update
      and rollback operations cannot commit at the same time; the fix
      further ensures long-running operations detect the state change.
      (CNY-1624)

  o Bug fixes:
    * Manipulating source components now works better when a source
      component has been marked removed.
    * A problem related to the way shim clients use the ServerProxy
      object has been fixed. (CNY-1668)

Changes in 1.1.25:
  o New Feature:
    * Conary now supports a "searchPath" configuration option, which
      operates like the installLabelPath configuration option but can
      contain both packages and labels.  For example:
      "searchPath group-os contrib.rpath.org@rpl:1" can be used to
      configure conary to first install the version of a package
      referenced in group-os, then to fall back to installing from
      contrib.rpath.org@rpl:1. (CNY-1571)

  o Build Changes:
    * GroupRecipe.add*Script now accepts a path to the script as the
      initial parameter.
    * r.addArchive() now supports a preserveOwnership parameter.  When
      set to True, owners and groups from cpio, rpm, and tar archives
      are used as the owners and groups in the final package.
      (CNY-927)
    * A new "cvc revert" command has been added that reverts any local
      changes made in the current directory. (CNY-1222)
    * GroupRecipe.addCopy() copies compatibility classes and group
      scripts onto to groups.  New copyScripts and
      copyCompatibilityScripts options to GroupRecipe.addCopy() and
      GroupRecipe.addAll() can be used to change this
      behavior. (CNY-1642)
    * A new build r.IncludeLicense() action has been added. This build
      action will take either a directory structure of licenses or a
      single license file, normalize its contents, and place it in a
      directory in /usr/share/known-licenses, which will be used at a
      later date by conary-policy.  This method is only useful for
      organizations maintaining a set of packages as part of a Linux
      OS platform.

  o Client Changes:
    * An explicit commit lock is now used to prevent overlapping
      updates and rollbacks.  (CNY-1591)
    * The conaryclient module now exposes ChangeSetFromFile to
      instantiate ReadOnlyChangeSet objects from .ccs
      files. (CNY-1578)
    * "conary q --debug --info" now also displays information about
      where a trove was cloned from if it exists.
    * Redirects with multiple targets can now be built and installed.
      (CNY-1554)
    * Conary repositories now support creating changesets that contain
      files whose compressed contents are greater than or equal to 4
      GiB in size.  Old versions of Conary that attempt to access a
      changeset that contains a compressed file larger than 4 GiB in
      size will report a error of "assert(subMagic == SUBFILE_MAGIC)".
      Previously, an overflow error occurred. (CNY-1572)

  o Internal Changes:
    * Conary clients can now request a specific changeset format
      version from a Conary repository.  This feature requires Conary
      protocol version 48.  This allows one to use new Conary clients
      to generate changesets understood by older clients. (CNY-1544)
    * Internal recipe source management moved into the generic
      Recipe() class from PackageRecipeClass().

  o Server Changes:
    * Standalone Conary repositories or proxies can be run in SSL mode
      if m2crypto is installed and the configuration options "useSSL",
      "sslCert", and "sslKey" are properly set. (CNY-1649)

  o Bug Fixes:
    * A bug that sometimes caused "user/group does not exist - using
      root" messages to be displayed when running "cvc update" created
      new files has been fixed. (CNY-763)
    * The flavor of a derived package (which is an experimental
      feature) built from unflavored package is now properly set to
      unflavored. (CNY-1506)
    * Macros in arguments to the version control system recipe class
      commands are now properly expanded. (CNY-1614)
    * The Conary client will now bypass proxies running on remote
      machines with repositories running on localhost. (CNY-1621)
    * "cvc promote" no longer displays some warnings that were rarely
      helpful unless invoked with the --debug argument. (CNY-1581)
    * A bug that caused the storage of unneeded "unknown" entries in
      the TroveInfo table has been fixed. (CNY-1613)
    * A regression in "cvc annotate" that would produce a traceback
      for not finding a SequenceMatcher class in fixeddifflib was
      fixed.  (CNY-1625)
    * Build commands that invoke shell commands now perform shell
      quoting properly.  Thanks to Pavel Volkovitskiy for finding the
      bugs and submitting the patch. (CNY-1627)
    * Mirroring using group recursion has been fixed. (CNY-1629)
    * Mirroring using group recursion no longer creates
      cross-repository relative changesets. (CNY-1640)
    * r.Install will now replace files which are read-only. (CNY-1634)
    * A bug that caused an unhandled exception when creating a local
      rollback for a trove that had missing troveinfo has been fixed.
    * Attempting to run "cvc merge" in a directory which was not
      already at the tip of a shadow no longer causes a confusing
      error message.  Previously the message was "working directory is
      already based on head of branch"; now the message is "working
      directory is not at the tip of the shadow".
    * cvc commands which need to instantiate the recipe object (merge,
      refresh, and commit) no longer fail if unknown use flags are
      used by the recipe.
    * Running the command to mark a trove as removed from the
      repository on a trove that has already been marked as removed no
      longer results in an error. (CNY-1654)
    * "conary rdiff" now works properly when multiple flavors of the
      same trove are present in the same group. (CNY-1605)
    * "conary rdiff" no longer produces an error if the same file is
      present on different labels. (CNY-1623)
    * A bug that caused inconsistent behavior when troves are pinned
      has been fixed.  Previously, if an update operation would change
      the version of a pinned trove to a version included in a group
      that is installed on the system, the pin would not
      hold. (CNY-1652)
    * A bug that caused an unhandled exception in the Conary update
      code when shared contents to a file in a link group are
      duplicated in the changeset due to distributed contents has been
      fixed.

Changes in 1.1.24.1:
  o Release Correction
    * The source archive for 1.1.24 was not built from the tag for
      1.1.24 in the Mercurial repository.  1.1.24.1 is built from the
      1.1.24 tag.

Changes in 1.1.24:
  o New Feature:
    * Conary 1.1.24 introduces the framework needed to implement a new
      metadata design for Conary.  The new metadata feature allows
      various information such as description to be set for a trove.
      New XML-RPC interfaces, getNewTroveInfo() and setTroveInfo(),
      have been added to facilitate mirroring metadata.
      addMetadataItems() has been added to allow metadata to be added
      to a trove after it has been built. (CNY-1577)

  o Client Changes:
    * The Conary client now distinguishes between an upstream Conary
      proxy and a plain HTTP proxy. This is so we can properly handle
      SSL traffic through an HTTP proxy using the CONNECT HTTP method.
      As such, there is now a "conaryProxy" configuration variable, in
      addition to the "proxy" variable. (CNY-1550)
    * The "proxy" (and newly introduced "conaryProxy") variables can
      be turned off by setting them to "None". (CNY-1378)
    * Clients requesting the inclusion of configuration files residing
      on the network now upload their version. This opens up the
      possibility for the server to serve different configuration
      files to different client generations. (CNY-1588)
    * Configuration variables "localRollbacks" and "pinTroves" get
      used as defaults when applying an update job; they can be
      explicitly overridden. (CNY-1583)

  o Bug Fixes:
    * A bug in the way the proxy configuration variable is set has
      been fixed. (CNY-1586)
    * A bug that caused a traceback when rolling back group updates
      from rollback changesets created when the "localRollback"
      configuration option was set has been fixed. (CNY-1590)
    * A bug that caused a traceback when applying a local rollback
      changeset with a locally modified file has been fixed.  Conary
      needed to create the directory that the locally modified file
      resides in first. (CNY-1444)
    * Applying rollbacks could attempt to invalidate the rollback stack,
      which would cause corruption of the rollback stack (CNY-1587)

Changes in 1.1.23:
  o Client Changes:
    * A new command, "conary rdiff", has been added. This allows one
      to inspect the differences between any two troves with the same
      name. (CNY-855)

  o Build Changes:
    * Conary recipes can now directly reference source code through
      version control systems.  The new r.addMercurialSnapshot(),
      r.addCvsSnapshot(), and r.addSvnSnapshot() source actions check
      out repositories and create snapshots.  They are integrated with
      the "cvc refresh" command for fetching more recent source code
      from version control repositories. (CNY-1)
    * The r.replace() function in group recipes now supports the
      searchPath parameter. (CNY-1574)

  o Bug Fixes:
    * A corner case affecting server-side matching of troves against
      negative flavors has been fixed. (CNY-641)
    * A bug in the StreamSet thaw code that prevented frozen StreamSet
      objects with a tag value greater than 128 from being thawed
      properly has been fixed.
    * A bug has been fixed that prevented creating a diff of a Trove
      object that contained troveInfo with unknown data. (CNY-1569)
    * A bug in the logic used by Conary to determine whether or not
      the rollback stack should be invalidated based on group update
      scripts has been fixed. (CNY-1564)
    * A bug that caused an unhandled exception in a Conary proxy when
      it attempted to create a changeset from a pre-Conary-1.1.x
      server has been fixed.
    * Small race condition in populating the cache for both
      repositories and proxies has been fixed (CNY-1576)

Changes in 1.1.22:
  o Major Changes:
    * Group troves can now declare an (integer) compatibility class
      which is used to automatically invalidate rollbacks (existing
      groups are considered to be in compatibility class zero). When a
      group is upgraded to a new group which has a different
      compatibility class, the rollback stack is invalidated unless
      the group also contains postRollback script which can rollback
      to the version being updated. Postrollback scripts can now be
      defined with a list of compatibility versions they are able to
      roll back to. Old invalidateRollback parameter for some group
      scripts is no longer supported.

  o Client Changes:
    * To take advantage of Conary's ability to apply the critical
      update set and restart before applying the rest of the updates,
      three new API calls have been added: newUpdateJob,
      prepareUpdateJob and applyUpdateJob. (CNY-1454)
    * A new argument, --no-restart, has been added to conary. This has
      to be used in conjunction with --root and allows one to skip the
      restarts after applying critical updates when installing in a
      chroot. (CNY-1458)
    * Proxy configuration parameter is now of the form 'proxy protocol
      url' (i.e. 'proxy http http://proxy.some.com'), and allows
      separate proxies to be configured for http and https. If old
      'proxy url' form is used, separate proxies are configured for
      http and https rather than a single proxy being using for both
      protocols. Users who need the old behavior should set explicit
      configure the same proxy for both protocols.

    * Conary no longer runs group scripts when "--just-db" is
      specified on the command line.
    * The conary.conaryclient.mirror.mirrorRepository() function now
      accepts a list of target repositories.

  o Build Changes:
    * Conary has tools in place through a new cross flag and a new
      "target" flavor to support better defining of cross compiling
      builds.  (CNY-1003)
    * Configuration files are again allowed to have executable bits
      set, but configuration files with executable bits set are not
      included in the :config component even if the :config component
      is being created. (CNY-1260, CNY-1540)

  o Proxy Changes:
    * A proxy can now be configured to use an http proxy for all
      outgoing requests. The 'proxy' configuration item is supported
      in a manner identical to the client.
    * The (unused) ability for a standalone server to act as both a
      proxy and a standalone server has been removed; this removes the
      standalone proxies dependence on the X-Conary-Servername header.

  o Internal Changes:
    * The createTrigger() method of dbstore drivers no longer accepts
      the "pinned" keyword parameter.
    * SeekableNestedFile and FileContainer objects no longer depend on
      the file pointer for reads; pread() is used everywhere.  This
      allows the underlying file descriptors to be shared between
      objects or between threads.
    * Repository schema now understands the concept of minor and major
      schema revisions. (CNY-811)

  o Bug Fixes:
    * A bug in proxy code that caused conary to use https through a
      proxy when http was desired has been fixed. (CNY-1530)
    * A bug in clone/promote relating to cloning when there are
      flavors on the clone label that are superset of the current
      flavor, but the current flavor doesn't exist has been
      fixed. (RMK-415)
    * A race condition related to the multithreaded Conary client,
      where one thread could modify an unprotected variable assumed
      immutable by a different thread has been fixed. (CNY-1450)
    * If the database is locked, Conary will no longer display a stack
      trace, but an error message. (CNY-1292)
    * The Conary library now uses a built-in difflib if the system's
      difflib is not patched for recursion. (CNY-1377)
    * Mirroring troves marked as removed from repositories running on
      MySQL has been fixed. (CNY-1193)
    * Repository cooks now sets the subprocess' stdin to /dev/null to
      avoid hanging while waiting from stdin. (CNY-783)
    * Trove.verifyDigests() no longer fails erroneously if a signature
      version 0 digest has not been calculated and set in
      troveInfo. (CNY-1552)
    * A bug in changeset reset() which affected reusing changesets in
      merges has been fixed. (CNY-1534)
    * A bug in changeset based trove sources where the underlying
      changesets never got reset has been fixed. (CNY-1534)

Changes in 1.1.21:
  o Repository Changes:
    * A "hidden" keyword argument has been added to the
      commitChangeSet() and hasTroves() method.  This allows mirror
      users to commit troves which will never be displayed to users.
      The presentHiddenTroves() call makes all hidden troves
      visible.  The XML-RPC protocol version is now 46.

  o Internal Changes:
    * StreamSet operations in C now use a common StreamSet_GetSSD()
      function which creates the _streamDict object if it does not yet
      exist.  This fixes crashes in rare cases where a
      StreamSet.find() class method is used before any instances of
      that StreamSet have been created. (CNY-1524)
    * Numeric StreamSet types can now have values set to None (which
      indicates that there is no value set at all).  Additionally, if
      passed an empty string to the thaw() method, the value is set to
      None. (CNY-1366)

  o Bug Fixes:
    * A bug in commitChangeSet() which returned a "file not found"
      error when the user had insufficient permission for the commit
      operation has been fixed.
    * A bug that caused Conary to raise an unhandled exception when
      updating a trove that has missing TroveInfo data in the local
      database.  When new types are added to TroveInfo, older versions
      of Conary omit the new data from the database.  Once a version
      of Conary is used that understands the new data types, the
      missing data is restored to the previously incomplete trove.
    * Handling user permissions when committing under certain 
      circumstances against a Conary 1.1.20 was fixed. (CNY-1488)

Changes in 1.1.20:
  o Major Changes:
    * Groups can now include scripts which are automatically run
      before an install, after an install, after an update, and after
      a rollback.  Documentation on how to add these scripts to groups
      will be posted to wiki.rpath.com shortly.  Unlike tag handlers,
      these scripts are not inherently reversible; therefore if a post
      update script is executed, the rollback stack will be reset.  The
      rollback information is still stored in the rollback directory,
      but the "conary rollback" and "conary rblist" commands will no
      longer be able to access the previous rollbacks.

      Only Conary repositories running version 1.1.20 or later can
      store these scripts.  If the repository is not running the
      minimum required version, a "changeset being committed needs a
      newer repository server" error will be produced.

      If an older version of Conary downloads a group that has a
      script associated with it, the scripts will be silently ignored.
      Future versions of Conary may add a "Requires: trove:
      conary(group-scripts)" dependency to groups that have scripts
      associated with them. (CNY-1461)

    * Support for versioned trove signatures has been added. (CNY-1477)
    * Version 1 signatures have been added which use a SHA256 digest
      that includes the frozen form of unknown troveInfo
      segments. (CNY-1186)
    * Unknown troveInfo segments are stored in both the repository and
      local database and restored properly. (CNY-1186)

  o Client Changes:
    * Hashes of the directories in which a trove places files are now
      computed and stored in troveInfo. (CNY-857)
    * A --file-flavors option has been added to "conary query/q",
      "conary repquery/rq", and "conary showcs/scs". (CNY-1507)
    * The ability to promote using branches and to promote to siblings
      of parents has been added.  For example, you can now promote
      from /A//B to /C without first cloning uphill to A. (CNY-1513)

  o Build Changes:
    * When Conary calls an external program (python, perl, monodis) to
      determine file dependencies and that program is not a part of
      the package being built, it will warn if that external program
      is not provided by a component in build requirements. (CNY-1492)

  o Internal Changes:
    * The conary.lib.elf module can now be built against libelf
      version 0.8.0 or later as well as the libelf implementation
      provided by elfutils.  libelf can be downloaded from
      http://www.mr511.de/software/ (CNY-1501)
    * The Conary client API has a new method disconnectRepos() that
      allows one to cut access to the networked repositories.  A
      RepositoryError exception is raised if network access is
      attempted. (CNY-1474)

  o Bug Fixes:
    * StreamSet objects didn't work with inheritance because the C
      implementation treated an internal variable as inheritable when
      it should have been treated as a class variable.
    * Attempting to create a shadowed Version object that reference a
      label that is already uphill are now issues a proper error
      message. (CNY-847)
    * Running the "conary rblist" command as non-root now produces a
      proper error message. (CNY-1453)
    * Badly-formatted parentVersion strings in derived packages
      (experimental) no longer cause a stacktrace.
    * Previous versions of Conary would fail to find the UID or GID of
      a newly created user if "--root" was specified on the command
      line and C library components had not yet been installed.
      Conary would erroneously fall back to using UID 0 or GID 0
      (root) instead.  (CNY-1515)
    * A traceback that occurred when a lookaside repository cache has
      not been defined when initializing a derived package recipe
      object has been fixed. (CNY-1509)
    * The Conary network repository client no longer attempts to use a
      proxy if the repository is residing on the local machine.
    * A bug in the freezing of update jobs has been fixed. (CNY-1521)
    * r.addPatch()'s optional argument "extraArgs" will now do the right
      thing if passed a single string instead of a tuple or list.

Changes in 1.1.19:
  o Client Changes:
    * A new "cvc promote" command has been added. "cvc promote" is a
      special type of cloning based on group structure.  For more
      information on promote, see the JIRA issue until documentation
      on the wiki is updated.  (CNY-1304)
    * An "--all-flavors" option has been added to "cvc promote" which
      promotes all flavors of the latest version of the listed
      troves. (CNY-1440)
    * A programmatic interface for performing partial clones, where
      only some components out of a package are cloned based on
      byDefault settings, has been added. (CNY-1389)
    * Conary changesets can now deal with changesets that contain
      package components that share identical file contents, pathId,
      and fileId combinations. (CNY-1253)
    * The "proxy" configuration parameter will now work for standard
      http proxies such as Squid.  Previously the "proxy"
      configuration parameter could only specify a Conary repository
      proxy.  Environments that require all HTTP and HTTPS traffic
      pass through a proxy must continue to use they "http_proxy"
      environment variable, as the "proxy" configuration variable is
      only used for Conary repository calls.  Source downloads in cvc,
      for example, will only use the http_proxy environment variable.
    * Due to limitations in Apache 2.0, the Conary client will now use
      HTTP/1.1 "chunked" Transfer-encoding when committing changesets
      larger than 2 GiB.
    * An "applyRollback()" method has been added to the ConaryClient
      class. (CNY-1455)

  o Server Changes:
    * The repository cache has been completely reworked. This fixes
      problems with authorization and the cache, and has the side
      benefit of unifying the proxy code for the repository and the
      proxy. The cacheDB repository configuration parameter is
      obsolete and will cause a warning on startup. changesetCacheDir
      should now be used instead, and tmpwatch should be configured to
      clean up both the changesetCacheDir and tmpDir
      directories. (CNY-1387)
    * The repository now properly commits changesets where multiple
      troves reference the same (pathId,fileId) key. (CNY-1414)
    * The standalone server can now decode "Transfer-encoding:
      chunked" PUT requests from clients.
    * Apache based repository servers now send changeset file contents
      using the "req.write()" method instead of the "req.sendfile()"
      method when file contents are larger than 2 GiB.  This works
      around limitations in Apache 2.0.
    * The list of sizes returned by the getChangeSet() and
      getFileContents() repository methods are now returned as a list
      of strings instead of a list of integers.  XML-RPC integers can
      only hold values less than 2147483648 (a signed integer).
    * A Conary repository will now raise an exception if a client
      requests a changeset that is larger than 2 GiB in total size or
      file contents larger than 2 GiB in size and does not support the
      new version 44 protocol required to work around this limitation.

  o Build Changes:
    * A "vmware" flavor has been added to the default set of flavors.
      A trove with a vmware flavor should be intended to run as a
      VMware guest. (CNY-1421)
    * If there's a conflict when loading installed troves, the latest
      trove will be picked.
    * The loadInstalled() recipe function will now search the
      installLabelPath for troves to load when it cannot find them any
      other way.
    * A "overrideLoad" keyword parameter has been added to the
      loadInstalled() and loadSuperClass() recipe functions.  This can
      be used to override the default search mechanism.

  o Bug Fixes:
    * Local flags are now cleared after each group cook, meaning that
      multipass group cooks will have the correct local
      flavor. (CNY-1400)
    * Dependency resolution in group cooks now also take advantage of
      the group cache. (CNY-1386)
    * Changesets for source troves with missing files (because the
      file is missing from the upstream server or the upstream server
      is unavailable) are now properly written to changeset
      files. (CNY-1415)
    * Derived packages, which are still experimental, now correctly
      handle multiple architectures built from the same
      source. (CNY-1423)
    * The loadInstalled() recipe function now always works even if you
      have multiple versions of a package installed from multiple
      branches.
    * Trove names are now checked for legal characters. (CNY-1358)
    * A minor bug related to file uploads on the error codepath was
      fixed.  (CNY-1442)
    * A bug in "cvc promote" that caused it to fail when the source
      components added due to --with-sources were in conflict.  This
      could happen, for example, when different flavors of a binary
      were cooked from different source versions and all flavors to be
      cloned to the new label at the same time (CNY-1443)
    * A bug in the CfgQuotedLineList class' display function has been
      fixed.
    * Flavored items in a job list are now correctly frozen when
      writing out an update job. (CNY-1479)
    * A default UpdateCallback() is set if an update callback hasn't
      been specified when invoking the applyUpdate() method of
      ConaryClient. (CNY-1497)
    * "cvc cook --macros" works as expected now, by defining a macro (as
      passed in on the command line with --macro) per line. (CNY-1062)
    * Committing to a Conary repository when using a standard HTTP
      proxy functions properly.  A change in 1.1.18 introduced this
      incompatibility.
    * The redirect build code has been refactored.  Bugs related to
      building flavored redirects have been fixed. (CNY-727)

Changes in 1.1.18:
  o Major Changes:
    * Changesets are now indexed by a pathId,fileId combination instead of
      just by pathId. This should eliminate the vast majority of conflicts
      when creating groups containing multiple flavors of the same trove.
      Old clients will be served old-format changesets by the repository,
      and new clients continue to support old format changesets. Old and
      new format changes can be merged into a single changeset (CNY-1314).

  o Client Changes:
    * The conary rblist --flavors command now properly displays trove
      flavors. (CNY-1255)
    * When resolving dependencies while updating, conary will now search 
      the latest versions of packages for every label in your installLabelPath
      first before searching the histories of those labels.  This should make
      sure that conary prefers installing maintained troves over unmaintained 
      ones. (CNY-1312)
    * The Conary client API now has a new call, iterRollbacksList(), iterating
      over the rollback name and object. (CNY-1390)
    * Added the --just-db argument to the conary rollback command. (CNY-1398)

  o Build Changes:
    * A list of rPath mirrors for source components has been added.
    * Group recipes now support a setSearchPath method.  This provides a way
      to tell groups how to find and resolve packages by specifying a list
      containing either packages or labels. (CNY-1316)
    * The group addAll command supports "flatten" - a way to cause all troves
      in all subgroups to be included directly in the top level group - 
      flattening any structure created by intermediate groups.
    * Groups now allow you to use the commands "removeTrovesAlsoInGroup"
      and "removeTrovesAlsoInNewGroup".  These commands subtract out the
      troves included within the specified group from the currently
      active group. (CNY-1380)
    * Checking dependencies is now faster when building groups.
    * When resolving dependencies in groups, conary will now search the
      latest trove in every label in your label/search path before
      searching back in the history of that label. (CNY-1312)
    * Added moveComponents and copyComponents to group syntax. (CNY-1231)
    * Derived packages (experimental) can now change files between
      Config, InitialContents, and Transient, and can set new files
      to be any of those types.  They can call UtilizeUser and
      UtilizeGroup.  They can create new tag handlers and tag
      description files (but not make a file from the parent no longer
      be a tag handler or tag description, except by removing the file
      entirely), and add new tags to new and pre-existing files when
      TagSpec is called (but not remove existing tags from files). (CNY-1283)
    * Derived packages (experimental) can now run nearly all build and
      source actions. (CNY-1284)
    * Derived packages (experimental) now inherit byDefault settings from
      the parent (CNY-1401), but can override them in the child (CNY-1283).
    * Derived packages (experimental) now handle multiple binary packages
      built from a single source package, including overriding binary
      package name assignment in the derived package. (CNY-1399)

  o Server Changes:
    * Two new calls have been added to the server API -
      getTroveReferences and getTroveDescendants. (CNY-1349)
    * The proxy server proxies "put" calls now.
    * Cleaned up string compression code in changeset merging.

  o Bug Fixes:
    * Fixed a bug where an invalid flavor at the command line would result
      in a traceback. (CNY-1070)
    * Added an exception to allow redirect recipe names to have any format -
      including those usually reserved for group- and info- packages.
    * Removed a harmful assert that kept trove source stacks from working w/o
      installLabelPaths in some cases. (CNY-1351)
    * The cfg.root item is always stored internally as an absolute path,
      even if it is specified as a relative path. (CNY-1276)
    * cvc now properly cleans up 000-permission files from the old build 
      directory. (CNY-1359)

  o Internal Changes:
    * Changesets in an update job can be downloaded in a step separate from
      the installation. Additionally, update jobs can be frozen and reapplied
      later. (CNY-1300)
    * UpdateJob objects are now versioned for a specific state of the Conary
      database, and can be applied only if the state of the database has not
      changed. (CNY-1300)
    * Public keys can now be retrieved from a directory, with each key stored
      in a separate file. (CNY-1299)
    * Troves now track their direct parent they were cloned from, instead of
      the source-of-all-clones. (CNY-1294)

Changes in 1.1.17:
  o New Feature:
    * A caching proxy has been implemented for Conary.  A proxy server
      caches changesets as clients request them.  This can
      dramatically improve the performance of Conary when a subsequent
      request is made for the same changeset.

      The server is implemented using the existing standalone and
      Apache-based Conary repository server modules. Two new Conary
      repository configuration variables, "proxyDB" and
      "proxyContentsDir" have been created to define the proxy
      database and contents store.

      To configure the Conary client to use a proxy, a new "proxy"
      configuration variable has been added to the conaryrc file.
      Generic HTTP proxies should still be configured using the
      "http_proxy" environment variable.

      In order to facilitate authentication and proxy cache
      invalidation features, new Conary repository methods have been
      introduced.  This means that the Conary proxy requires that
      repositories it connects to run Conary version 1.1.17 or later.
      The Conary proxy is considered experimental.  Therefore future
      versions of Conary may not be able to communicate with the proxy
      as implemented in Conary 1.1.17.

  o Client Changes:
    * Filesystem permissions on rollback data restrict access to the
      owner of the database (normally root). (CNY-1289)
    * The Conary client now sends data across an idle connection to a
      Conary repository.  This will keep the connection alive when the
      repository is behind a firewall or proxy that has short timeouts
      for idle connections. (CNY-1045)
    * The error message produced by Conary when a progress callback
      method raises an unhandled exception has been improved.

  o Build Changes:
    * cvc cook --show-buildreqs works properly now.  Thanks to Pavel
      Volkovitskiy for reporting the issue and providing the
      patch. (CNY-1196)
    * The flags for other packages that are specified in the build
      flavor are now available when cooking as a part of the
      PackageFlags object.  For example, if you wish to check to see
      if kernel.pae is set, you can add "if PackageFlags.kernel.pae:".
      Note that such checks do not affect the final flavor of your
      build, and should be used with care. (CNY-1201)
    * Component and package selection by manifest, as with the
      "package=" option, could fail when large numbers of files were
      found; this bug has been resolved. (CNY-1339)
    * You can now add a labelPath to a group r.add() line by
      specifying a labelPath keyword argument.  For example:
         r.add('conary', labelPath=['conary-unstable.rpath.org@rpl:1',
                                    'conary.rpath.com@rpl:1'])
    * Repeated shadow merges now fail with an error suggesting a
      commit.  Previously, the merge operation would be attempted
      again. (CNY-1278)

  o Server Changes:
    * Conary repositories no longer allow users or groups to be
      created with names that include characters other than those
      defined in the Portable Filename Character Set.
    * Server side functions that work on large datasets (getTroveSigs
      and setTroveSigs) are now using batched SQL operations for faster
      throughput. (CNY-1118, CNY-1243)
    * The code that commits groups to the repository has been reworked
      to significantly reduce the number of SQL queries executed.
      (CNY-1273)
    * Including a symbolic link in the path to the temporary now
      returns an error immediately at startup. (CNY-958)
    * Errors opening a to-be-committed changeset now have the internal
      exception logged and CommitError returned to the client (CNY-1182)
    * Cached Changesets are now versioned depending on the client's
      version.  This allows for the same changeset to be cached for
      different client generations. (CNY-1203)

  o Internal Changes:
    * A StringStream can now be set from a Unicode object.  The
      StringStream stores the UTF-8 encoding of the Unicode
      object. (CNY-366)
    * The ByteStream and LongLongStream classes have been
      reimplemented in C.  Modifications have been made to the
      NumericStream types implemented in C so that they can be used as
      base classes in Python.
    * PathID lookups are now done by file prefix and file ID. This
      allows for identifying files in different package flavors or in
      versions older than the latest one. (CNY-1203)
    * StreamSet objects can now preserve unknown elements of the stream
      instead of silently skipping them. Those elements are retained for
      freeze(), letting the older stream object exactly replicate the
      frozen stream of the newer object. Unknown elements are preserved
      through merges into old object as long as the old object has not
      been locally modified.

  o Bug Fixes:
    * Conary now displays a useful error message when it is unable to
      parse a "user" line in a configuration line.  Previously Conary
      would raise an unhandled exception. (CNY-1267)
    * Mirror configurations no longer use /etc/conary/entitlements/ as
      the default location to read entitlements used to mirror.
      Normally the entitlements used to mirror are different than the
      entitlements required to update the system.  Therefore they
      should not be used when attempting to access source or target
      repositories when mirroring. (CNY-1239)
    * "cvc emerge" now displays error messages when the underlying
      cook process results in an exception.  Previously, an unhandled
      exception message was generated. (CNY-995)
    * Derived packages now support setuid and setgid files. (CNY-1281)
    * You can no longer accidentally include a group in itself by
      using addAll. (CNY-1123, CNY-1124)
    * An error message is produced when troves could not be found
      during "conary migrate" in the same manner they are alerted
      during a "conary update".  Previously these errors were
      masked. (CNY-1171)
    * A bug that caused update failures when a changeset held file
      contents that were both InitialContents and a normal file has
      been fixed. (CNY-1084)
    * Filesets now honor buildFlavor. (CNY-1127)
    * The TroveSource class tried to raise a DuplicateTrove exception,
      which doesn't exist. It now raises InternalConaryError instead.
      (CNY-1197)
    * A proper error is now produced when Conary is unable to create
      the directory for the local database due to a permission
      failure. (CNY-953)
    * Group recipes could sometimes include a trove for dependency
      resolution but not move to include the package directly in the
      group that is doing dependency resolution.  Now the package and
      component both are always included immediately in the group that
      is resolving dependencies. (CNY-1305)
    * A "no new troves available" error message is now given when
      there are no new versions to migrate to (CNY-1246)
    * Attempting to clone without name or contact information set now
      gives a proper error message. (CNY-1315)
    * The client code no longer exits with a sys.exit(0) if one of the
      callbacks fails. (CNY-1271)
    * When multiple labels of a trove exist in a group and that group is 
      being searched for that trove, conary will no longer arbitrarily pick
      one of the labels to return.
    * A bug in the default update callback class that causes a hang
      when unhandled exceptions occur has been fixed.
    * Cloning a trove multiple times that was already cloned no longer
      increments the source count. (CNY-1335)
    * The Conary network client erroneously specified the latest
      protocol version it knew about when calling a server, even if
      the server couldn't understand that version. (CNY-1345)

Changes in 1.1.16:
  o Server Changes:
    * The repository now returns recursive changesets with special
      "removed" trove changesets if a trove is missing or has been
      removed.  This allows the client to determine if it has the
      needed troves to perform an update.  Previously, the repository
      would raise an exception, which prevented updates from mirrors
      with byDefault=False troves (such as :debuginfo) excluded.
    * A getTroveInfo() method has been added to the Conary repository
      server.
    * Repository changeset cache database operations are now retried
      before giving up (CNY-1143)

  o Client Changes:
    * A new "isMissing" trove flag has been added.  This flag is set
      by a Conary repository when a Trove is missing.  This allows the
      client to display an appropriate message when it attempts to
      update from an incomplete mirror.
    * Including a configuration file from an unreachable URL will now
      reasonably time out instead of hanging for 3 minutes (the default TCP
      connection timeout). (CNY-1161)
    * Conary will now correctly erase a trove whose files have changed owners
      or groups to values not mapped to users or groups on the current system.
      (CNY-1071)
    * Conary will now display files that are transient as transient when
      --tags is used.
    * Support for the new getTroveInfo() method has been added to the
      Conary repository client.

  o Build changes:
    * The "cvc cook" command will now log a message when deleting old
      build trees to make way for an upcoming build.
    * The "cvc refresh" command will now print a warning instead of
      failing with an error when an attempt to refresh a
      non-autosourced file is made. (CNY-1160)
    * The BuildPackageRecipe class now requires file:runtime, which is
      needed to run many configure scripts. (CNY-1259)
    * Configuration files are now automatically added to :config
      components only if they do not have any executable bits
      set. (CNY-1260)

  o Bug Fixes:
    * Conary 1.1.14 and 1.1.15 failed to update when encountering the
      multitag protocol; this regression is resolved. (CNY-1257)
    * The logparse module now correctly parses python tracebacks in
      conary log files. (CNY-1258)

Changes in 1.1.15:
  o Client Changes:
    * On the update path, errors and warnings are now handled by callbacks.
      This allows applications using the Conary API to capture and process
      them as appropriate. (CNY-1184)

  o Bug Fixes:
    * "conary erase --help" now displays options as "Erase Options"
      instead of "Update Options". (CNY-1090)

  o Build Changes:
    * Change in assembling recipe namespace changed how unknown recipe
      attributes were handled (they appeared as None instead of raising
      an Attribute Error).
    * Packaged directories are no longer included in :lib components
      because doing so can create multilib failures.  (CNY-1199)

Changes in 1.1.14:
  o Client Changes:
    * Tag handler output is now redirected to a callback. The command line
      callback places "[ tag ]" in front of the output from each tag handler
      to help with debugging. (CNY-906)
    * All filesystem operations are journaled now to allow recovery if an
      unexpected failure occurs. "conary revert" has been added to recover
      from cases where the journal is left behind unexpectedly. (CNY-1010)

  o Build Changes:
    * cvc will no longer fail if the EDITOR environment variable points
      to an invalid editor. (CNY-688)
    * Redirects now build erase redirects for package components which
      existed in the past but have disappeared on head. (CNY-453)
    * The TagSpec policy now checks the transitive closure of build
      requirements when determining whether the build requirements
      are sufficient to ensure that a needed tag description will
      be installed. (CNY-1109)
    * Repositories can now be made read-only to allow for maintenance.
      (CNY-659)
    * PIE executables, which appear to be shared libraries in binary
      directories, will no longer export soname dependencies. (CNY-1128)
    * ELF files in %(testdir)s and %(debuglibdir)s will no longer export
      soname provides.  (CNY-1138, CNY-1139)
    * cvc is now able to check out source troves that have been shadowed from
      a branch that no longer contains the files. (CNY-462)
    * The Install recipe class now has the ability to copy symbolic links.
      (CNY-288)
    * The output produced by cvc when attempting to find the
      appropriate patch level when applying a patch has been
      improved. (CNY-588)
    * When cooking (either from a recipe or from the repository),
      cvc will always use the (auto)source files from the repository,
      instead of re-downloading them. This allows for rebuilds from
      recipes even if the upstream source is no longer available,
      without using the cvc cook --prep command first to cache the
      repository copies. (Auto)sources can still be re-downloaded
      using cvc refresh. (CNY-31)
    * The ordering for the rules used to determine which component a
      file should be in was reversed when a file was under /usr/share
      but had /lib/ somewhere in the path name. (CNY-1155)
    * The cvc add command will now refuse to add symbolic links that
      are absolute, dangling, pointing to files outside of the current
      directory or pointing to files that are not tracked by Conary.
      (CNY-468)
    * Use objects now record which file on system define them. (CNY-1179)
    * ExcludeDirectories built-in policy will now remove the empty
      directories it has excluded from the _ROOT_ in order to prevent
      later policies from thinking they are going to be on the target
      system. (CNY-1195)

  o Internal changes:
    * Conary now supports being built against an internal copy of the
      sqlite3 library for cases when the system sqlite3 is not the
      optimal version for Conary.
    * The repository schema's string types are no longer restricted to
      arbitrary sizes for backends that support indexing larger strings
      than MySQL's InnoDB storage engine. (CNY-1054)

  o Bug Fixes:
    * The SQL query that implements the getTrovesByPath() repository
      method has been reworked to avoid slow queries under
      MySQL. (CNY-1178)
    * Builds that resulted in changesets containing the same file
      in different locations would fail to commit if the files differed
      only by mtime. (CNY-1114)
    * The mirror script now correctly handles the cases where
      the PathIdConflict errors are raised by certain source repositories
      during mirroring. (CNY-426)
    * The mirror script now can correctly mirror removed troves when a
      removed and regular versions appear in the same mirror chunk.
    * Perl dependency strings containing double colons are now properly
      accepted on the command line. (CNY-1132)
    * The cvc stat command now correctly displays the usage information
      when extra arguments are specified. (CNY-1126)
    * The conary update --apply-critical command will now behave correctly
      if the update job contains linked troves (besides the conary package
      which is the source of critical updates). Linked troves are troves
      with overlapping paths.  (CNY-1115)
    * A GET request to the "changeset" URL of a repository server that
      does not supply any arguments no longer results in an Internal
      Server Error.  The repository can be configured to send email to
      an email address with debugging information. (CNY-1142)
    * When checking to make sure that the URL used to upload a
      changeset matches the repository base URL, both URLs are now
      normalized before the comparison is made. (CNY-1140)
    * The conary.lib.logparse module now provides the correct date
      strings for each logged event.
    * The Conary command line argument parser checks for the --help
      option earlier.  This corrects some instances where commands
      like "conary rq --help" would not display help. (CNY-1153)
    * The conary [command] --help --verbose command now correctly
      displays verbose option help.
    * Conary no longer fails with an unhandled exception when the 
      local database is locked.  A useful error message is now
      produced. (CNY-1175)
    * The cvc annotate command now attributes the correct name to the
      person who committed the initial revision of a file. (CNY-1066)
    * Conary will give a better error message if you try to run the
      conary emerge command without conary-build installed. (CNY-995)

Changes in 1.1.13:
  o Build Changes:
    * All files in "binary directories" now provide their path as a
      file: dependency. This allows more flexibility for files that
      have requirements such as "file: /usr/bin/cp". (CNY-930)
    * A addRemoveRedirect() method has been added to the
      RedirectRecipe class to allow redirecting packages to nothing
      (which causes them to be erased on update). The client code has
      been updated to remove package components properly for this
      case.  (CNY-764)

  o Bug Fixes:
    * Config files, though added to the :config component by default
      (CNY-172), can now be appropriately overridden by
      ComponentSpec. (CNY-1107)
    * ELF files that have no DT_NEEDED or DT_SONAME entries no longer
      cause Conary to trace back attempting to discover the ELF
      ABI. (CNY-1072)
    * Conary will no longer attempt to update troves in the namespace
      "local" when using updateall.
    * Redirect recipes which contain conflicting redirects now give an
      error message instead of a traceback. (CNY-449)
    * The previous fix for CNY-699 wrongly encoded the soname rather
      than the filename in provisions for symbolic links to shared
      libraries when the shared library had a soname.  Additionally,
      symlinks from directories not in the system shared library path
      to ELF shared libraries in directories in the shared library
      path wrongly caused internal dependencies to have the full path
      to the symlink encoded in the shared library requirement.  These
      bugs have been resolved. (CNY-1088)

Changes in 1.1.12:
  o Client Changes:
    * A signature callback has been added, which allows one to catch
      the troves with bad signatures and react appropriately (display
      an error message, lower trust level, etc). (CNY-1008)
    * The conary.lib.logparse module has been added to provide
      parsed access to conary log files. (CNY-1075)

  o Build Changes:
    * "cvc cook" is now more efficient in looking up files that are
      part of the built troves (CNY-1008).
    * A "commitRelativeChangeset" configuration variable has been
      added to control whether Conary creates relative or absolute
      changesets when cooking.  It defaults to True, but can be
      changed to False to cause Conary to cook and commit absolute
      changesets. (CNY-912)
    * A list of X.org mirrors has been added to the default mirrors.
    * "cvc diff" now returns an return code of 2 on error, 1 if there
      are differences, and 0 if there are no differences. (CNY-938)
    * An "addResolveSource" method has been added to GroupRecipe.
      This will change how dependency resolution is done when building
      a group.  Instead of searching the label path defined in the
      group for solutions, the resolve source will be searched
      instead. This allows you to resolve dependencies against a
      particular version of a group. (CNY-1061)
    * Cloning multiple flavors of the same package in a single step is
      now possible. (CNY-1080)
    * Perl dependencies now include provides for .ph files, as well as
      .pl and .pm files, found in the perl @INC path. (CNY-1083)

  o Bug Fixes
    * The previous fix for CNY-699 introduced two errors in handling
      shared library dependencies that were not in shared library
      paths and thus need to have their paths encoded.  These bugs
      have been resolved. (CNY-1088)
    * The build time in the troveInfo page of the repository browser
      is now displayed properly as "(unknown)" if a trove has no build
      time set. (CNY-990)
    * dbsh now properly loads the schema when one of the .show
      commands is executed. (CNY-1064)
    * The Conary client version is saved before the re-execution of
      conary that follows the application of a critical
      update. (CNY-1034)
    * A condition that was causing sys.exit() to not terminate the
      server process when running in coverage mode has been
      fixed. (CNY-1038)
    * If a configuration value is a list and has a non-empty default,
      appending values to that default does not reset that list to
      empty (Conary itself never triggers this case, but rMake does
      with defaultBuildReqs). (CNY-1078)
    * FileContainers don't store the path of the filecontainer in the
      gzip header for contents which are being transparently compressed
      by the object
    * Creating referential changesets obtained the path of files in the
      data store multiple times. When one content store in a round-robin
      content store configuration is corrupt, that would lead to inconsistent
      changesets. Instead, we will include those corrupt contents in
      a valid changeset and let the install content validation catch the
      problem.

Changes in 1.1.11:
  o Client Changes:
    * "conary help [command]" now displays the usage message for
      the command.
    * The --help options will now display a smaller number of flags by
      default, and more when the --verbose flag is added.
    * A getUpdateItemList() method has been added to the ConaryClient
      class.  It returns a list of top level troves on the local
      system. (CNY-1025)
    * "conary rq package:source --tags" will now show an "autosource"
      tag on autosourced files.
    * Conary now correctly uses "KB/s" instead of "Kb/s" when
      displaying transfer rates. (CNY-330)
    * conary rblist is now more readable, and supports --labels and
      --full-versions. (CNY-410)

  o Build Changes:
    * When using "cvc refresh" to refresh autosourced files, the
      refresh flag is now reset after the commit.  Previously, the
      file would continue to be refreshed on subsequent commits.
    * When using "cvc commit", cvc no longer downloads autosourced
      files which haven't changed (CNY-611, CNY-463)
    * Files that were previously marked as autosource files can now be
      made a regular file by calling "cvc add".
    * When using "cvc remove" to remove a file from the local checkout
      directory and the file is still specified in the recipe file as
      being automatically downloaded, the file will now be switched to
      an autosource file (preserving the pathId).
    * The autosource state is now stored explicitly in CONARY files.
    * CONARY files now use textual identifiers for flags instead of
      digits.
    * "cvc refresh" no longer downloads all autosource files.  Only
      the file(s) specified are downloaded.
    * Files removed with "cvc remove" are no longer erroneously
      re-added when committing changes to the repository.  This used
      to happen when the file was in the previous version of the
      source component and also present in the lookaside
      cache. (CNY-601)
    * Conary now produces a warning instead of an error when an
      unknown use flag is specified in the buildFlavor configuration
      variable.  It will still produce an error if the unknown use
      flag is accessed in the recipe.
    * Package builds now create relative changesets for components instead
      of absolute changesets, reducing the size of the upload to the
      repository (CNY-912)
    * The download code in cvc now accepts cookies.  This is required
      to download files from Colabnet sites. (CNY-321)
    * The download code in cvc can now handle basic HTTP
      authentication. (CNY-981)
    * Shared libraries and symlinks to shared libraries provide their
      filenames as soname dependency provisions, as well as DT_SONAME
      records listed within the shared library, if any. (CNY-699)
    * Malformed regular expressions passed as exceptDeps arguments to
      the r.Requires policy are now reported gracefully. (CNY-942)
    * A list of GNOME mirrors has been added to the default mirrors.
    * Commit log messages may now be provided with the "cvc --log-file"
      command, with support for standard input using the filename "-".
      (CNY-937)
    * The default ComponentSpec information is now loaded from
      files in the /etc/conary/components/ directory tree, and the
      defaults can now be overridden on a per-distribution basis in
      the /etc/conary/distro/components/ directory tree. (CNY-317)
    * Freeform documentation from /usr/share/doc is now included
      in the new ":supdoc" component instead of the ":doc" component
      by default. (CNY-883)
    * Configuration files are now put into a ":config" component to
      make it easier to override them.  This configuration can be
      disabled by setting the configComponent configuration item
      to False. (CNY-172)
    * Empty directories that have owner or group information explicitly
      set are now included in packages by default. (CNY-724)

  o Bugfixes:
    * Files added in both the repository and locally with cvc now give
      an error message on update rather than corrupting the CONARY
      file (CNY-1024)
    * Adding a file locally and then merging that file from upstream
      now causes an error as expected (it would traceback
      before). (CNY-1021)
    * Cooking a group recipe that defines an empty groups with
      resolveDependencies set no longer results in a traceback.
      Conary will display an error message as expected. (CNY-1030)
    * Specifying a bad protocol in a repositoryMap entry (a protocol
      other than http or https) no longer causes an unhandled
      exception. (CNY-932)
    * When migrating, conary now utilizes update mode with all updates
      explicitly specified when re-executing after critical updates.
      Previously, the migration failed if a critical update was
      applied. (CNY-980)
    * Infinite loops are now detected when including configuration
      files. (CNY-914)
    * Temporary files created when critical updates are applied are
      now cleaned up. (CNY-1012)
    * Conary repositories now detect when changesets that are being
      committed are missing files. (CNY-749)
    * Conary now prints an error message when trying to write a
      changeset file to a location that cannot be written (directory,
      read-only file etc.). (CNY-903)

Changes in 1.1.10:
  o Bugfixes:
    * A warning message produced when attempting to retrieve a OpenPGP
      key has been fixed.  The warning was introduced in CNY-589.

Changes in 1.1.9:
  o Client Changes:
    * The usage message displayed when running "conary" or "cvc" has
      been simplified and improved. (CNY-560)
    * When choosing how to match up troves with the same name, conary now
      takes paths into account, if there's a choice to make between matching
      up two old troves that are otherwise equivalent with a new trove, conary
      will choose the one that shares paths with the new trove. (CNY-819)
    * Conary will now allow "conary migrate --info" and "conary migrate
      --interactive" without displaying usage information. (CNY-985)
    * Conary now only warns about being able to execute gpg if a
      signature trust threshold has been set. (CNY-589)
    * Fixed cvcdesc after the refactoring of configuration options. (CNY-984)

  o Server Changes:
    * PostgreSQL support has been finalized and some SQL queries have
      been updated in the repository code for PostgreSQL
      compatibility.  PostgreSQL will be officially supported in a
      future release of Conary.
    * The repository browser is now viewable by Internet Explorer.

  o Build Changes:
    * cvc now allows files to be switched from autosource to normal
      and from normal to autosourced. (CNY-946)
    * Recipes will now automatically inherit a major_version macro,
      which is defined to be the first two decimal-seperated parts of
      the upstream version, combined with a decimal. For example, a
      version string of 2.16.1.3 would have a major_version of
      2.16. (CNY-629)
    * A list of KDE mirrors has been added to the default mirror
      configuration. (CNY-895)
    * If a group is cooked twice at the same command line, for example
      "cvc cook group-dist[ssl] group-dist[!ssl]", then conary will
      cache the trove found during the first group cook and use it for
      subsequent group cooks. (CNY-818)
    * Unpacking a tarball now preserved permissions only when
      unpacking into the root proxy, not unpacking sources into the
      build directory. (CNY-998)

  o Code Cleanups
    * The command line options common between cvc and conary are now
      defined in one place.
    * The code to add options to the command line parser for an option
      has been refactored to remove duplication.

  o Bug Fixes:
    * A bug that caused an Internal Server Error when marking a group
      :source component as removed in a repository has been fixed.
    * A bug that caused group cook with a replace or remove with a
      flavor and no matching trove to emit a traceback instead of a
      warning has been fixed. (CNY-977)
    * A bug that caused an unhandled exception when two packages with
      the same name require a trove that was being erased has been
      fixed.
    * Timeouts that occur when attempting to read the XML-RPC request
      from a client are now logged and return an exception (instead of
      causing a unhandled exception in the server).

Changes in 1.1.8:
  o Bug Fixes:
    * The fix for CNY-926, which allows a ShimNetClient to create
      changes directly from an in-process Conary Repository, did not
      properly merge changesets when multiple servers were involved.
    * The r.setByDefault() method in group recipes was broken in
      1.0.34.  It would cause a traceback.  This has been fixed.

Changes in 1.1.7:
  o Client Changes:
    * You can now delete troves, update from changeset files, and
      update with a full version specified without an installLabelPath
      set. (CNY-281)
    * "conary rm" has been added as an alias for the "conary remove"
      command. (CNY-952)
    * Conary now produces an error message when an invalid context is
      specified. (CNY-890)
    * User settings in a context will override but not remove user
      settings from the main conary configuration file. (CNY-972)

  o Build (cvc) Changes:
    * "cvc cook --prep" now warns about missing dependencies instead
      of raising an error.  "cvc cook --download" does not warn or
      error. (CNY-787)
    * In a group recipe, if you use r.remove() to remove a component
      from a package in a group (which marks the component
      byDefault=False), and the package no longer contains any
      byDefault=True components, the package itself will also be made
      byDefault=False. This avoids installing packages with no
      components on the system. (CNY-774)
    * Previously, Java files that have no discoverable provided or
      required interfaces (for example, due to EAR dependencies)
      caused a traceback.  Conary now handles this case correctly and
      does not traceback.
    * Merging when the current version is already based on the parent
      version now gives an error message instead of writing out an
      incorrect CONARY file (CNY-968)

  o Bug Fixes:
    * Erases of critical troves is no longer considered a reason to
      restart Conary.
    * A bug triggered when a critical update of a trove depended on an
      erase has been fixed.
    * A bug that caused changesets to be invalidated from the
      changeset cache when signatures were not modified by
      setTroveSigs() has been fixed.
    * A bug that caused an Internal Server Error (ISE) when attempting
      to browse the files in a shadowed component via the Conary
      repository browser has been fixed. (CNY-926)
    * A bug introduced 1.0.32 that affected the ability to update two
      troves due to the same broken dependency when using
      "resolveLevel 2" has been fixed.  This bug affected the ability
      to simply run "conary update conary" when conary-build and
      conary-repository will both installed. (CNY-949)
    * Conary will now display config lines that are equivalent to the
      default configuration value but are set explicitly by the
      user. (CNY-959)
    * Specifying "includeConfigFile" within a context will now include
      the file also within that context. (CNY-622)
    * A memory leak in conary.lib.misc.depSplit() has been fixed.
    * The client no longer loops forever trying to create
      cross-repository relative changesets when the trove is missing
      from one of the repositories. (CNY-948)
    * Repositories no longer return empty troves when
      createChangeSet() is called on troves which are referenced
      within the repository but present on a remote repository.
      (CNY-948)
    * Repository queries no longer return matches for troves which are
      referenced by groups but are not present in the
      repository. (CNY-947)
    * Specifying a root (through conaryrc configuration or the
      "--root" command line parameter) that is not a directory no
      longer results in an unhandled exception. (CNY-814)
    * Renaming and changing a source file no longer results in
      tracebacks on "cvc update" and "cvc merge" (CNY-944, CNY-967)

Changes in 1.1.6:
  o Client Changes:
    * The "cvc" and "conary" command line programs have new command
      line argument aliases.  They accept "-r" as an alias for
      "--root" and "-c" as an alias for "--config".  Commands that
      accept "--info" now accept "-i" as an alias.
    * Contexts can now override any configuration option. (CNY-812)
    * The meaning of the "--components" command line option has
      changed to be more intuitive.  For example, "conary q
      --components" will show all the components for all packages,
      indented as expected. (CNY-822)

  o Build (cvc) Changes:
    * "cvc commit -m'commit message'" is now accepted.  Previously, a
      space was required between the -m and the message.
    * Permissions are now preserved by tar when extracting a tar
      archive added with r.addArchive().
    * The Requires policy now parses pkg-config files more reliably.
    * "cvc cook" now has a "--download" option, which fetches the
      applicable sources from upstream or from the repository and then
      stops. (CNY-837)
    * If cooking a group results in conflicts, the error message will now
      show you the reason why the troves in conflict were included in the
      group. (CNY-876)
    * A new r.addCopy() command is now available to group recipes.  It
      performs the actions required to create a new group, add all of
      the troves from a different group, and add the new group to the
      current group. (CNY-360)
    * In a group recipe, if r.replace() or r.remove() does nothing, a
      warning message is given unless the keyword allowNoMatches is
      used. (CNY-931)
    * In a group recipe, if r.replace() would match against a package
      included inside another group that you are not building, conary
      will warn that replace cannot possibly do anything and will
      suggest using r.addCopy() to resolve the problem. (CNY-360)
    * The Autoconf() build action now enforces buildRequirements of
      automake:runtime and autoconf:runtime if used. (CNY-672)
    * All build actions that enforce buildRequires additions now report
      them through the reportMissingBuildRequires summary policy.

  o Optimizations:
    * Retrieving a large number of troves without files from the local
      database has been sped up by 30%. (CNY-907)
    * On one test machine: "conary q --troves" is 2 times
      faster. "conary q", "conary q --deps" and "conary q --info" are
      30% faster.  "conary q --troves --recurse" is 4-6 times faster.

  o Bug Fixes:
    * r.Replace() no longer fails when a glob matches a dangling
      symlink.  It now reports that no action is taking on the
      dangling symlink due to it being a non-regular file.  This is
      the same behavior as running r.Replace() on non-dangling
      symlinks.

Changes in 1.1.5:
  o Optimizations
    * Duplicate trove instantiations have been removed. Build requires are
      no longer thawed out of abstract change sets, and methods were added
      to get dependency and path hash information directly from trove
      change set objects. These changes combined for a 50% speedup on
      update --info of a large group into an empty root and saved a few
      megs of memory as well (CNY-892)
    * The changes in the previous version of Conary in how XML-RPC
      responses are decompressed actually made Conary slower.  These
      changes have been reverted.

  o Build (cvc) Changes:
    * The Requires() policy now reads pkg-config files and converts the
      "Requires:" lines in them into trove dependencies, removing the
      need to specify those dependencies manually. (CNY-896)
    * Files in /etc/conary/macros.d/ are now loaded in sorted order
      after initial macros are read from /etc/conary/macros. (CNY-878)

  o Bug Fixes:
    * Conary now runs tagscripts correctly when passed a relative root 
      parameter (CNY-416).
    * cvc log now works when there are multiple branches matching for the
      same trove on the same label.
    * Fixed resolveLevel 2 so that it does not try to update packages that
      are already a part of the update. (CNY-886, CNY-780)
    * Fixed resolveLevel 2 so that it does not repeatedly try to perform 
      the same update. (CNY-887)
    * cvc cook | less now leaves less in control of the terminal. (CNY-802)
    * The download thread terminating during an update is now a fatal
      error.
    * The web interface to a conary repository will now print an error
      message instead of a traceback when adding an entitlement class
      with access to a group that does not exist.
    * Parent troves in repository changeset caches are now invalidated
      when a member trove is invalidated (CNY-746)
    * cvc cook group now limits the number of path conflicts displayed for 
      one trove to 10. (CNY-910)
    * Conary update now respects local changes when a group update occurs
      along with the update of the switched trove.  For example, switch
      foo to be installed from another branch instead of the default, 
      and then update foo and its containing group at the same time would
      cause conary to try to reinstall the original foo (resulting in path
      conflicts). (CNY-915)
    * loadRecipe now selects the most recent of two recipes available
      in the case where there are multiple choices due to label
      multiplicity. (CNY-918)

Changes in 1.1.4:
  o Client Changes:
    * Conary now restarts itself after updating critical conary
      components (currently, that consists of conary).  Hooks have
      been added for other components using the conary api to specify
      other troves as critical.  Also, hooks have been added for other
      components to specify a trove to update last. (CNY-805, CNY-808)
    * Conary now warns the user when they will be causing label
      conflicts - that is when an operation would cause two different
      branches of development for a single trove to end up with the
      same trailing label.  Since most conary operations are label
      based, such label conflicts can be confusing to work with and
      are almost never desireable - except in those few cases where
      they are necessary.  (CNY-796)
    * The conary repository client now retries when a DNS lookup of a
      server hostname fails with a "temporary failure in name
      resolution" error.

  o Optimizations
    * The getFileContents() and getFileVersions() server side calls
      have been optimized for faster execution.
    * The SQL query in getTroveList() has been sped up by a 3-5x factor.
    * dbstore now has support for executemany()
    * Inserts into local database now use executemany().

  o Server Changes
    * Several SQL queries have been updated for PostgreSQL compatibility

  o Build (cvc) Changes:
    * The "cvc add" command no longer assumes files it doesn't know to
      be binary are text files; there are lists for both binary and
      text types, and files which are added which aren't in either
      list need to be added with "--text" or "--binary". (CNY-838)
    * A "cvc set" command has been added to change files between
      binary and text mode for files in source components.
    * The "cvc diff" command no longer tries to display the contents
      of autosource files. (CNY-866)
    * The "cvc annotate" command no longer displays pathIds in the
      error message for the specified path not being included in the
      source trove.  It displays the path name instead.
    * The "cvc annotate" command now gives an error when it is run on
      a binary file.
    * A "cvc refresh" command has been added.  It allows you to
      request that cvc fetch new upstream versions of files referenced
      by URL.  Thanks to Pavel Volkovitskiy for the initial
      implementation of this feature. (CNY-743)
    * The "cvc newpkg" command and the PackageSpec policy now disallow
      certain potentially confusing characters in trove
      names. (CNY-842)
    * The PythonSetup() build action has been modified to be more
      consistent with other build actions. The "setupName" paramater
      has been added, which can specify a command to run (defaults to
      "setup.py"). The first argument, similar to Configure(), passes
      arguments to the command being specified by setupName. (CNY-355)
    * The "cvc commit" command now recognizes .html, .css, .kid, and .cfg
      as extensions that identify text files. (CNY-891)
    * The PythonSetup build action has been modified to make it
      clearer what its "dir" and "rootDir" options specify. (CNY-328)

  o Bug Fixes:
    * Conary commands no longer perform an unnecessary database check
      on the local system. (CNY-571)
    * A bug that could allow conary to consider a no-op update as an
      install (and could result in tracebacks in some situations) has
      been fixed. (CNY-845)
    * If you've made a local modification to a package and then try to
      downgrade it later, Conary will now downgrade included
      components as well. (CNY-836)
    * The error message produced by "cvc cook" when a source component
      exists on multiple branches with the same trailing label has
      been improved. (CNY-714)
    * Error handling when manipulating entitlements via XML-RPC has
      been improved. (CNY-692)
    * The usage message displayed when running "conary changeset" has
      been corrected. (CNY-864)
    * Conary no longer tracebacks when a disconnected cook tries to
      load a superclass.  Conary also gives better messages when the
      loaded recipe has a traceback.  Thanks to David Coulthart for
      the core of this patch. (CNY-518, CNY-713)
    * A bug in soname dependency scoring has been fixed.  Dependency
      scoring when multiple sonames were being scored would simply use
      the value of the last soname, instead of the cumulative score.
      Note that the dependencies that did not match at all would still
      return as not matching, so this bug only affected Conary's
      ability to select the best match.
    * A bug in architecture dependency scoring has been fixed.
      Matching architectures are now counted as having a positive
      value, so that when performing dependency resolution on an
      x86_64 machine, troves that have flavor "is: x86_64 x86" will be
      preferred to those with flavor "is: x86".
    * The PythonSetup command ignored any C compiler macros that had
      been set.  The template has been changed to use them in the same
      way that Configure() uses them; as environment variables.
    * The warning message produced when r.Replace() refuses to modify
      a non-regular file now includes the path, as intended.
      (CNY-844)
    * A traceback that occurred when a resolveLevel 2 update resulted
      in a component being erased has been fixed. (CNY-879)
    * Conary now works around a possible threading deadlock when
      exceptions are raised in Threading.join().  The bug is in the
      standard Python threading library, and is fixed in 2.4.3.
      Conary will use a workaround when running under older versions
      of Python. (CNY-795)
    * Checks have been added to the XML-RPC transport system to see if
      an abort has been requested while waiting for a response from
      the server.  This allows the main thread to terminate the
      changeset download thread if it is waiting for an XML-RPC
      response from the server.  (CNY-795)
    * A bug in Conary's handling of an unusual case when multiple
      files being installed share the same content, and one of the
      files has been erased locally has been fixed.
    * A traceback that occurred when a manually removed file switches
      packages during an update has been fixed. (CNY-869)
    * When you remove a file and replace it with a directory, Conary
      now treats it as a removal. (CNY-872)
    * Conary's OpenPGP implementation now dynamically uses RIPEMD if
      it is available from PyCrpyto.  Some PyCrypto builds don't
      include RIPEMD hash support. (CNY-868)
    * A bug that allowed merging changesets with conflicting file
      contents for configuration files with the same pathId has been
      fixed.  Applying the resulting merged changeset caused
      IntegrityErrors.  (CNY-888)

  o Optimizations
    * The getFileContents and getFileVersions server side calls have
      been optimized for faster execution
    * The SQL query in getTroveList has been sped up by a 3-5x factor.
    * dbstore now has support for executemany()
    * Inserts into local database now use executemany().

  o Server Changes
    * Several SQL queries have been updated for PostgreSQL compatibility

Changes in 1.1.3:
  o System Update Changes:
    These changes make Conary much more robust when applying updates
    that move files from one package to another.

    * Components that modify the same files are now required to be in
      the same update job.  For example, if a file moves from
      component a:runtime to component b:runtime, the erase of
      component a:runtime and the install of component b:runtime will
      occur at the same time. (CNY-758).
    * Files moving between components as part of a single job are now
      treated as file updates instead of separate add/remove events.
      (CNY-750, CNY-786, CNY-359)

  o Client Changes:
    * The source component is now displayed in "conary rq --info"
      output.
    * Entitlements can now be passed into ConaryClient and
      NetworkRepositoryClient objects directly. (CNY-640)
    * Exceptions raised in callback functions are now issued as
      warnings and the current job is finished before
      existing. KeyboardInterrupts and SystemExits are handled
      immediately. (CNY-806)
    * The "--debug" command line flag now provides information that is
      useful to the end-user during the update process.  The
      "--debug=all" flag will provide output that is useful to conary
      developers.
    * The output of "--debug" has been modified when performing
      dependency resolution.  The output should be more helpful to end
      users.  Also rearranged the output given when dependencies
      fail. (CNY-779)
    * Config files and diffs are no longer cached in ram during installs;
      they are now reread from the changeset whenever they are needed
      (CNY-821)
    * Binary conflicts no longer cause a traceback in cvc update
      (CNY-644,CNY-785)

  o Optimizations
    On a test system, "conary updateall --info" is around 24% faster
    than previous versions of Conary.

    * The SQL query used to retrieve troves from the local database
      has been optimized.  The new code is nearly four times faster
      for operations like "conary q group-dist --info".
    * The SQL query in getTroveContainers() used to determine the
      parent package(s) and groups(s) of a set of troves as recorded
      in the local database has been optimized.  The new code is
      almost 95 times faster. (0.2 seconds versus 19 seconds)
    * The code in getCompleteTroveSet() that creates Version and
      Flavor objects from entries in the database now caches the
      created object.  This is approximately a 4.5 times speed
      up. (2.10 seconds versus 9.4 seconds)
    * The code in iterUpdateContainerInfo has had similar version
      and flavor caching optimizations that make the code about 
      2.5 times faster (from 10 seconds to 4 seconds).

  o Server Changes:
    The Conary repository server now sends a InvalidClientVersion
    exception when a conary 1.0.x client attempts to manipulate an
    entitlement through addEntitlement() or deleteEntitlement().

  o Build (cvc) Changes:
    * "cvc merge" and "cvc update" are now more verbose when
      patching. (CNY-406)
    * "cvc clone" now requires that you specify a message when cloning
      source components unless you specify --message.  It also gives
      more output about what it is doing (CNY-766, CNY-430).
    * "cvc clone" now has a --test parameter that runs through all
      steps of cloning without performing the clone.  --info is now
      more lightweight - it no longer downloads all of the file
      contents that would be cloned.
    * "cvc clone" now has a --full-recurse parameter that controls how
      recursion is performed.  Cloning a group no longer recurses by
      default.  The only way that a recursive group clone could
      succeed is if all troves in the group came from the same branch.
      This is almost never the case.
    * The "cvc cook" command now prints the flavor being built,
      as well as the version. (CNY-817)
    * The command line argument parsing in "cvc" has been modified.
      To use the "--resume" command line argument to specify that you
      wish to resume at a particular location, you must use
      "--resume=<loc>".  "--resume <loc>" will not work anymore.  This
      removes an ambiguity in how we parse optional parameters in
      Conary.
    * The PythonSetup build action no longer provides the older
      --single-version-externally-managed argument, and instead
      provides the --prefix, --install-purelib, --install-platlib,
      and --install-data arguments, which can be overridden with the
      purelib, platlib, and data keyword arguments, respectively.  This
      allows it to work correctly with a greater number of packages.
      It also provides the option of providing a "purePython=False"
      argument for python packages that mix architecture-specific
      and architecture-neutral files, and tries to automatically
      discover cases when it should be provided. (CNY-809)
    * Python dependencies were previously incorrectly calculated
      for certain module path elements added in some Python C
      code (for example, contents of the lib-dynload directory);
      these errors are now resolved by using external python
      to find system path elements. (CNY-813)
    * /etc/conary/mirrors/gnu has been added to enable mirror://
      references to the GNU mirror system.
    * The GNU mirror list was then significantly expanded and
      re-sorted.  (CNY-824)
    * /etc/conary/mirrors/cpan has been added to enable mirror://
      references to the Comprehensive Perl Archive network mirror
      system.
    * In group recipes, the methods r.add(), r.addAll(), and
      r.addNewGroup() have been modified to accept the use= parameter,
      which defaults to True (CNY-830).

  o Bug Fixes:
    * A bug that caused a traceback in the web interface when a
      non-admin user attempts to manage their entitlement classes has
      been fixed. (CNY-798)
    * "conary rq" (with no arguments) no longer hides troves if the
      flavor that matches the system flavor is not built for the
      latest version. (CNY-784)
    * "cvc cook" now displays the correct label of the thing it is
      building, even when it is not the build label.
    * Running "cvc update" in a directory that has been created with
      "cvc newpkg" but has not yet been committed to the repository
      will now fail with an appropriate error message instead of
      displaying a traceback. (CNY-715)
    * Conary can now apply updates that change a file that is not a
      directory to a directory.
    * Currently version objects are cached to optimize Conary.
      Unfortunately, version objects are mutable objects.  That means
      that if two different pieces of code are given the same version
      object, modifications made by one part of the code could affect
      the other inadvertently.  A warning message has been added to
      the version object when setting or resetting timestamps to make
      developers aware of the problem.  Developers should copy the
      version object before calling setTimeStamps(),
      resetTimeStamps(), incrementSourceCount(), or
      incrementBuildCount() on it.  When creating a version object
      from a string and time stamp set, use the timeStamps= keyword
      argument to versions.VersionFromString() to avoid the copy.  In
      a later version of Conary, version objects will be immutable.
      New methods will be introduced that return new modified objects.
    * Conary no longer hangs waiting for the download thread when an error
      occured in the download thread which caused it to terminate.
    * "conary migrate" now returns an error much earlier if you are
      not using interactive mode. (CNY-826)
    * Files removed from troves (most often by --replace-files) are now
      properly skipped on updates to that trove when the file didn't change
      between versions. (CNY-828)
    * includeConfigFile now gives a much better error message when it
      cannot include a config file. (CNY-618)

Changes in 1.1.2:
  o Bug Fixes:
    * Conary now removes sources from the lookaside before unpacking SRPMs to
      ensure that the source referenced from the SRPM is actually contained in
      the SRPM. (CNY-771)
    * Errors found in the recipe while checking in will now display file name
      and line number information along with the error found.
    * The trove browser no longer shows duplicate entries for multihomed
      repositories.
    * A bug that kept sqlite-based 64-bit mirrors from being used as a source 
      for further mirrors has been fixed.

  o Build Changes:
    * Conary no longer prints policy error messages three times; it
      now prints each error immediately when it is found, and then
      summarizes all policy errors once (instead of twice) at the
      end of the build process. (CNY-776)

Changes in 1.1.1:
  o Client Changes:
    * Migrate no longer replaces by default as if --replace-files was
      specified. (CNY-769)

  o Server Changes:
    * The log retrieval function now returns a HTTP_NOT_IMPLEMENTED
      (501) instead of a HTTP_NOT_FOUND (404) if the logFile
      directive is not configured.

  o Build Changes:
    * Conary now recognizes that pkgconfig finds its files in
      /usr/share/pkgconfig as well as /usr/lib*/pkgconfig. (CNY-754)
    * /etc/conary/mirrors/cran has been added to enable mirror://
      references to the Comprehensive R Archive Network. (CNY-761)

  o Bug Fixes:
    * Conary now resets the timeStamps in all cases when
      getSourceVersion is called (CNY-708).
    * SQLite ANALYZE locks the database after it is run, causing
      updates to fail.
    * A bug that caused lists such as installLabelPath in
      configuration files to be parsed incorrectly when more than one
      space was between list elements has been fixed
    * A bug that caused Locally changed files to no be marked properly
      in rollbacks that were stored locally (including rollbacks for
      locally built troves) has been fixed. (CNY-645)
    * A bug that could cause "cvc cook" to create groups that include
      components needed to resolve dependencies that are already
      included not-by-default has been fixed.
    * A bug that caused a traceback message when adding a user through
      the web interface has been fixed.

Changes in 1.1.0:
  o 1.1 Release Overview

    Conary 1.1.0 is the first version in the 1.1 series.  New
    functionality has been added to Conary that required modifications
    to the repository database schema and XML-RPC protocol.  A Conary
    1.1.x-compatible client is required to access many of the new
    features.  The XML-RPC interface includes version information so
    that old clients continue to work with new servers, and new
    clients continue to work with old servers.

    New Features:
      * Conary can now remove packages and components from a
        repository server.  This is a privileged operation and should
        not normally be used.  Only users with a special "can remove"
        ACL can remove from the repository.  As removing something
        from a Conary repository is an act of last resort and modifies
        repository internals, the command line option will not appear
        in the reference documentation.  rPath will assist users that
        need more information.
      * Conary can now query the repository by path.  Use
        "conary repquery --path /path/to/find" to find components that
        include a particular path.
      * Several enhancements were added to the entitlement management
        facilities in a Conary repository.
      * Conary can now redirect a group.

  Detailed changes follow:

  o Server Changes:
    * Entitlement keys were artificially limited to 63 characters in
      length.  This restriction has been raised to the max length
      permitted in the database column (255).
    * Entitlement classes can now provide access to multiple access
      groups (and updated the web UI to support that) (CNY-600)
    * addEntitlement() and deleteEntitlement() repository calls replaced
      by addEntitlements and deleteEntitlements calls.  These calls
      operate on more than one entitlement simultaneously.
    * Added getTroveLeavesByPath() and getTroveVersionsByPath(). (for
      CNY-74)
    * Conary now checks to ensure you have write access to all the
      things the client is trying to commit before you send them
      across the wire. (CNY-616)
    * deleteAcl() and listAcls() methods have been added to
      ConaryClient.

  o Client Changes:
    * "conary rq" now supports "--path", which allows you to search
      for troves in the repository by path. (CNY-74)
    * "conary rq" now has a "--show-removed" option that allows you to
      see removed trove markers.  A [Removed] flag will be displayed
      when the --trove-flags option is added.

  o Bug Fixes:
    * Conary now resets the timeStamps in all cases when
      getSourceVersion is called (CNY-708).
    * SQLite ANALYZE locks the database after it is run, causing
      updates to fail.
    * A bug that caused lists such as installLabelPath in
      configuration files to be parsed incorrectly when more than one
      space was between list elements has been fixed
    * A bug that caused Locally changed files to no be marked properly
      in rollbacks that were stored locally (including rollbacks for
      locally built troves) has been fixed. (CNY-645)
    * A bug that could cause "cvc cook" to create groups that include
      components needed to resolve dependencies that are already
      included not-by-default has been fixed.

Changes in 1.0.27:
  o Client Changes:
    * A "files preupdate" tag script method has been Implemented which
      gets run before tagged files are installed or changed. (CNY-636)
    * A bug that could cause "--replace-files" to remove ownership
      from every file in a trove has been fixed. (CNY-733)

    * Multiple bugs where using "--replace-files" could result in the
      new file having no owner have been fixed. (CNY-733)
    * The logcat script now supports revision 1 log entries.
    * The logcat script is now installed to /usr/share/conary/logcat

  o Build Changes:
    * Improved handling of the "package=" keyword argument for build
      actions.  In particular, made it available to all build actions,
      removed double-applying macros to the package specification,
      and fixed failure in cases like "MakeInstall(dir=doesnotexist,
      skipMissingDir=True, package=...)". (CNY-737, CNY-738)
    * The lookaside cache now looks in the repository for local sources
      when doing a repository cook. (CNY-744)
    * The mirror:// pseudo-URL handling now detects bad mirrors that
      provide an HTML document instead of the real archive when a
      full archive name is provided; previously, it did so only when
      guessing an archive name.  Thanks to Pavel Volkovitskiy for this
      fix. (CNY-745)
    * The Flavor policy has been slightly optimized for speed.

  o Server Changes:
    * ACL patterns now match to the end of the trove name instead of
      partial strings (CNY-719)

  o Bug Fixes:
    * The Conary repository server now invalidates changeset cache
      entries when adding a digital signature to a previously mirrored
      trove.
    * A bug that caused the mirror code to traceback when no callback
      function was provided to it has been fixed. (CNY-728)
    * Rolling back changes when the current trove has gone missing from
      the server now causes the client to generate the changeset to apply
      based on the trove stored in the local database (CNY-693)

Changes in 1.0.26:
  o Build Changes:
    * When cooking a group, adding "--debug" to the "cvc cook" command
      line now displays detailed information about why a component is
      being included to solve a dependency. (CNY-711)
    * The mirror:// functionality introduced in Conary 1.0.25 had two
      small bugs, one of which prevented mirror:// pseudo-URLs from
      working.  These bugs are now fixed, thanks to Pavel
      Volkovitskiy. (CNY-704)
    * The "cvc cook" command now announces which label it is building
      at the beginning of the cook, making it easier to catch mistakes
      early. Thanks to Pavel Volkovitskiy for this fix. (CNY-615)
    * The source actions (addSource, addArchive, etc.) can now take
      a "package=" argument like the build actions do.  Thanks to
      Pavel Volkovitskiy for contributing this capability.  (CNY-665)
    * The "preMake" option had a bad test for the ';' character; this
      test has been fixed and extended to include && and ||.
      thanks to Pavel Volkovitskiy for this fix. (CNY-580)
    * Many actions had a variety of options (dir=, subdir=, and
      subDir=) for specifying which directory to affect.  These have
      been converted to all prefer "dir=", though compatibility
      with older recipes is retained by continuing to allow the
      subDir= and subdir= options in cases where they have been
      allowed in the past. Thanks to Pavel Volkovitskiy for this
      enhancement. (CNY-668)

Changes in 1.0.26:
  o Server Changes:
    * The Conary web interface now provides a method to rely solely on
      a remote repository server to do authentication checks. (CNY-705)
    * The ACL checks on file contents and file object methods have
      been improved. (CNY-700)
    * Assertions have been added to prevent redirect entries from
      being added to normal troves.
    * An assertion has been added to ensure that redirects specify a
      branch, not a version.
    * The server returns a new FileStreamsMissing exception when the
      client requests file streams with getFileVersion or
      getFileVersions and the requested file stream is not present in
      the repository database. (CNY-721)
    * getFileVersions() now raises FileStreamMissing when it is given
      invalid request.
    * getFileContents() now raises a new FileHasNoContents exception
      when contents are requested for a file type which has no
      contents (such as a symlink).

  o Bug Fixes:
    * A bug that could cause "conary updateall" to attempt to erase
      the same trove twice due to a local update has been fixed.
      (CNY-603)
    * Attempts to target a clone to a version are now caught.  Only
      branches are valid clone targets. (CNY-709)
    * A bug that caused Trove() equality checks to fail when comparing
      redirects has been fixed.
    * A bug that caused the flavor of a redirect to be store
      improperly in the repository database has been fixed.
    * The resha1 script now properly skips troves which aren't present
      in the repository.
    * Conary 1.0.24 incorporated a fix for CNY-684 to correct behavior
      when storing src.rpm files rather than their contents.  The fix
      worked for local builds but not for commits to repositories.
      Conary 1.0.26 includes a fix that corrects the behavior when
      committing to a repository as well. (CNY-684)
    * A bug that prevented flavored redirects from being loaded from
      the repository database has been fixed.
    * "Conary migrate" now will follow redirects. (CNY-722)

Changes in 1.0.25:
  o Build Changes:
    * The addArchive() source action will search for reasonably-named
      archive files based on the name and version if given a URL ending
      with a "/" character. Thanks to Pavel Volkovitskiy for the
      initial implementation. (CNY-671)
    * All source actions, when given a URL that starts with "mirror://",
      will search a set of mirrors based on files in the mirrorDirs
      configuration entry, with default files provided in the
      /etc/conary/mirrors/ directory. Thanks to Pavel Volkovitskiy for
      the initial implementation. (CNY-171)
    * Symbolic links are now allowed to provide a soname even if they
      reference an ELF file only indirectly through other symbolic
      links.  Previously, a symbolic link could only provide a soname
      if it directly referenced an ELF file. (CNY-696)

  o Bug Fixes:
    * A bug that caused unhandled exceptions when downloading the file
      contents needed for a distributed changeset in threaded mode has
      been fixed. This bug was introduced in 1.0.24. (CNY-701)

Changes in 1.0.24:
  o Server Changes:
    * The server binary access log can now be downloaded by an
      administrator by visiting the http://servername/conary/log
      URL. Once the log is accessed it is rotated automatically by the
      repository server. Subsequent accesses to the log URL will only
      yield log entries added since the last access. (CNY-638)
    * The Users and Groups tab in the web management UI is no longer
      highlighted when administrators change their passwords.

  o Client Changes:
    * A --what-provides option has been added to "conary query" and
      "conary repquery".
    * A bug that installed extra components of a package that is being
      installed instead of updated due to the existing package being
      pinned has been fixed. (CNY-682)

  o Build Changes:
    * When pulling files out of a src.rpm file, Conary now stores the
      src.rpm file itself in the repository rather than the files
      pulled from it. (CNY-684)
    * Mono dependency version mappings are now discovered in CIL policy
      .config files. (CNY-686)
    * The internal util.literalRegex() function has been replaced by
      use of re.escape(). (CNY-634)

  o Bug Fixes:
    * The Conary Repository web interface no longer returns a
      HTTP_FORBIDDEN (403) when a bad password is given by the user.
      This allows the user to re-try authentication.
    * The --signatures and --buildreqs flags now work with "conary
      showcs".  (CNY-642)
    * A bug in the NetworkRepositoryClient default pwPrompt mechanism
      has been fixed.
    * Error messages when entitlements fail to load have been
      improved. (CNY-662)
    * The repository client no longer caches repository access info
      when the attempt to access was unsuccessful. (CNY-673, affects
      CNY-578)
    * A bug that caused x86 flavored troves from being updated
      properly when using "conary updateall" on an x86_64 system has
      been fixed. (CNY-628)
    * A bug that caused migrate behavior to not respect pins when the
      pinned troves were set to be erased (CNY-680).
    * Calling r.ComponentSpec(':foo') works again; it is exactly
      equivalent to r.ComponentSpec('foo'). (CNY-637)
    * Calling r.Move() with only one argument now fails explicitly
      rather than silently doing nothing. (CNY-614)

Changes in 1.0.23:
  o API Additions:
    * The interface to create, list and delete access groups and
      modify the users therein through is now exposed though
      ConaryClient.
    * The interface to delete entitlement groups is now exposed
      through ConaryClient.

  o Client Changes:
    * "conary updateall" now accepts the --keep-required command line
      argument.
    * the mirror script now provides download/commit feedback using
      display callbacks like other conary commands
    * the excludeTroves config option will now keep fresh installs from
      happening when an update job is split due to a pinned trove.

  o Server Changes:
    * The repository database migration code now reports an error when
      trying to migrate old-style redirects.  The code to perform the
      migration is incomplete and creates invalid new-style
      redirects.  If you have a repository with old-style redirects,
      contact rPath for assistance with your migration. (CNY-590)

  o Bug Fixes:
    * Subdirectories within source components are now better supported.
      Specifically, different subdirectories with the same filename will
      now work. (CNY-617)
    * The util.literalRegex() function now escapes parenthesis characters.
      (CNY-630)
    * Manifest files now handle file names containing "%" characters.
      Fix from Pavel Volkovitskiy. (CNY-627)
    * Fixed a bug in migrate that caused its behavior to shift when migrating 
      to the same version that is currently installed.
    * Fixed a bug in the logcat script that caused the entitlement field to
      display the user information instead. (CNY-629)

  o Build Changes:
    * The r.addArchive() source action can now unpack Rock Ridge and
      Joliet ISO images, with some limitations. (CNY-625)

Changes in 1.0.22:
  o Client Changes:
    * Conary now has hooks for allowing you to be prompted for both name
      and password when necessary.
    * Conary will no longer report a traceback when trying to perform 
      dependency resolution against repositories that are not available.
      Instead, it will print out a warning. (CNY-578)

  o Build Changes:
    * It is now possible to set environment variables to use within
      Conary builds from within conary configuration files, using the
      new "environment" configuration item.  Thanks to Pavel
      Volkovitskiy for implementing this feature. (CNY-592)
    * In previous versions of Conary, calls to r.PackageSpec() would
      improperly override previous calls to r.ComponentSpec(); now
      the ordering is preserved.  Thanks to Pavel Volkovitskiy for 
      this fix. (CNY-613)

  o Bug Fixes:
    * A bug that would allow recursively generated changesets to
      potentially have missing redirect flags has been fixed.
    * A bug in redirect handling when the branch changed but the trove
      name didn't has been fixed - conary will do a better job of
      determining what jobs to perform in this situation. (CNY-599, CNY-602)
    * Errors relating to PGP now just display the error instead of causing 
      conary to traceback. (CNY-591)
    * Conary sync on a locally cooked trove will no longer traceback (CNY-568)
    * --from-file and sync now work together.
    * An AssertionError that was occasionally reached by incorrect repository
      setups is now a ConaryInternalError
    * A bug when updating to a locally cooked trove when the user had 
      manually removed files has been fixed. (CNY-604)
    * CONARY files that are not accessible will no longer cause conary to
      traceback when trying to read context from them. (CNY-456)
    * signatureKeyMap configuration entries are now checked to ensure
      they are valid. (CNY-531)

Changes in 1.0.21:
  o Client Changes:
    * The "conary migrate" command has changed behavior significantly
      in order to make it more useful for updating a system to exactly
      match a different group.  However, this change makes it much
      less useful for updating normal systems.  "conary migrate"
      should not be used without first reading the man page
      description of its behavior.  The old migrate behavior is now
      available by using "conary sync --full".  "conary syncchildren"
      has been renamed to "conary sync", and its behavior has also
      been modified slightly as a result.  The old behavior is
      available by using "conary sync --current". Please read the man
      page for a full description of the "sync" command as well.  (CNY-477)

  o Build Changes:
    * A "package" keyword parameter has been added to build actions,
      which specifies the package and/or component to which to assign
      the files that are added (not modified or deleted) by that build
      action.  For example, r.MakeInstall(package="foo") will place
      all the new files installed by the MakeInstall action into the
      "foo" package.  Thanks to Pavel Volkovitskiy for contributing
      this capability.  (CNY-562)
    * A "httpHeaders" keyword parameter has been added to the
      r.addArchive(), r.addPatch(), and r.addSource() source actions
      so that headers can be added to the HTTP request.

  o Bug Fixes:
    * The r.addPatch() build action no longer depends on nohup to
      create a file in the current directory (a bug introduced in
      conary 1.0.19). (CNY-575)
    * Commits with missing files no longer traceback. (CNY-455)
    * A bug that caused "#!/usr/bin/env /bin/bash" to not be
      normalized to /bin/bash by the NormalizeInterpreterPaths policy
      has been fixed.
    * A bug that prevented Conary from being able to download files
      that contain '&' or ';' characters has been fixed.  This allows
      Conary to download sources from cgi-bin URLs.
    * "cvc merge" no longer fails to merge changes from the parent
      branch when the shadowed version doesn't exist on the parent
      branch.

Changes in 1.0.20:
  o Build Changes:
    * "jvmdir", "javadir", "javadocdir", and "thisjavadocdir" have
       been added to the default set of macros.
    * A r.JavaDoc() build action has been added.  It funtions
      exactly like the "r.Doc()" build action, except it coppies into
      "%(thisjavadocdir)s".
    * When the r.addArchive() source action attempts to guess the main
      directory in which to build, it now recognizes when when sources
      have been added in an order that defeats its algorithm and provides
      a helpful error message. (CNY-557)

  o Client Changes:
    * A --tag-script parameter has been added to the rollback
      command. (CNY-519)

  o Bug Fixes:
    * A bug in clone behavior that caused Conary to try to clone
      excessive troves has been fixed.  If you were cloning uphill
      from branch /a/b to /a, and a buildreq was satisfied by a trove
      on /a//c, Conary would try to clone the buildreq to /a as well.
      (CNY-499)
    * A bug in the "r.Ant()" and "r.JavaCompile()" build actions which
      caused the CLASSPATH variable to get mangled has been fixed.
    * A bug in 'r.ClassPath()' that caused a traceback has been fixed.
    * A bug that caused the "change password" tab to be displayed when
      browsing the repository via the web as an anonymous user has
      been fixed.
    * The web service code no longer permits the anonymous user to
      view the "change password" (/conary/chPassForm) form.
    * The r.addPatch() source action no longer hangs when presented
      with large patches, which fixes a bug introduced in Conary
      1.0.19.

Changes in 1.0.19:
  o API Change:
    * In order to fully represent empty flavors in Conary, a new Flavor
      object class has been added.  Previously, DependencySet objects
      were used to store flavor information.  Unfortunately it was not
      possible to distinguish "empty flavor" from "flavor not specified".
      When dealing with thawing frozen flavors, use ThawFlavor() instead
      of ThawDependencySet().  When testing to see if a flavor is empty,
      use the isEmpty() method of the flavor object.

  o Client Changes:
    * The default resolveLevel setting is now 2, this means that
      conary will try to update troves that would otherwise cause an
      update to fail.  See the conary man page for more details.
    * Multiple bugs have been fixed in interactive prompting for user
      passwords (CNY-466):
      - Password prompts are based on the server name portion of the
        label being accessed, not the actual hostname of the server
        (these are often different when repositoryMaps are used).
      - When no password callback is available, the operation will
        fail with an open error (which is identical to what would
        happen if no user name was present) instead of giving a
        traceback.
      - The download thread uses the passwords which the original
        thread obtained from the user.
      - The download thread is able to prompt for passwords from the
        user if distributed changesets require access to additional
        repositories.

  o Build Changes:
    * "r.Ant()", "r.JavaCompile()", and "r.ClassPath()" build actions
      have been added to support building java with conary.
    * "r.addPatch()" will now determine the patchlevel without users
      needing to add level= in the r.addPatch() call. The level
      parameter is still honored, but should not be needed.
    * "cvc cook --show-buildreqs" now displays build requirements
      inherited from parent recipe classes. (CNY-520)
    * The output of "cvc diff" and "cvc rdiff" can now be used as an
      input to patch when files are added between two versions. (CNY-424)
    * Use flags have been added for dom0 and domU.  They default to
      "sense prefernot".  The domU flag should be used to build
      binaries specific to Xen domU environments where special
      provisions are made for paravirtualization.  The dom0 flag
      should be used to build binaries specific to Xen dom0
      environments where special provisions are made for the
      hypervisor.  The existing "xen" flag should be used to build
      binaries specific to Xen which apply equally to Xen dom0 and
      domU environments.
    * Warning message for modes specified without an initial "0" have
      been improved to include the path that is affected. (CNY-530)

  o Server Changes:
    * Use the term Entitlement Class in all conary repository web interfaces
      replacing Entitlement Group.

  o Bugs Fixed:
    * The Conary Repository now returns an error to a client when
      committing duplicate troves that have an empty flavor. (CNY-476)
    * When checking out a source trove from a repository using
      "cvc checkout", the user is no longer warned about not being able
      to change the ownership of the files checked out.
    * A bug has been fixed in conary's determination of what troves
      had been updated locally.  This bug caused "conary updateall" to
      consider many x86 troves as needing to be updated separately
      instead of as a part of group-dist.  This could cause updateall
      failures. (CNY-497)
    * A bug that caused 'conary q tmpwatch:runtime --recurse' to traceback
      has been fixed (CNY-460)
    * Interactive mode now handles EOF by assuming it means 'no';
      thanks go to David Coulthart for the patch. (CNY-391)
    * Configuration settings in contexts can now be overridden from
      the command line. (CNY-22)
    * Redirect changesets now have primary troves, meaning they will
      display better when using "conary showchangeset". (CNY-450)
    * User's passwords are now masked when using "cvc context" (unless
      --show-passwords is specified). (CNY-471)
    * Removed excess output from commitaction which was caused by a
      change in option parsing code (CNY-405)

Changes in 1.0.18:
  o Client Changes:
    * Trying to shadow a cooked redirect now results in an error. (CNY-447)
    * A --keep-required option has been added to tell Conary to leave
      troves installed when removing them would break
      dependencies. This used to be the default behavior; Conary now
      issues a dependency error instead. (CNY-6)
    * "delete-entitlement" and "list-entitlements" options have been
      added to the "manageents" script.

  o Build Changes:
    * Python dependencies are now generated for .pyc files as well as
      for .py files. (CNY-459)

  o Server Changes:
    * Support for deleting entitlements, listing the entitlement
      groups a user can manage, and removing the ACL which lets a group
      manage an entitlement group has been added.
    * Entitlement management has been added to the Conary repository
      web interface. (CNY-483)

  o Bug Fixes:
    * The "list-groups" option to the "manageents" script has been
      corrected to list the groups the user can manage instead of the
      groups that user belongs to.

Changes in 1.0.17:
  o Client Changes:
    * Individual file removals performed by "conary remove" now create
      rollbacks. (CNY-7)
    * The repository mirroring client supports two new configuration
      options:
      - matchTroves is a regexp list that limits what troves will be
        mirrored based on the trove names;
      - recurseGroups takes a boolean value (True/False) which will
        cause the miror client to recurse through a groups and mirror
        everything that they include into the target repository.

  o Server Changes:
    * A single conary repository can host multiple serverNames. In the
      Conary repository's configuration file, the serverName directive
      can now specify a space separated list of valid server names
      which will be accepted and served from that repository. (CNY-16)

Changes in 1.0.16
  o Build Changes:
    * A check has been added to "cvc commit" that ensures a .recipe
      file exists in the CONARY state file.
    * Recipe classes can now set an "abstractBaseClass" class
      variable.  When set, Conary will not require a setup() method in
      the class.  This is used for creating superclass recipes where
      setup() methods are not needed.

  o Server Changes:
    * A new "entitlementCheckURL" configuration option has been added.
      This is a hook that allows external validation of entitlements.
    * The Conary Repository web interface look and feel has been
      updated.  The interface will look incorrect unless
      conary-web-common 1.0 or later is installed.

  o Bug Fixes:
    * When running "cvc log" on a newly created source component, cvc now
      errors gracefully instead of tracing back. (bz #863)
    * Conary now changes to the / directory before running tag
      scripts. (bz #1134)
    * "cvc co foo=invalidversionstring" now gives a more helpful error
      message. (bz #1037)
    * Cloning binary troves uphill now correctly checks for the source
      trove uphill.
    * A bug that would cause "conary migrate" to raise a KeyError when
      updating a group that referenced the same trove twice (through
      two subgroups) has been fixed.
    * A bug that caused miscalculations when determining whether a
      shadow has been modified has been fixed.
    * A number of bugs affecting resetting distributed changesets have
      been fixed.
    * A bug in the MySQL dbstore driver that caused the wrong
      character encoding to be used when switching databases has been
      fixed.
    * A bug where running updateall when one of the two groups that
      reference a trove has no update caused an erase of that trove to
      be requested has been fixed (CNY-748).

Changes in 1.0.15
  o Client Changes:
    * When writing files as non-root, Conary will no longer create
      files setuid or setgid unless the uid/gid creating the file
      matches the username/groupname in the package.
    * Conary now checks the rollback count argument for non-positive
      numbers and numbers greater then the number of rollbacks
      available. (bz #1072)
    * The entitlement parser has been reimplemented using expat
      instead of a hand-coded parser.  A correctly formatted
      entitlement file should now be enclosed in an
      <entitlement></entitlement> element.  Conary will continue to
      work with files that do not contain the toplevel <entitlement>
      element.

  o Build Changes:
    * Support has been added for recipe templates.  Now when running
      "cvc newpkg", cvc will automatically create a recipe from a
      template specified by the recipeTemplate configuration
      option. (bz #671, #1059)
    * Policy objects can now accept globs and brace expansions when
      specifying subtrees.
    * Cross-compile builds now provide CONFIG_SITE files to enable
      cross-compiling programs that require external site config
      files.  The default site config files are included.
    * The "cvc checkout" command can now check out multiple source
      troves in a single invocation.

  o Server Changes:
    * An "externalPasswordURL" configuration option has been added,
      which tells the server to call an external URL for password
      verification.  When this option is used, user passwords stored
      in the repository are ignored, and those passwords cannot be
      changed.
    * An authentication cache has been added, which is enabled by
      setting The authCacheTimeout configuration to the number of
      seconds the cache entry should be valid for.

  o Bug Fixes:
    * A bug that caused using groupName parameter with r.replace() to
      traceback has been fixed. (bz #1066)
    * Minimally corrupted/incorrect conary state files will no longer cause 
      conary to traceback. (bz #1107)
    * A bug that prevented upload progress from being displayed when
      using "cvc commit" has been fixed. (bz #969)

Changes in 1.0.14:
  o Client Changes:
    * Conary now creates shadows instead of branches when cooking onto
      a target label.  This means, for example, that local cooks will
      result in a shadow instead of a branch.
    * Conary now creates shadows on the local label when creating rollbacks
      instead of branches.
    * The branch command has been removed.  Any potential branch should be 
      done with a shadow instead.
    * The verify command now shows local changes on a local shadow instead
      of a local branch
    * Local changesets create diffs against a local shadow (instead of
      a branch) and --target for the commit command retargets to a shadow
    * User conaryrc entries are now searched from most specific target to
      least specific (bz #997)
    * A fresh install of a group will cause all of its contained components 
      to be installed or upgraded as well, without reference to what is 
      currently installed on your system -- no trove will be skipped because
      it is referenced by other troves on your system but not installed.
    * Changeset generation across distributed shadows now force file 
      information to be absolute instead of relative when the files are on
      different servers, eliminating server crosstalk on source checkin and
      when committing local changesets. (bz #1033)
    * Cvc merge now takes a revision, to allow you merge only up to a certain
      point instead of to head.

  o Server Changes:
    * Removed the ability for the server to log updates to its contents
      store (mirroring has made this capability obsolete)
    * logFile configuration directive now logs all XML calls
    * Split user management out from core authorization object
    * All user management calls are based on user and group names now
    * The user management web interface for the repository now allows
      the administrator to enable and disable mirroring for groups

  o Bug Fixes:
    * Conary will not traceback if you try to update to a trove with a name
      that matches a filesystem path that you don't have access to (bz #1010).
    * Conary will not raise an exception if a standard config file (~/.conaryrc,
      for example) exists but is not accessible.
    * cvc no longer allows . and .. to be added to source troves (bz #1014)
    * cvc remove handles removing directories (bz #1014)
    * conary rollback no longer tracebacks if you do not have write access to
      the conary database.
    * deeply shadowed versions would fail when performing some version 
      operations.  This caused, for example, local cooks of shadowed troves
      to fail.
    * using loadInstalled with a multiarch trove no longer tracebacks (bz #1039)
    * group recipes that include a trove explicitly byDefault False could result
      in a trove when cooked that had the components of that trove byDefault
      True.
    * Stop sending duplicate Host: headers, proxies (at least squid) mangle 
      these into one host header, causing failures when accessing rbuilder
      repositories that depend on that host header (bz #795)
    * The Symlink() build action should not enforce symlinks not
      dangling, and should instead rely solely on the DanglingSymlinks
      policy.
    * A bug that caused conary to treat a reference as an install when it
      should have been an update due to a miscalculation of what local updates
      had been made on the system has been fixed.

Changes in 1.0.13:
  o Client Changes:
    * A new "conary migrate" command for updating troves has been
      added.  "conary migrate" is useful for circumstances when you
      want to update the software state on a system to be synchronized
      with the default state of a group.  To do this, "conary migrate"
      calculates the changeset required to: 1) update the trove (if an
      update is available); 2) install any missing included troves; 3)
      synchronize included troves that have a mismatched version; 4)
      remove any referenced troves that are not installed by default.
    * The includeConfigFiles configuration directive now accepts http
      and https URLs.  This allows organizations to set up centralized
      site-wide conary configuration.
    * Conary now gives a more detailed error message when a changeset
      attempts to replace an empty directory with a file and
      --replace-files is not specified.

  o Build Changes:
    * The addSource source action will now replace existing files,
      rather than replacing their contents.  This implies that the
      mode of the existing file will not be inherited, and an
      existing read-only file will not prevent addSource from
      working.
    * The internal setModes policy now reports "suid/sgid" only for
      files that are setuid or setgid, rather than all files which
      have an explicitly set mode.  (bz #935)
    * TagSpec no longer will print out ignored TagSpec matches twice,
      once for tags specified in the recipe, and once for tags
      discovered in /etc/conary/tags/*.  (bz #902)
    * TagSpec will now summarize all its suggested additions to
      buildRequires in a single line.  (bz #868)
    * A new reportMissingBuildRequires policy has been added to summarize
      all suggested additions to buildRequires in a single line at the
      end of the entire build process, to make it easier to enhance the
      buildRequires list via cut-and-paste.  (bz #869)

  o Bug Fixes:
    * A bug that caused conary to traceback when a file on the file
      system is owned by unknown uid/gid has been fixed.  Conary will
      now print an error message instead.  (bz #977)
    * A bug that caused conary to traceback when an unknown Use flag
      was used when cooking has been fixed.  Previously, "cvc cook
      --flavor 'foobar'" would create a traceback.  Conary now says
      'Error setting build flag values: No Such Use Flag foobar'.
      (bz #982)
    * Pinned troves are now excluded from updateall operations.
      Previously conary would try to find updates for pinned troves.
    * Conary now handles applying rollbacks which include overlapping
      files correctly.  Previously --replace-files was required to
      apply these rollbacks.
    * the config file directive includeConfigFile is no longer case sensitive 
      (bz #995)

Changes in 1.0.12:
  o Client changes:
    * The rollback command now applies rollbacks up to and including
      the rollback number specified on the command line. It also
      allows the user to specify the number of rollbacks to apply
      (from the top of the stack) instead of which rollback to
      apply. (bz #884)
    * Previously, the code path for installing files as part of a new
      trove required an exception to be handled.  The code has been
      refactored to eliminate the exception in order to reduce install
      times.

  o Build Changes:
    * The cvc command now has a --show-buildreqs option that prints all
      build requirements.  The --no-deps argument for cvc has been
      aliased to --ignore-buildreqs for consistency.

  o Bug Fixes:
    * Installing into a relative root <e.g. --root foo> when running
      as root no longer generates a traceback. (bz #873)
    * Replaced files are now stored in rollbacks. (bz #915)
    * File conflicts are now also detected via the database, not just
      via real file conflicts in the filesystem.
    * A bug that resulted in multiple troves owning a file has been fixed.
    * Rollbacks of troves that were cooked locally will no longer
      raise a TroveIntegrityError.
    * The "conary remove" command no longer generates a traceback when
      the filename given cannot be unlinked. (bz #887)
    * The missing usage message displayed when "cvc" and "conary" are
      run with no command line arguments has been restored.
    * Rollbacks for initial contents files didn't work; applying
      rollbacks now ignores that flag to get the correct contents on
      disk. (bz #924)
    * The patch implementation now properly gives up on patch hunks
      which include changed lines-to-erase, which avoids erasing lines
      which did not appear in the origial version of the file. (bz
      #949)
    * Previously, when a normal error occurred while prepping sources
      for cooking (extracting sources from source archives, for
      example), conary would treat it as a major internal error.  Now
      the error message is simply printed to the screen instead.
    * A typo in a macro will now result in a more helpful error
      message.
    * A bug that caused a traceback when performing "conary rq" on an
      x86_64 box with a large installLabelPath where only an x86
      flavor of a trove was available on one label in the
      installLabelPath has been fixed (bz #961).
    * Conary no longer creates a rollback status file when one isn't
      needed.  This allows /var/lib/conarydb to be on read-only media
      and have queries continue to work/.
    * Reworked "conary remove" to improve error messages and fix
      problems with multiple files being specified, broken symlinks,
      and relative paths (bz #853, #854)
    * The mirror script's --test mode now works correctly instead of
      doing a single iteration and stopping.

Changes in 1.0.11:
  o Client Changes:
    * Conary will now allow generic options to be placed before the command
      you are giving to conary.  For example, 'conary --root=/foo query'
      will now work.
    * the remove command no longer removes file tags from files for no good 
      reason
    * rollbacks now restore files from other troves which are replaced as part
      of an update (thanks to, say, --replace-files or identical contents)
    * --replace-files now marks files as owned by the trove which used to
      claim them
    * You can now kill conary with SIGUSR1 to make conary enter a debugger
      when you Ctrl-C (or a SIGINT is raised)
    * --debug-all now enters a debugger in more situations, including option
      parsing fails, and when you hit Ctrl-C.
    * added ccs2tar, which will convert most absolute changesets (like those
      that cook produces) into tarballs
    * Troves now don't require dependencies that are provided by themselves.
      As troves are built with this new behavior, it should significantly speed
      up dependency resolution.
    * added a script to recalculate the sha1s on a server (after a label
      rename, for instance)
    * added a script to calculate an md5 password (for use in an info recipe,
      for example)

  o Build Changes:
    * Conary now supports a saltedPassword option to r.User in user info-
      packages.  Full use of this option will require that a new shadow package
      be installed.

  o Bug Fixes:
    * command-line configurations now override context settings

  o Build Changes:

Changes in 1.0.10:
  o Client Changes
    * Given a system based on rPath linux where you only installed
      !smp kernels, conary would eventually start installing smp
      kernels on your system, due to the way the update algorithm
      would determine whether you should install a newly available
      trove.  Conary now respects flavor affinity in this case and
      does not install the smp kernel.
    * Mirror configuration files can now specify uploadRateLimit and
      downloadRateLimit.
    * Updates utilizing changeset files are now split into multiple
      jobs properly, allowing changeset files which create users to
      work proprely.
    * "conary rollback" now displays progress information that matches
      the "conary update" progress information.
    * added --with-sources option for clone

  o Bug Fixes:
    * A bug that caused an assertion error when switching from an
      incomplete trove to a complete trove has been fixed.
    * A bug in perl dependencies that caused extra directories to be
      considered part of the dependency has been fixed.
    * A bug affecting updates where a pinned, partially installed
      package was supposed to be updated due to dependency resolution
      has been fixed.
    * A bug that prevented updates from working when part of a locally
      cooked package was replaced with a non-locally cooked component
      has been fixed.  The bug was introduced in Conary 1.0.8.
    * A bug that caused a segfault when providing an invalid type to
      StringStream has been fixed.
    * The troveInfo web page in the repository browser now displays
      useful error messages instead of traceback messages.  The
      troveInfo page also handles both frozen and non-frozen version
      strings.
    * A bug that caused conary to download unnecessary files when checking out
      shadow sources has been fixed.
    * A bug that caused "cvc rdiff" between versions of a trove that
      were on different hosts to fail has been fixed.
    * Fixed a bug when determining local file system changes involving a file 
      or directory with mtime 0.
    * The --signature-key option was restored

Changes in 1.0.9:
  o Client Changes:
    * A new dependency resolution method has been added which can be turned
      on by setting resolveLevel to 2 in your conarycfg:  If updating trove 'a'
      removes a dependency needed by trove 'b', attempt to update 'b' to
      solve the dependency issue.  This will allow 'conary update conary'
      to work as expected when you have conary-build installed, for example.
    * Switched to using more of optparse's capabilities, including --help
      messages.
    * One short option has been added, cvc -m for message.

  o Bug Fixes:
    * Recipes that use loadRecipe('foo') and rely on conary to look upstream
      to find their branch now work correctly when committing.
    * A bug affecting systems with multiple groups referencing the same troves,
      where the groups are out of sync, has been fixed.
    * the mirror client now correctly handles duplicate items returned in
      trove lists by older servers
    * A bug that caused the mirror client to loop indefinitely when
      doing a --full-trove-sync has been fixed
    * conary rq --trove-flags will now display redirect info even if you
      do not specify --troves (bug #877)
    * dep resolution now support --flavors --full-versions output (bug #751)
    * cvc merge no longer tracebacks if files were added on both upstream
      and on the shadow
    * admin web access for the server doesn't require write permission for
      operations which also require admin access (bug #833)
    * A bug that caused r.remove() in a group to fail if the trove being
      removed was recursively included from another group has been fixed.
    * Conary update tmpwatch -tmpwatch:debuginfo will now erase 
      tmpwatch:debuginfo.
    * An ordering bug that caused info packages to not be updated with their
      components has been fixed.
    * Updates will now happen in a more consistent order based on an
      alphabetic sort.
    * the repository server now handles database deadlocks when committing
       changesets
  o Server Changes:
    * getNewSigList and getNewTroveList could return troveLists with
      duplicate entries

  o Documentation Changes:
    * The inline documentation for recipes has been significantly
      improved and expanded, including many new usage examples.

Changes in 1.0.8
  o Client changes:
    * Conary will now replace symlinks and regular files as long as their
      contents agree (bug #626)

  o Bug Fixes:
    * An error in the method of determining what local changes have been 
      made has been fixed.

Changes in 1.0.7:
  o Client changes:
    * A better method of determining what local changes have been made to a
      local system has been implemented, improving conary's behavior when
      updating.

  o Bugfixes:
    * A bug that caused the user to be prompted for their OpenPGP
      passphrase when building on a target label that does not match
      any signatureKeyMap entry has been fixed.  Previously, if you
      had a signatureKeyMap entry for conary.example.com, and your
      buildLabel was set to conary.example.com@rpl:devel, you would be
      prompted to enter a passphrase even when cooking locally to the
      local@local:COOK label.
    * Dependency resolution will no longer cause a trove to switch
      branches.
    * If a component is kept when performing dependency resolution
      because it is still needed, it's package will be kept as well if
      possible.
    * "conary q --path" now expands symlinks found in the path to the
      file in question. (bug #855)
    * Committing a changeset that provided duplicate file streams for
      streams the server previously referenced from other servers no
      longer causes a traceback.
    * Conary's patch implementation how handles patches which are
      already applied. (bug #640)
    * A server error triggered when using long flavor strings in
      server queries has been fixed.

  o Build fixes:
    * Group cooking now produces output to make it easier to tell what
      is happening.  The --debug flag can be used to get a more
      detailed log of what troves are being included.

  o Server changes:
    * The server traceLog now logs more information about the
      repository calls


Changes in 1.0.6:
  o Repository changes:
    * The commitaction script now accepts the standard conary arguments
      --config and --config-file.

  o Bugfixes:
    * cvc merge on a non-shadow no longer returns a traceback (bz# 792),
      and cvc context foo does not return a traceback when context foo does
      not exist (bz #757)  Fixed by David Coulthart.
    * A bug that caused new OpenPGP keys to be skipped when troves
      were filtered out during mirroring has been fixed.
    * opening invalid changesets now gives a good error message instead of
      a traceback
    * removed obsolete changemail script
    * Exceptions which display fileId's display them as hex sha1s now
      instead of as python strings
    * A bug where including a redirect in a group that has autoResolve 
      caused conary to traceback has been fixed.
    * A bug that kept conary from prompting for your password when committing
      has been fixed.
    * A bug that randomized the order of the labels in the  installLabelPath 
      in some error messages has been fixed.

  o Build fixes:
    * The default ComponentSpec for :perl components now include files
      in site_perl as well as in vendor_perl.
    * Ruby uses /usr/share/ri for its documentation system, so all files
      in %(datadir)s/ri are now included in the default :doc ComponentSpec.

Changes in 1.0.5:
  o Performance improvements:
    * The use of copy.deepcopy() has been eliminated from the
      dependency code.  The new routines are up to 80% faster for
      operations like DependencySet.copy().
    * Removing files looks directly into the file stream of the file
      being removed when cleaning up config file contents rather than
      thawing the full file stream.
    * Getting a single trove from the database without files returned file
      information anyway
    * Trove.applyChangeSet() optionally skips merging file information
    * Cache troves on the update/erase path to avoid duplicate fetchs from
      the local database

  o Bugfixes
    * Installing from a changeset needlessly relied on troves from the 
      database having file information while processing redirects
    * Extraneous dependency cache checks have been removed from the
      addDep() path.
    * When removing files, conary now looks up the file flags directly
      in the file stream in order to clean up config file contents.
      Previously the entire file stream was thawed, which is much more
      resource intensive.

  o Build fixes:
    * r.addArchive() now supports rpms with bzip2-compressed payloads.

Changes in 1.0.4:
  o Performance improvements:
    * The speed of erasing troves with many dependencies has been
      significantly improved.
    * The join order of tables is forced through the use of
      STRAIGHT_JOIN in TroveStore.iterTroves() to work around some
      MySQL optimizer shortcomings.
    * An --analyze command line option has been added to the
      stand-alone server (server.py) to re-ANALYZE the SQL tables for
      MySQL and SQLite.  This can significantly improve repository
      performance in some cases.
    * The changes made to dependency string parsing were a loss in
      some cases due to inefficiency in PyArg_ParseTuple().
      Performance sensitive paths in misc.c now parse the arguments
      directly.

  o Bugfixes:
    * An Apache-based conary repository server no longer logs
      tracebacks in error_log when a client disconnects before all
      data is sent.
    * A bug that caused cross repository commits of changesets that involved
      a branched trove to fail in some cases has been fixed.
    * If an entitlement is used for repository access, it is now sent
      over HTTPS instead of HTTP by default.
    * The conary emerge command no longer attempts to write to the root
      user's conary log file.
    * conary showcs --all now shows not-by-default troves.
    * Previously, there was no way using showcs to display only the troves
      actually in a changeset - conary would by default access the repository
      to fill in any missing troves.  Now, you must specify the
      --recurse-repository option to cause conary to search the repository
      for missing troves.  The --trove-flags option will now display when a
      trove is missing in a changeset.
    * A bug that caused showcs --all to display file lists even when --ls
      was not specified has been fixed.
    * When mirroring, you are now allowed to commit a trove that does
      not have a SHA1 checksum set.  This is an accurate replication
      of the data coming from the source repository.
    * A bug affecting multiple uses of r.replace() in a group recipe has been
      fixed.
    * A bug that caused components not to be erased when their packages were 
      erased when a group referencing those packages was installed has been 
      fixed.

Changes in 1.0.3
  o Client changes:
    * Conary displays full paths when in the error message generated
      when it can't open a log file rather than leaving out the root 
      directory.

  o Performance improvements:
    * A find() class method has been added to StreamSet which enables
      member lookups without complete thawing.
    * The code path for committing filestreams to repositories now
      uses find() to minimize file stream thaws.
    * DBstore now supports precompiled SQL statements for SQLite.
    * Retrieving troves from the local system database no longer
      returns file information when file information is not requested.
    * Dependencies, dependency sets, StreamCollections, file
      dictionaries, and referenced file lists now use C parsing code
      for stream thawing.
    * Extraneous trove instantiations on the system update path have
      been eliminated.
    * Adding troves to the local database now uses temporary tables to
      batch the insertions.

  o Bugfixes:
    * A bug that caused a mismatch between file objects and fileIds
      when cloning a trove has been fixed.

Changes in 1.0.2:
  o Bugfixes:
    * A bug that caused redirects to fail to build when multiple
      flavors of a trove exist has been fixed.
    * A bug with cooking flavored redirects has been fixed.
    * The cvc command no longer enforces managed policy with --prep.
    * A bug that caused disttools based python packages to be built as
      .egg files has been fixed.  This bug was introduced in conary
      0.94.
    * A bug that prevented checking in a recipe that deleted policy
      has been fixed.
    * A bug that prevented entitlements from being recognized by an
      Apache conary repository server when no username and password
      were set for a server has been fixed.
    * A bug that prevented errors from being returned to the client
      if it attempts to add an invalid entitlement key or has
      insufficient permission to add the entitlement key has been
      fixed.  An InvalidEntitlement exception has been added.
    * A repository bug prevented the mirror client from obtaining a
      full list of new troves available for mirorring has been fixed.
    * A bug in cooking groups caused the groups resulting from an
      r.addAll() to not respect the original group's byDefault
      settings in some cases has been fixed.

Changes in 1.0.1:
  o Database schema migration
    * Over time, the Conary system database schema has undergone
      several revisions.  Conary has done incremental schema
      migrations to bring old databases in line with the new schema as
      much as possible, but some remnants of the old schema remain.
      When Conary 1.0.1 runs for the first time, the database will be
      reloaded with a fresh schema.  This corrects errors that can
      occur due to incorrect SQL data types in table definitions.  An
      old copy of the database will be saved as "conarydb-pre-schema-update".

Changes in 1.0:
  o Bugfixes
    * A bug that allowed a group to be installed before children of
      its children were installed has been fixed.  This ensures this
      if a an update is partially completed, it can be restarted from
      where it left off.
    * A bug in python dependencies that sometimes resulted in a plain 
      python: __init__ dependency has been fixed.
    * A bug that dropped additional r.UtilizeUser matches for a file after
      the first one has been fixed.
    * Accessing a repository with the wrong server name no longer
      results in an Internal Server Error.  The error is marshaled
      back to the client.

Changes in 0.97.1:
  o Bugfixes
    * A bug has been fixed that allowed the "incomplete" flag to be
      unset in the database when applying changesets of troves that
      have no "incomplete" flag.  This resulted in "StopIteration"
      exceptions when updating the trove.
    * A bug has been fixed in the code that selects the OpenPGP key
      to be used for signing changesets at cook time.

Changes in 0.97:
  o Client changes:
    * All troves that are committed to repository through commits,
      cooks, branches, shadows, and clones, now always have SHA1
      checksums calculated for them.
    * Trove objects now have a version number set in them.  The
      version number is increased when the data types in the Trove
      object are modified.  This is required to ensure that a Conary
      database or repository has the capability of storing all the
      information in a Trove.  All trove data must be present in order
      to re-calculate SHA1 checksums.  If a local system understands
      version 1 of the Trove object, and a repository server sends a
      changeset that contains a version 2 Trove, an "incomplete" flag
      will be set for trove's entry in the database.  When accessing
      that trove later for merging in an update, the client will go
      back and retrieve the pristine Trove data from the repository
      server so it will have all the data needed to preform three way
      merges and signature verification.

  o Repository changes:
    * Repositories will now reject commits whose troves do not have
      correct SHA1 checksums.

Changes in 0.96:
  o Client changes:
    * conary rq now does not use affinity by default, use --affinity to turn
      it on.  The rq --compatible-troves flag has disappeared.  Now 
      you can switch between displaying all troves that match your system 
      flavor and that match affinity flavor by switching between
      --available-troves with and without the --affinity flag.
    * conary q now displays installed, not by default troves by default,
      but skips missing troves.
    * Fixed an update bug where updating an x86 library on an x86_64 system
      would cause conary to switch other x86_64 components for that library
      to x86 versions.
    * update job output is compressed again
    * Fixed an update bug where if you had made a local change to foo, and then 
      updated a group that pointed to an earlier version of that trove,
      the trove could get downgraded

  o Other changes:
    * Mirroring now mirrors trove signature

Changes in 0.95:
  o Client changes:
    * The "conary verify" command now handles non-regular files with
      provides and requires (for example, symlinks to shared libraries
      that provide sonames).
    * The "conary showchangeset" command now takes --recurse and
      --no-recurse arguments.
    * All info-* packages are now updated in their own individual jobs;
      this is required for their dependencies to be reliable.
    * The conary syncchildren command now will install new packages
      when appropriate.

  o Repository changes:
    * Additional logging has been added to the repository server.
      Logging is controlled by the "traceLog" config file variable,
      which takes a logging level and log path as arguments.
    * Conary now detects MySQL Database Locked errors and will retry
      the operation a configurable number of times.  The "deadlockRetry"
      configuration variable controls the number of retries and
      defaults to 5.

  o Build changes:
    * Conary now uses site.py to find all possible correct elements of
      sys.path when generating python provides and requires.  Previously,
      new elements added via .pth files in the package being built would
      be ignored for that package.
    * The PythonSetup() build action now works properly with setup.py
      files that use "from setuptools import..." instead of "import
      setuptools".

  o Other changes:
    * The conarybugz.py script has been restored to functionality by
      moving to the conaryclient interface for accessing the
      repository.

Changes in 0.94:

  o Redirects no longer point to a specific trove; they now redirect
    to a branch. The client chooses the latest version on that branch
    which is compatible with the local system.

  o Bug Fixes
    * A bug in getNewTroveList() that could cause duplicate
      troves to be returned has been fixed.
    * A bug that caused a repository server running under Apache to
      fail with an Internal Server Error (500) when a client requested
      a changeset file that does not exist has been fixed.
    * Conary no longer displays an error when attempting to write to a
      broken pipe.  (bug #474)
    * Conary now respects branch affinity when moving from old-style
      groups to new-style groups.

  o Client changes:
    * The query/repquery/showcs command line options have been
      reworked.  See the conary man page for details.
    * When "cvc merge" is used to merge changes made on the parent
      branch with changes made on a shadow, conary now records the
      version from the parent branch that was used for the merge.
      This is required to allow conary to handle changing the upstream
      version on a shadow.  It is also useful for accounting
      purposes.  (bug #220)
    * "conary emerge" can now be performed on a recipe file.
      Previously you were required to emerge from a repository. (bug
      #526)
    * Progress is now displayed as conary applies a rollback. (bug #363)
    * Java, Perl, and Python dependencies are now enforced by default.

  o Build changes
    * PythonSetup() no longer passes the --single-version-externally-managed
      argument to setup.py when it uses distutils instead of setuptools.

Changes in 0.93:
  o Bug Fixes
    * A bug in the "conary verify" code sometimes resulted in an
      unhandled TroveIntegrity exception when local modifications were
      made on the system. (bug #507)
    * Usernames and passwords with RFC 2396 reserved characters (such
      as '/') are now handled properly. (bug #587)

  o Server changes
    * Standalone server reports warnings for unsupported configuration options
      instead of exiting with a traceback.
    * Compatibility for repositoryDir has been removed.
    * A bug caused queries for multiple flavors of the same trove
      to return incorrect results has been fixed.
    * Apache hooks now ignore IOErrors when writing changesets to the
      client.  These normally occur when the client closes the
      connection before all the data is sent.

  o Client changes
    * SHA1 checksums are now computed for source checkins and local
      change set commits.
    * Flavor affinity is now more relaxed when updating troves.  For
      example, if you have a trove with flavor that requires sse2 but
      your system flavor is ~!sse2, conary will only prefer troves
      with sse2 enabled instead of requiring it.

  o Build changes
    * PythonSetup() now correctly requires python-setuptools:python
      instead of python-setuptools:runtime.
    * Automatic python dependency provision now searches more directories
      to better support multilib python.
    * Conary now defaults to building in ~/conary/builds instead of
      /var/tmp/conary/builds, and caching in ~/conary/cache instead
      of /var/cache/conary.

Changes in 0.92:
  o Package Building Changes:
    * Conary policy has been split out into the conary-policy package.
      (Some policy was left in conary proper; it is needed for
      internal packaging work.)
    * Conary prints out the name of each policy as it runs, making it
      possible to see which policies take the most time.
    * BuildLog files no longer contain lines that end with \r.
    * A new 'emergeUser' config item has been added.  Conary will
      change to this user when emerging packages as root.
    * --no-deps is now accepted by 'conary emerge'.

  o Group Building Changes:
    * A bug has been fixed in dependency checking when using
      autoResolve where deleted weak troves would be included in
      autoResolve and depChecks.

  o Client changes:
    * Conary can now rate limit uploads and downloads.  The rate limit
      is controlled by the "uploadRateLimit" and "downloadRateLimit"
      configuration variables, which is expressed in bytes per second.
      Also, Conary displays the transfer rate when uploading and
      downloading.  Thanks to Pavel Volkovitskiy for these features.
    * The client didn't write config files for merged changesets in
      the right order, which could result in changesets which could
      not be committed to a repository.
    * Fixed a bug in the update code caused conary to behave
      incorrectly when updating groups.  Conary would install
      components of troves that were not installed.

  o General Bug Fixes
    * Conary did not include the trove sha1 in the troveinfo diff
      unconditionally.  This prevents clients from being able to
      update when a repository is forced to recalculate sha1
      signatures.

Changes in 0.91:
  o Bugfixes
    * A bug was fixed the code that freezes path hashes.  Previously,
      path hashes were not sorted in the frozen representation.  Code
      to fix the frozen path hashes in databases and repositories has
      beed added.
  o Build
    * added cleanAfterCook config that controls whether conary tries to
      clean up after a successful build

Changes in 0.90.0:
  o Code Structure/Architecture Changes:
    * Conary now has the concept of "weak references", where a weak reference
      allows conary to be able to recognize the relationship between a
      collection and the children of collections it contains.  This allows
      us to add several new features to conary, documented in Client and Build
      changes.
    * SQL operations have been migrated to the dbstore driver to allow
      for an easier switch of the database backends for the server side.
    * Various query and code structure optimizations have been
      implemented to allow running under MySQL and PostgreSQL.

  o Documentation Changes:
    * Added summaries about updateall in the conary man page and added
      information about the command-line options for conary rq.
    * Clarified behavior of "conary shadow --source-only" with respect to
      rPath bug #500.
    * Added synonyms for cvc and conary commands which have shortcuts
      (ex: checkout and co).
    * Added man page entry about cvc clone.

  o Package Building Changes:
    * Build logs now contain unexpanded macros, since not all macros
      may be defined when the build log is initially created.
    * The emerge command can now accept version strings.
    * The RemoveNonPackageFiles policy now removes fonts.cache*,
      fonts.dir, and fonts.scale files, since they are always
      handled by tag handlers.
    * The Make() build action can now take a makeName keyword argument
      for cases when the normal Make() handling is exactly right but
      a different make program is required (nmake, qmake, etc.).
    * The new PythonSetup() build action uses very recent versions
      of the python setuptools package to install python programs
      which have a setup.py that uses either the old disttools or
      new setuptools package.
    * fixed bug #bz470: loadInstalled('foo') will now work when you have
      installed a local cook of foo.

  o Group Building Changes:
    * add() now takes a "components" option.  r.add(<package>,
      components=['devel', 'runtime'])  will install <package>, but only the
      'runtime' and 'devel' components of <package> by default.
    * remove() can now 'remove' troves within child troves.
    * When a component is added, (either via r.add() or dep resolution)
      is automatically added as well (though not all its sibling components)
    * A new r.removeComponents(<complist>) command has been added.  It
      allows you to create a group where all devel components are
      byDefault False, for example: r.removeComponents(['devel',
      'devellib']).
    * The installPath used to build a group in is now stored in troveInfo.
    * r.addAll() now recurses through all the included groups
      and creates local versions of them as well by default.
    * A new r.replace(<name>, <newversion>, <newflavor>) command has
      been added.  It removes all versions of name from all groups in
      the recipe and replaces them with the version found by searching
      for newVersion, newFlavor.

  o Client Changes:
    * When committing source changes in interactive mode, conary will ask you
      you to confirm the commit.
    * A new configuration option, autoResolvePackages, tells conary to install
      the packages that include the components needed for dep resolution.
    * You can now install locally cooked groups.
    * If foo is a redirect to bar, and you run 'conary update foo' when
      foo is not installed on your system, conary will act as if you had
      typed 'conary update bar'.  Previously, it would act as if you had typed
      'conary update bar --no-recurse'.

  o Config Changes:
    * Conary config handling now supports comments at the end of config lines.
      # can be escaped by a \ to use a literal # in a configuration option.
    * Default macros used in cooking are now stored in /etc/conary/macros.
      The 'defaultMacros' parameter determines where cvc searches for macro
      definitions.
    * Conary configuration now searches for configuration files in 
      /etc/conary/conf.d/ after reading in /etc/conaryrc

  o Server Changes:
    * Creating changesets atomically moves complete changesets into place.
    * The contents store no longer reference counts entries.
    * Added support for trove marks to support mirroring.  A client
      can use a trove mark to ask the server for any trove that has
      been added since the last trove mark mirrored.
    * Added the hasTroves() interface to support mirroring.  This allows
      the mirror client to make sure that the target mirror does not
      already have a trove that is a candidate for mirroring from the
      source repository.
    * Added support for traceback emails from the repository server.
    * The repository contents store was reworked to avoid reading
      precompressed gzipped data twice (once to double check the uncompressed
      contents sha1 and once to copy the file in place).
    * We have changed the way schema creation and migration is handled
      in the repository code. For administrative and data safety reasons,
      schema upgrades and installs can be performed from now on only by
      running the standalone server (conary/server/server.py --migrate),
      thus avoiding race conditions previously created by having multiple
      Apache processes trying to deal with the SQL schema updates.

   o Command Changes
    * A new script that mirrors repositories has been added.  It is in
      the scripts/ directory in the source distribution of Conary.

Changes in 0.80.4:
  o Build Changes:
    * PackageRecipe has been changed to follow our change to split
      conary into three packages.
    * x86_64 packaging elimintated the conary:lib component to follow x86
      (those files now belong in conary-build:lib)

Changes in 0.80.3:
  o Client Changes:
    * The internal branch source and branch binary flags were changed
      to a bitmask.
    * The warning message printed when multiple branches match a cvc
      checkout command has been improved.
    * Only interactive mode can create binary shadows and branches, and
      a warning is displayed before they are created (since source branches
      are normally the right thing to use).

  o Build Changes:
    * Files in subdirectories named "tmp" are no longer automatically
      excluded from packaging, except for /tmp and /var/tmp.
    * DanglingSymlinks now traverses intermediate symlinks; a symlink
      to a symlink to a symlink will no longer confuse it.

Changes in 0.80.2:
  o Client Changes:
    * Bugs in "conary update foo=<old>--<new>" behavior have been
      fixed.
    * "cvc co foo=<label>" will now work even if you don't have a
      buildLabel set
    * "conary showcs" will now work more nicely with group changesets.
    * "conary showcs --all" no longer shows ids and sha1s.
    * We now never erase pinned items until they are explicitly unpinned.
    * "conary verify" and "conary q --diff" work again.
    * "conary q tmpwatch --components" will display the components
      installed for a package.
    * The pinTroves config item behavior has been fixed.  It now
      consistently pins all troves that match a pinTrove line.
    * When a trove is left on the system because of dependency resolution
      during an update, a warning message is printed.
    * Command line configuration, such as --config
      'buildLabel conary.rpath.com@rpl:devel', now overrides context
      configuration.

  o Server Changes:
    * The repository server now retries a request as an anonymous user
      if the provided user authentication information does not allow
      a client request to succeed.
    * When using "server.py --add-user" to add a user to a repository
      server, the user will only be given admin privileges if --admin
      is added to the command line.  Previously, all users added with
      server.py had admin privileges.  Additionally, if the username
      being added is "anonymous", write access is not granted.

  o Build Changes:
    * It is now possible for a recipe to request that specific
      individual requirements be removed from files using the
      exceptDeps keyword argument to r.Requires().  Previously
      you had to accept all the dependencies generated by r.Requires()
      or none of them.
    * r.Replace() now takes a lines=<regexp> argument, to match a line based
      on a regexp.
    * The EnforceJavaBuildRequirements policy has been added.  When
      you are packaging precompiled Java software where you have
      .class/.jar files but no .java files, you can use "del
      EnforceJavaBuildRequirements" to prevent this from policy from
      generating false positives.
    * The EnforceCILBuildRequirements policy has been added.
    * Enforce*BuildRequirements now warn when a package has requirements
      which they don't fulfill themselves and which are not fulfilled by
      the system database.  (for example, soname dependencies from linking
      against libraries that are not managed by Conary on the system.)
    * Automated Perl dependencies have been added, for both provides
      and requires.  They are not yet enforced, in order to give time
      to adapt while perl packages are being re-built.
    * The EnforcePerlBuildRequirements policy has been added.
      Failures found by this policy may be caused by packages on the
      system not having been rebuilt yet with Perl dependencies, but
      could also show bugs in the Perl dependency code.
    * Automated Python dependencies have been added, for both provides
      and requires.  Like Perl dependencies, they are not yet
      enforced.
    * The EnforcePythonBuildRequirements policy has been added, with
      the same caveats as EnforcePerlBuildRequirements.
    * Conary now writes more information about the build environment
      to the build log when cooking.
    * A bug that caused r.Requires('file:runtime') to create a file
      dependency on 'runtime' instead of trove dependency on
      'file:runtime' has been fixed.
    * Java dependencies now properly ignore array elements in all cases,
      removing false Java dependencies like "[[I" and "[[B".


Changes in 0.80.1:
  o Client Changes:
    * User names and passwords are no longer allowed in repository maps;
      "user" configuration entries must be used instead.
    * The clone command now allows you to clone a binary onto the same
      branch, without having to reclone the source.
    * The TroveInfo table on the client is getting corrupted with
      LoadedTrove and BuildReq entries for components.  These entries
      are only valid on packages.  Code was added to catch when this
      happens to aid debugging.  Additionally, Conary will
      automatically remove the invalid entries the first time 0.80.1
      is run.
    * Environment variables are expanded in paths in conary configuration files.
    * localcs now allows the version and flavor to be specified for a trove
    * conary scs --all now behaves the way it used to again
  o Build Changes:
    * Java dependency generation is now enabled; Java dependency enforcement
      is still disabled.
    * The skipMissingSubDir keyword argument now actually works correctly
      when the subdirectory is missing.
  o Common Changes:
    * Entitlement support has been added as an alternate method of
      authentication.

Changes in 0.80.0:
  o Client Changes:
    * The logic for defining updates across a hierarchy has been completely
      replaced. Instead of rigidly following the trove digraph, we flatten
      the update to choose how troves get updated, and walk the hierarchy
      to determine which updates to actually apply.
    * Dependency resolution could include troves which caused duplicate
      removals for the troves those included troves replace
    * Chroot handling was broken in 0.71.2 and prevented the user name
      lookup code for the chroot from exiting back out of the chroot
    * showchangeset on relative changesets now displays them as jobs.
    * query and queryrep now exclude components if they match their
      package name
    * Conary cleans up rollbacks when a changeset fails to apply.
      Previously, an invalid changeset was saved in the rollback
      stack, which made applying it impossible
    * Removed direct instantiation of NetworkRepositoryClient object; it
      should be created by calling ConaryClient
    * repositoryMap should not contain usernames and passwords now; user
      config file option should hold those instead (user *.rpath.org user pass)
    * If a user name is given without a password the password will be prompted
      for if the repository returns a permissions error
    * added --components parameter to q and rq to not hide components
    * conary update --full-versions --flavors now will work as expected
    * fixed a bug with conary erase foo=/branchname
    * When in multi-threaded mode, the download thread now checks to see
      if the update thread wants to exit.  This fixes many of the
      "timeout waiting for download thread to terminate" messages.
    * Fixed bug where conary erase foo --no-deps wouldn't erase a component
      of foo if it was required by something else
  o Build Changes:
    * Dependencies are now generated for Java .class and .jar files.
      They are not yet enforced, to give time to rebuild Java packages.
    * Java dependency generation has been turned off until 0.80.1 in
      order to wait until there is a deployed version of Conary with
      long dependency handling; some .jar files have so many
      dependencies that they overflowed dependency data structures.
    * CheckDesktopFiles now looks in /usr/share/icons for icons, and
      can find icon names without extensions specified.
    * Build actions which take a subDir keyword argument now also can
      take a skipMissingSubDir keyword argument which, if set to True,
      causes the build action to be skipped if the specified subdirectory
      does not exist.  By default, those build actions will now raise
      an error if the directory does not exist, rather than running in
      the wrong subdirectory as they did previously.
    * You can now cook a recipe that has a superclass that is defined
      locally but a has supersuperclass that is in the repository.  Similarly,
      if you have a superclass that is in the repository but a supersuperclass
      locally, conary will find that as well
    * r.Replace with parameters in the wrong order will now behave correctly
    * The automatic :config component for configuration files has been
      disabled because Conary does not handle files moving between
      troves, and config files were being re-initialized when packages
      were updated.
  o Code structure:
    * queryrep, query, showchangeset, and update --info all use the same
      code to determine how to display their data.  Display.py was changed
      to perform general display operations.
    * query.py added
    * added JobSource concept for searching and manipulating lists of jobs.
    * moved datastore.py into repository module
    * Stubs have been added for adding python and perl dependencies, and
      the stubs have been set to be initially ignored.
    * The internal structure for conary configuration objects has changed
    * A new DYNAMIC size has been added to the StreamSet object.  This will
      cause StreamSet to use either a short or long int to store the size
      of the frozen data that is included in a frozen StreamSet, depending
      on the size of the data being stored.

Changes in 0.71.2
  o Client Changes:
    * The update-conary option has been renamed updateconary per
      bugzilla #428
    * buildPath can be set in contexts
    * cvc co <foo> will work even if there are two foos on the same label with
      different branches.  In that case, it will warn about the older foo
      which it doesn't check out
    * Test mode didn't work for updates and erases which were split into
      multiple jobs
  o Build Changes:
    * Combined the EtcConfig and Config policies, and deprecated
      the EtcConfig policy.
    * All config files default to being put into a :config component.
      This is overridden by any ComponentSpec specifications in the recipe.
    * A use flag has been added for xen defaulting to 'sense prefernot'.  This
      flag should be used to specify flavors for xen domU builds where special
      provisions are made for paravirtualized domU.
    * Added new CheckDesktopFiles policy to catch some more common errors
      in .desktop files.  (For now, it looks for common cases of missing
      icons; more may be added over time.)
    * The Requires policy now interprets synthetic RPATH elements (passed in
      with the rpath= keyword argument) as shell-style globs that are
      interpreted relative first to the destdir and then to the system.

Changes in 0.71.1:
  o Server Changes
    * Added iterTroves() call which iterates over large numbers of troves
      much more efficiently than a single getTrove() call would.
    * Split out FileRetriever object to allow file information to be pulled
      from the repository inside of an iterTroves() loop
    * The web interface shows the troves contained in a group trove instead
      of trying to list all files in a group.
  o Client Changes
    * Config file options that take a path as a value now support ~ for
      home directory substitution
    * Trove.diff() returns a standard job list instead of the previous
      only-used-here format
    * /var/log/conary tracks all update, remove, rollback, and erase events
    * Progress output is simplified when stdout is not a tty (no line
      overwrites)
    * Tracebacks during logged commands get copied to the log
    * Code which checked to see if a shadow has been locally modified didn't
      work for shadows more than a single level deep
    * When you are installing from changesets using --from-files, other troves
      in the changesets can be used for dependency resolution
  o Build Changes (cvc)
    * Additional calls are emulated by the filename_wrapper for the
      r.Run calls.
  o Code Structure
    * Split build/recipe.py into several smaller files
    * Moved OpenPGP keyTable access up call stack so that it can now be
      accessed outside of kid templates.
    * Move epdb code into its own package

Changes in 0.71.0:
  o Code Structure
    * conary now imports all python modules from a toplevel "conary"
      module.  This prevents conary from polluting the module namespace.
  o Client Changes
    * Clone didn't handle shadow version numbers correctly (and could create
      inconsistent version numbers)

Changes in 0.70.5:
  o Client Changes
    * Files changing to config files across distributed repositories now works.
    * The update code uses more consistent use of trove sources, and only
      makes explicit calls to the repository if asked.  This should make it
      possible to create interesting update filters.
    * Clone updated sequences it was iterating over, which is generally
      a bad idea (and caused clone to commit inconsistent troves)
  o Build Changes (cvc)
    * Locally cooked filesets now include file contents, making the
      filesets installable.
    * Fileset cooks now retrieve all of the file objects in a single
      network request per repository.
    * The new NormalizeLibrarySymlinks policy runs the ldconfig program
      in all system library directories.  This ensures that all the
      same symlinks that ldconfig would create when the shlib tag handler
      runs are packaged.  It also warns if ldconfig finds missing files.
    * New argument to r.Run(): "wrapdir" keyword argument behaves much
      like "filewrap" but takes a string argument, which limits the scope of
      %(destdir)s relocation only to the directories under the specified
      wrapdir, which is interpreted relative to %(destdir)s.  Works best
      for applications that install under one single directory, such
      as /opt/<app>
    * Clone, branch, and shadow all take --info now instead of --test
    * ELF files that dlopen() libraries can now be provided with
      synthetic soname dependencies with
      r.Requires('soname: libfoo.so', '/path/to/file')
    * r.Requires now enforces that packages that require a file and
      include that required file must also explicitly provide it. (bz #148)
  o Server Changes
    * Packages added to the repository are checked to ensure the version and
      flavor of all referenced components are the same as for the package

Changes in 0.70.4:
  o Client Changes
    * The trove that satisfies a dependency that is broken by erase is
      now displayed in the "Troves being removed create unresolved
      dependencies" message.
    * Components are now displayed on the same line as their parent
      package in "conary update" output.
    * A new 'interactive' option has been added to conary configuration.
      When set to true, conary will display info about clone, branch,
      update, and erase operations, and then ask before proceding.
  o Build Changes (cvc)
    * The CompilePython action has been fixed to accept macros at the
      beginning of its arguments, fixing a bug new in Conary 0.70.3.
    * The Requires policy can now be given synthetic RPATH elements;
      this is useful when programs are only intended to be run under
      scripts that set LD_LIBRARY_PATH and so do not intrinsically have
      the information they need to find their libraries.
    * Added --test to clone, branch, and shadow commands
    * Clone now supports --skip-build-info for less rigid version checks
      on cloned troves
    * Fixed usage message to better reflect reality
    * Cloning to a branch which already has a version with a compatible
      flavor now works.
    * cpio archive files are now supported for r.addArchive()
  o Repository Changes
    * The repository now serves up stored OpenPGP keys as a "Limited
      Keyserver"; users can retrieve keys, but not search or browse them.
      The keys are available via /getOpenPGPKey?search=KEY_ID. This
      is meant only to allow conary to automatically retrieve OpenPGP
      keys used to sign packages.

Changes in 0.70.3:
  o Client Changes (conary)
    * Conary now works harder to avoid having separate erase/installs,
      instead preferring to link those up into one update when possible.
    * Conary configuration now supports contexts.  Contexts are defined in
      sections starting with a [<name>] line, and provide contextual
      configurations for certain variables, defined in the man page.  All
      configuration options after the [<name>] will be associated with that
      context, and will override the default configuration when that context
      is active.  The current context can be selected by using the --context
      parameter, or by setting the CONARY_CONTEXT environment variable.
    * 'conary config --show-contexts' will display the available contexts
  o Build Changes (cvc)
    * A local cook of a trove foo will ensure that the changeset created is
      installable on your local system, by making sure the version number
      created is unique.
    * The builddir is no longer allowed to appear in ELF RPATHs.
    * The build documentation strings have been significantly updated
      to document the fact that for most strings, a relative path
      is relative to the builddir, but an absolute path is relative
      to the destdir.
    * The ManualConfigure action now sets the standard Configure
      environment.
    * cvc will allow you to cook a trove locally even when you are unable
      to access the trove's source repository
  * Common Changes:
    * Version closeness was improperly measured for troves on different
      branches when then label structure was identical
  o Repository Changes
    * Repository now has a config flag called requireSigs. Setting it to
      True will force all troves to have valid package signatures.  Troves
      lacking this will be rejected.  Enabling this option prevents the
      generation of branches, shadows, or clones since these troves are not
      signed.  It is not recommended that this option be enabled until the
      infrastructure is in place to provide package signatures for all types
      of troves.

Changes in 0.70.2:
  o Client Changes (conary)
    * GnuPG compatible trust metrics for OpenPGP Keys now exists. This
      makes it possible for conary clients to refuse troves that
      aren't properly trusted. The metrics currently in place mimic
      gpg behavior.
    * Running "conary update" in a directory that does not exist no
      longer fails with an error (bugzilla #212).  Note that "cvc
      update" still requires that the current working directory exists
      of course.
    * HTTP error conditions are handled more gracefully when commiting
      a change set. (bugzilla #334)
    * conary more reliably sets a non-zero exit status when an error
      occurs. (bugzilla #312)
    * When performing an update of a group that adds a trove foo,
      search the system for a older version of foo to replace if the
      original update command found a replacement by searching the
      system.
    * New option, "conary update-conary" has been added in an attempt
      to provide a workaround for future drastic protocol revisions
      such as what happened for 0.70
    * Methods for parsing command line update request and changeset requests
      have been added to conaryclient.cmdline
    * A metric for the distance between arbitrary versions on different
      branches has been added, and the code which matches troves changes
      between collections uses this code to give well-defined matches
      for all cases.
    * Rollbacks are now listed with the most recent on top
    * Troves which a group operation tries to remove will be left behind
      if they satisfy dependencies for other troves
    * updateall command respects pins on top-level troves
    * Dependency resolution no longer blows away pinned troves
    * conary update now takes a changeSpec, allowing you to specify both
      the version to remove and the update version, like
      'conary update foo=2.0--3.0'

  o Build Changes (cvc)
    * cvc more reliably sets a non-zero exit status when an error
      occurs. (bugzilla #312)
    * Building groups w/ autoResolve displays the revision of the
      troves which are being included
    * The change to automatically split up hardlink groups into
      per-directory hardlink groups has been reverted.  Instead,
      Conary enforces that link groups do not cross directories, but
      provides an exception mechanism for the rare cases where it is
      appropriate to do so.  The old LinkCount policy was renamed
      LinkType, and the new policy enforcing link group directory
      counting is now called LinkCount.
    * The NormalizeCompression policy no longer causes an error if you
      have two files in the filesystem that differ only by the .gz or
      .bz2 extension.
    * The Provides policy will not longer automatically provide soname
      dependencies for executable files that provide sonames.  A few
      executables do provide sonames, and 0.70.1 provided them as
      harmless extraneous provisions.

   o Repository Changes
     * A new getConaryUrl() method has been implemented to support the
       "conary update-conary" feature
     * Exception handling has been re-worked.  All exception classes
       that are marshaled back to the client are now in the
       repository.errors module.  Some of the most commonly used
       exception classes have been included in their previous modules
       for compatibility until code can be modified to use the new
       repository.errors module.

Changes in 0.70.1:
  * Collection merging didn't handle (admittedly obscure) cases where
    a component on the local system was updated to a new version of a
    trove, and updating that package also tries to update to that version
    but using a different path
  * Redirects are allowed in group cooking as long as the target of the
    redirect is also specified in the group (this allows cleaner handling
    when trying to clean up after label multiplicity)
  * Shorten display for versions and flavors in internal debugging output.
    Make str() output for versions and flavors return formatted strings.
  * ELF files finding non-system libraries via an RPATH did not always
    have the path to the library encoded in their dependency requirement,
    depending on whether the package also included some other (unrelated)
    non-system library.  Futhermore, system paths encoded in an RPATH were
    incorrectly honored.  Both of these bugs have been fixed.
  * Ownership policy now uses macros in the user and group definitions.
  * Symbolic links to shared libraries can now provide path-encoded
    soname dependencies (only manually, never automatically).
  * Removed outdated code with convoluted code for preventing providing
    soname dependencies in some cases; that code has been functionally
    replaced by limiting automatic soname dependencies to system library
    directories.
  * Instead of complaining about hardlinks spanning directories, Conary
    simply creates one link group per directory per hardlinked file.
  * Fixed bug which made source commits fail on cloned source troves

Changes in 0.70.0:
  o The client and server protocol versions have been changed and
    the filecontainer version number updated.
    * Upgrading from previous versions of Conary to 0.70.0 will
      require downloading a old-format changeset file from
      ftp://download.rpath.com/pub/conary/
    * Adding path hash data to TroveInfo overflowed the amount of
      storage space available in a StreamSet when a trove contained
      several thousand files.  In order to accommodate larger data
      stored in StreamSets, we have changed the way data sizes are
      handled.
    * With the changes to StreamSet, LargeStreamSet is obsolete.
      Changeset files used to used LargeStreamSet to represent data.
      Since we now just use a StreamSet, the changeset file format
      changed.
    * Since this version of Conary is incompatible with previous
      versions, we took this opportunity to do database and repository
      migrations that will allow us to make significant code cleanups
      in the near future.

 o Other smaller changes
    * Conary now does the right thing if the same trove is listed
      twice in an update due to recursion (it checks for duplicate
      installs of the same trove).
    * A bug where None would show up in CONARY files when an
      autosource file changed contents but did not change names has
      been fixed.

Changes in 0.62.16:
  * The "conary update" and "conary erase" commands now display the actions
    they take as they run (similar to --info output).
  * The --info output for "conary erase" and "conary update" has been
    reworked to be more user-friendly.
  * Added new conaryrc option signatureKeyMap to choose which signature
    to use when signing based on the label.
  * Fixed a bug where conary would only sign the last trove listed,
    instead of signing all troves listed.
  * The ComponentRequires policy now makes :devellib components require
    :data components if they exist.
  * Don't check for bucket conflicts when resolving during group cooks - if we
    want to check for bucket conflicts in groups, it will be readded in a more
    general way.
  * Removed extra freezes and thaws of files for a 8% improvement in install
    time for absolute change sets (at the cost of some memory, but thanks
    to splitting transactions this should be a good trade off).
  * Added removeIfExist call to miscmodule for some peformance improvement.
  * ELF files that find non-system libraries via an RPATH now have the path
    to the library encoded in their dependency requirement, matching the
    path encoded in the dependency provision.  Before this, the RPATH
    was ignored and the path encoding was only guessed within one source
    package.
  * The LinkCount policy now enforces the requirement that hardlink groups
    contain only files in the same directory as each other; no hardlinks
    between files in different directories are allowed.
  * When updating a group across branches, if a subtrove within the update has
    already been manually moved to the new branch by the user, conary will
    recognize this and sync that trove with the group
  * A new "closed" configuration variable has been added to the
    apache-based networked repository server.  When set, the server
    will always raise a "RepositoryClosed" exception when a client
    attempts to access it.  The configuration variable is a string.
    The string will also be returned to the client.
  * Removed install buckets and replaced with comparisons of hashed path
    values to determine trove compatibility.
  * If a trove is included in an update twice, once directly, and once
    implicitly through recursion, ignore the recursive update.
  * More constraints added to the repository schema
  * Added hasTrove to Items table for faster trove names check

Changes in 0.62.15:
  * The MakeDevices() policy now accepts mode= as a named argument.
  * Added (undocumented) --debug (prints debugging output),
    switched old (undocumented) --debug to now be --debugger (starts debugger
    on initialization)
  * Added debug messages to conaryclient/update.py
  * Cloning to the the same branch works (providing a good way of
    reverting changes)
  * Cloning now updates buildRequirements and loadedTroves in troveInfo
    and enforces their consistency on the target branch
  * Cloning groups is now supported
  * Fix update case where a group update should cause conary to search the
    system for an older version of a trove to replace.
  * If you update a trove foo locally to a new version on the same branch, and
    then update the containing group to a new version on a different branch,
    conary will now update foo to the new branch as well.
  * fix error message when you try to pin as non-root

Changes in 0.62.14:
  * The threading changes in .13 caused some error information to be lost.
    Tracebacks have now been fixed, and the download thread checks much more
    often to see if it needs to exit.
  * Catch InstallBucketConflicts exception

Changes in 0.62.13:
  o Repository Server changes
    * The Schema creation SQL statements have been rewritten in a more
      standardized form. Some indexes have been redefined and a number
      of views have made their way into the default repository schema.
    * The new call troveNamesOnServer can be used now by the netclient
      code for a much faster retrieval of all trove names available on
      all labels on a given server. Server and client protocol numbers
      have changed.
    * The getTroveList() server side function got a rework that should
      result in about a 50% execution time speedup on most queries.
    * The Metadata SQL query has been reworked to join tables in a
      much better order, speeding up the getMetadata call on a
      repository with many versions much faster.

  o Client changes
    * Conary now compresses XML-RPC requests before sending them to
      the repository server.  In order to use compression, the remote
      server must be running Conary 0.62.13 or later.  If the server
      is running an older version, the client will fall back to
      sending uncompressed requests.
    * The database conversion in 0.62.12 did not correct all
      out-of-order file streams.  A new conversion function is in
      0.62.13 that will examine every file stream and ensure that it
      is stored correctly in the database.
    * Versions from the contrib.rpath.com repository are automatically
      rewritten to point to contrib.rpath.org.  NOTE: if you have a
      label from the contrib.rpath.com repository in your
      InstallLabelPath (such as contrib.rpath.com@rpl:devel), you will
      need to modify it to point to contrib.rpath.org.
    * Install bucket handling now works for collections which were not
      fully installed.
    * A bug where database was left locked on exception during install
      when the download thread was still executing has been fixed.
    * The conaryclient code has been split into pieces.
    * Switched rollbacks to local@local:ROLLBACK
    * The main thread no longer blocks forever when the download
      thread fails.
    * Matching referenced troves in collections is no longer dependent
      on sort order of internal dictionaries.

  o Common Repository and Client changes
    * When a changeset is applied to the local system or committed to
      a networked repository, the fileIds are recomputed from the file
      objects and verified.  This prevents corrupted or miscomputed
      changesets from being committed to the repository or applied to
      the local system.

  o Building/Branching changes
    * Many changes have been made to cloning, including sideways
      cloning (creating a clone at the same branch depth as the clone
      source), better cloning with multiple flavors, separate cloning
      of source and binaries, resilience against duplicate troves,
      proper use of existing fileIds during clones, simultaneous
      cloning of multiple troves, and better clonedFrom tracking.
    * The default optflags for x86 changed to remove -mcpu, as it is
      deprecated in gcc.

Changes in 0.62.12:
  * Conary will no longer create a "rootroot" group while installing
    users whose primary group is "root".  It will now call the
    appropriate tag handler for user/group modifications if the tag
    handler is installed.
  * EnforceConfigLogBuildRequirements no longer suggests recursive
    build requirements for packages in which the configure script
    checks to see if the package is already installed.
  * Installing new version of pinned troves leaves the pinned trove in
    place if the two troves have compatible install buckets
  * By default, when you shadow a binary trove, its source is shadowed with it.
  * Instead of a --sources option, cvc shadow and cvc branch now take
    --source-only and --binary-only options that allow you to control whether
    sources or binaries are shadowed.
  * Branch and shadow commands now take an unlimited number of troves
    to branch/shadow.
  * Files sharing versions but with different contents (thanks to flavors)
    got lost when switching from one flavor of a trove to another
  * troves can now be specified for rq, q, and update as <labelpart>/<version>,
    e.g., foo=:rpl1/1.0, or foo=contrib.rpath.com@/2.3-1-2
  * version.hasParent() handles more cases of shadows of shadows correctly.
  * cooking troves into the repository with --flavor <newflavor> now modifies
    the flavor before the recipe is even loaded, not when the recipe's setup
    function is called.
  * add a check to ensure RPATHs in cooked packages do not have %(destdir)s
    or /tmp or /var/tmp in them.
  * EnforceSonameBuildRequirements has been temporarily changed to produce
    warnings instead of errors.
  * Dependncies and flavors didn't order things properly in their frozen forms
  * StreamCollections are now properly ordered

Changes in 0.62.11:
  * InstallBucket policy now allows using macros in component names.
  * The --resume option now works correctly when conary has
    automatically discovered a non-standard path for the main build
    directory.
  * A soname dependency is again generated for libraries outside of
    library directories, but the pathname is now included in the
    dependency.  Within a package, all matching dependencies are
    modified to include the path.  This is useful for cases where
    an application packages private versions of libraries -- the
    dependencies still need to be there so that inter-component
    requirements are honored, but they must not perturb the rest
    of the system.
  * Recursive pinning now behaves itself
  * Switch group recipe syntax to use r.add() instead of r.addTrove,
    r.remove() instead of r.removeTrove(), and add a
    r.setDefaultGroup() command to set the default group.

Changes in 0.62.10:
  * EnforceSonameBuildRequirements enhanced to handle correctly cases
    where more than one trove can resolve a single soname dependency.
  * EnforceConfigLogBuildRequirements now can take exceptions, which
    can be specified either as a filename (such as /usr/bin/bison or
    %(bindir)s/bison) or as a required trove (such as bison:runtime).
  * The trove.Trove initializer no longer allows for a trove to be created
    with a name that has more than one ":" character in it.
  * EnforceSonameBuildRequirements now can take exceptions, which are
    specified as a required trove (such as libfoo:devel) to avoid adding
    to the list of requirements.
  * EnforceSonameBuildRequirements now produces errors for missing build
    requirements, and EnforceConfigLogBuildRequirements now demonstrates
    very few false positives, and so has been updated to warning instead
    of info.
  * Added a check to warn when a trove is installed multiple times from
    the same branch with incompatible install buckets (--no-conflict-check
    overrides this check)
  * Redirects can now redirect to nothing, which allows components to
    disappear gracefully on a redirection
  * A soname dependency is now provided only if the library is in a
    default library directory, or in a directory explicitly added with a
    SharedLibrary(subtrees='/path/to/dir/') call.

Changes in 0.62.9:
  * EnforceConfigLogBuildRequirements policy added.  It looks through
    all config.log files anywhere under the build directory for programs
    that configure has found, and ensures that the transitive closure
    of the build requirements contains each file listed.  (That is, if
    the file /usr/bin/perl has been found, and intltool:runtime is in
    the buildRequires list, and intltool:runtime requires perl, then the
    requirement is satisfied.)  This policy currently produces some false
    positives; the "greylist" that tries to remove false positives needs
    to be expanded.
  * The repository server now uses a repository instance specific key
    cache.  This fixes KeyNotFound errors seen when running multiple
    repositories on one server.

Changes in 0.62.8:
  * The bug, introduced in 0.62.7, that caused Conary to stop short of
    recursing to the innermost troves when handling erasures has been fixed.
  * EnforceSonameBuildRequirements enhanced to use the system database to
    find the right missing build requirements.
  * Make users and groups in a repository such that they may not differ only
    in case, i.e. if user foo exists, user Foo cannot be created.
  * files in /usr/%(lib)s/python/.* are no longer automatically given an
    architecture flavor - if there are architecture-specific files in those
    dirs, they should result in an arch-specific flavor through normal
    means.
  * By default, no OpenPGP signatures will be added to troves when
    doing commits unless a fingerprint is explicitly set in conaryrc.
    Previously, if a keyring existed, the first key found would be used.

Changes in 0.62.7:
  * Some unneeded parts of the sql query in _getTroveList have been removed,
    improving performance.
  * The performance of the default (and most used) case of the
    getAllTroveLeaves has been increased up by using a specialized
    query.
  * Exception handling in the repository when revoked or expired keys
    are used has been corrected.
  * Signature checking now correctly checks the timestamp of the signature
    against the expiration time (if any) of the key that signed it.  If
    the signature timestamp is later than the expiration timestamp,
    the signature is rejected.
  * Pass 'Database is locked' repository errors to the client as a
    RepositoryLocked exception notifying user that the server is busy.
  * The 'yuck' script is no longer installed.
  * ComponentRequires now makes :runtime, :lib, :devellib, and :devel
    components all require their matching :config component if the
    :config component exists.  The :config component is not automatically
    created, but when it exists, it's always going to be because it
    is required by multiple other components.

Changes in 0.62.6:
  * mergeCollections() didn't always handle referenced troves changing
    byDefault status
  * Various cleanups and simplifications have been made to the trove
    removal determination

Changes in 0.62.5:
  * Allow selection of individual troves from change set files via --from-file
  * Recursive queries on local database could get upset by a missing trove
  * Underlying dependency code returns version and flavor for troves with
    broken dependencies
  * Underlying dependency code returns information on what removed trove
    caused a broken dependency
  * Removed --no-deps-recurse option
  * Greatly simplify dependency resolution logic
  * The version portion of a Release (version-sourceCount-buildCount)
    is no longer required to begin with a digit.
  * The Release parsing code has been cleaned up to use consistent
    naming, API documentation, and parse error messages
  * An unhandled exception when signing a trove twice with the same key
    has been fixed.
  * Old (now invalid) changesets are now removed from the changeset
    cache when a digital signature is added to a trove.
  * A package is now counted as empty if it contains only files automatically
    found by the AutoDoc policy.
  * CPackageRecipe now requires elfutils:runtime for eu-strip; this is
    needed for the existing debugedit:runtime requirement to do useful
    work.
  * Removed DistroPackageRecipe and moved its buildRequires list to
    PackageRecipe.  Use clearBuildReqs() to remove any of the base
    requirements for a package.
  * Install buckets are respected during dependency resolution
  * Updated the troveNames() call to a faster query, which should bring
    the run time of the "conary rq" back to a more reasonable limit
  * Race conditions and robustness problems have been fixed in
    the changeset cache.

Changes in 0.62.4:
  * Many places where lots of individual db calls were done to collect
    file objects have been collapsed into batched calls (5-10% speedup
    on some operations)
  * Fixed PGP key submission to not use a hidden form element.
  * Changed PGP key submission to use an xmlrpc call instead of
    modifying the database directly.
  * Added methods to change PGP key/user associations, and thereby
    disable a key.
  * Added an index to dependency resolution for a massive improvement
    on local system dependency performance on large updates.
  * Added the ability to get troves without file lists from the local
    database and use that when getting troves through the changeset
    trove source.
  * Previously, dependency resolution could cause duplicate
    trovesource entries.  This no longer occurs.
  * :lib and :devellib automatically have lib=%(lib)s install buckets.
  * A user management bug in the repository has been fixed.
    Previously, if you deleted a group followed by the user with the
    same name of the group, an unhandled exception occurred.
  * Looking up changeset cache entries in the cache database no longer
    uses exception handling to determine when database entries are
    invalid or stale.
  * The EnforceSonameBuildRequirements policy now recognizes :devellib
    as well as :devel components in buildRequires.

Changes in 0.62.3:
  * Don't link troves to groups when the branch has changed
  * Link new troves to collections (and new collections to old troves) when
    a trove isn't installed but a suitable replacement (meaning on the same
    branch) is available
  * Installing changesets w/ not by default from files broke
  * Fix a bug in the kid template that prevented permissions (ACLs) from being
    deleted from a repository.

Changes in 0.62.2:
  * Further reworkings of update code to be fully based on job sets. The
    absolute flag now defines whether a trove is newly installed or if
    it should be an update from an existing trove (when possible). Network
    changesets and changesets from files are treated almost identically now.
  * Swapped lock terminology for pin
  * Changed table names in database schema to better match the repository
    schema

Changes in 0.62.1:
  * UtilizeGroup fixed
  * conary updateall fixed
  * Disable SHA-1 integrity checks when trove changesets don't include
    files in various places
  * conary now prevents you from cooking empty groups

Changes in 0.62.0:
  * Initial OpenPGP (RFC 2440) based signature support has been
    added. Conary reads public keys from ~/.gnupg/pubring.gpg and
    /etc/conary/pubring.pgp.  Conary reads private keys from
    ~/.gnupg/secring.pgp.  Setting the "signatureKey" configuration
    variable to a key ID will select which key to use from the
    keyring. If signatureKey is not set, and there is a valid private
    keyring, the first key on the keyring will automatically be used
    to sign changesets when committing them to the repository.
    "cvc sign" adds a signature to a trove that already exists in the
    repository.
  * Change set generation on the command line is more flexible. It can generate
    erasure changesets as well as relative to nothing changesets
  * When creating multiple groups from the same recipe using newGroup(),
    Conary now searches all subgroups when resolving dependencies within
    a parent group
  * Conary no longer resolves dependencies for troves with byDefault=False
    (such as :test and :debuginfo).  Conary will now resolve dependencies in
    those troves only if you set checkOnlyByDefaultDeps=False.  When creating
    subgroups using newGroup(), pass the checkOnlyByDefaultDeps flag as an
    argument to the newGroup() function.
  * excludeTroves now applies to troves which have been added to
    already installed collections

Changes in 0.61.12:
  * You can now search for troves by <trove>=<host>@
  * A bug when cooking groups with depCheck = True (introduced in 0.61.10)
    has been fixed.
  * A new r.ByDefault policy controls how components are included in their
    enclosing packages; the default is True except for :test and :debuginfo
    components that default to False.
  * Cloning across repositories works
  * A bug in 'conary update --info' output was fixed

Changes in 0.61.11:
  * A bug that caused a database deadlock when removing entries from the
    changeset cache in the repository server has been fixed.
  * Added RegularExpressionList in conarycfg
  * Added lockTroves configuration option for autolock
  * Recurisvely included troves could be removed incorrectly when those
    troves were already present

Changes in 0.61.10:
  * The conary update command now takes a --sync parameter, documented in
    'man conary'
  * Groups now allow you to create a reference to another cooked trove,
    and use that reference to add troves that are contained in that trove.
    For example, if you want to create a group-python based on the troves in
    an already cooked group-dist, you add a reference to the group-dist in
    group-python, and pass the group-dist reference in when you call
    addTroves.
  * Work has begun towards generalizing the concept of a trove source.
    A class SimpleTroveSource has been added that, when subclassed and given
    access to the troves, will allow you to call findTroves to search that
    source.  The same code is used in update code to unify updating from
    the repository and from changesets, and it is used to provide the search
    capabilities for the local database.
  * Conary now allows all files, not just regular files, to have
    dependencies.  This is necessary for user/group dependencies for
    non-regular files to work.  Packages built with 0.61.10 or later
    that have non-regular files with non-root user or group will not
    be readable by Conary versions 0.61.9 or earlier.
  * Shadowing now preserves the byDefault flag, and handles reshadowing
    collections gracefully now
  * Update preprocessing now works on absolute changesets instead of
    relative ones, providing massive cleanups. Code uses sets of jobs
    instead of changesets for job representation, allowing still more
    cleanups. Many bugs seem to have gone away.

Changes in 0.61.9:
  * Fix a bug added in 0.61.8 that breaks tag handlers

Changes in 0.61.8:
  * Fix a bug introduced in 0.61.7 that occurred when, in the repository,
    either the Users table or Groups table was empty when creating a new group.
  * Add --buildreqs, --flavors options to q and rq.
  * Primary troves should not have their trove change sets overridden by
    items recursively included (and fixed a pile of things this broke).
  * Locally stored change sets can't always get access to pristine files
    from the local filesystem; when it can't, make sure file sha1 checking
    doesn't get upset.
  * Unchanged troves in updated groups could be erased by items in the
    same group on a different branch.
  * The "conary q[uery]" command accepts a --diff option.  When --diff
    is used, the difference between installed and pristine troves is
    displayed.
  * An additional progress callback has been added to show when database
    transactions are committed

Changes in 0.61.7:
  * Several bugs related to updating two troves with the same name have been
    fixed - including branch affinity, flavor affinity, correct handling of
    already updated troves, and correct handling of empty flavors.
  * "conary emerge" as root (or as a user than can apply the changeset
    produced by the build) did not install anything but the toplevel
    package.  This bug has been fixed.
  * No longer hide descriptive TroveNotFound errors behind a generic
    NoNewTroves wrapper.
  * Group recipes can now request that dependencies be resolved and
    added to the group at cook time.  To automatically add required
    troves to a group add "autoResolve = True" to the recipe class.
    Optionally "autoResolveLabelPath" can be set to a list of labels
    to use during dependency resolution.
  * Locally stored rollbacks couldn't handle files changing types. As
    part of the fix, the generic file diff code is now used when creating
    changesets instead of having a special-case wrapper around it
    (fileChangeSet()).
  * The commitaction script and the changemail module did not necessarily
    show the full trailing version for branches and shadows.  (For example,
    /conary.rpath.com@rpl:devel/4.1.25-18/db41/19 showed up as "19"
    instead of "4.1.25-19".)
  * Add a --deps option for conary q.  Make that and conary rq --deps
    recurse over collections.
  * Warn about missing buildRequires entries both for soname dependencies
    and for TagSpecs applied via tag description files.
  * A bug in updating groups that switch the byDefault setting of troves
    has been fixed.
  * Add an updateThreshold config option to control the number of troves to
    include in a download.
  * Ordering didn't work for old packages depending on anything, or for
    dependencies whose provider moved between components.
  * The r.Ownership(), r.UtilizeUser(), and r.UtilizeGroup() now generate
    appropriate dependencies on info-* packages.
  * Updating packages and components installed multiple times could cause
    a component to be removed multiple times (which resulted in a traceback).
  * Fixed a bug that occurred when groups tied to a user were deleted
    without deleting the associated user, then subsequently adding a user
    with the same name.

Changes in 0.61.6:
  * InitialContents turns off EtcConfig, since a file cannot be both
    a config file and an InitialContents file.
  * Reworked repository change sets to directly reference files from the
    contents store.
  * The User() command now takes an optional supplemental= option,
    which provides a list of supplemental groups to which to add
    the user.  (SupplementalGroup() is for groups not associated
    with a user.)
  * The showcs command can now handle components that are referenced
    but not included in a changeset.
  * InfoUserRecipe and InfoGroupRecipe can now be built with buildlogging
    turned on.
  * Conary's internal handling for dyanamically finding new IDs for
    users and groups has been fixed.
  * "conary updateall" now accepts the --test flag.
  * Various fixes were made to the CIL dependency detection code.

Changes in 0.61.5:
  * Added basic clone capability (which only works cloning to parents
    branches and shadows, and on a single host).
  * Now handles degenerate case of packaging unreadable files.
  * A bug that caused conary to ask for the wrong fileId when constructing
    a changeset from multiple repositores has been fixed.
  * Conary now can add users and groups automatically at install time.  If
    there is no taghandler to add a user or a group, conary will add it
    internally as a bootstrapping measure; if there is a taghandler,
    conary will call that instead.  In order to ease transition, Conary
    does not yet create the dependencies on the info- packages; a future
    version of Conary will add those dependencies after the system user
    info- packages have been created.
  * rpm2cpio now handles rpm archives that use bzip2 to compress the
    cpio payload
  * Conary now creates dependencies (provides and requires) for CIL
    files, if mono's monodis is installed on the system or being built
    in the current package.
  * Troves moving between troves could cause conary to attempt double
    erasures
  * The networked repository handles cases where contents are not
    found in the contents store.  The exception is passed back to
    the client.
  * The networked repository handles cases where a file stream is not
    found when the client asks for file contents.  The exception is
    passwd back to the client.
  * An error that caused getPackageBranchPathIds() to return the
    oldest fileIds instead of the youngest fileIds has been corrected.
  * Reworked finding old versions of troves to avoid a single trove
    being removed multiple times

Changes in 0.61.4:
  * %(datadir)s/.../lib/ files will no longer show up in :lib - presumption
    being that anything under %(datadir)s really is arch independenct
  * Creating branches and shadows had a command line parsing bug
  * "cvc newpkg" takes --dir and now complains for unexpected arguments
    (which is used to just ignore)
  * when using flavor affinity for installed troves, merge subarchitecture
    flags
  * group handling didn't always preserve troves which were needed by a
    newly installed trove properly

Changes in 0.61.3:
  * Corrected a bug that snuck in 0.61.2 that caused a temporary SQL table
    to not be temporary, which makes multiple httpd processes fail with
    'database schema changed' errors.

Changes in 0.61.2:
  * Fix a bunch of typos in the authentication checking server side
  * Add permission editing capabilities to the server component and hooks
    in the netclient
  * Overhaul of ACL system so that uniqueness constraints on Troves and
    Labels can be enforced: we now use a special Trove and Label "0 | ALL"
    instead of Null
  * Dependency resolution enforces label ACLs.
  * Module arguments to commitaction are parsed according to shell
    quoting rules.
  * The changemail commitaction module now takes an optional '--from'
    argument.
  * added clearBuildReqs() - will clear all or some of superclass buildreqs
    when cooking.
  * The pickled version of Dependency objects changed, therefore the
    schema version of the changeset cache has been incremented.
  * When Configure() detects a failure and input or output is not a
    tty, all config.log files will be included in the output in order
    to ease debugging from captured log files.
  * Part of the infrastructure for adding users and groups has been added:
    it is possible to create info-<name>:{user,group} packages via
    UserInfoRecipe and GroupInfoRecipe classes.  The User(), Group(),
    and SupplementalGroup() policies are deprecated; those lines should
    move to their own recipes intact (the syntax remains the same).
    The install-time code does not yet install info-* packages first in
    their own transaction; when it does, the Ownership(), UtilizeUser(),
    and UtilizeGroup() policies will create dependencies on the
    appropriate info-* packages.
  * The networked repository server and client code has been changed
    to use the 'deflate' Content-encoding type instead of 'zlib',
    which makes the code RFC 2616 (HTTP 1.1) compliant.
  * A new function called hasUnresolvedSymbols() has been added to the
    elf module.  This could be useful for a contributor to implement a
    policy that checks to make sure that shared libraries do not have
    unresolved symbols.  Additional code could be written to check
    binaries too.
  * cvc checkout, update, and commit now show progress when communicating
    with the repository server
  * Progress is now displayed while downloading file contents from a
    repository (such as when assembling a changeset that is distributed
    across multiple repositories)

Changes in 0.61.1:
  * Cleaned up error message which results from Conary not being able to
    determine which trove to remove when a new one is installed
  * Dependency object use slots
  * Hash values for DependencySet, Version, and Branch objects are cached
  * UIDs and GIDs that cannot be mapped to symbolic names no
    longer cause the buildpackage code to traceback.  The ownerships
    from the filesystem were never used anyway, so it's safe to assume
    that all files are owned by root:root
  * Implemented proper updateall
  * Files in troves are downloadable from the repository browser.
  * Troves in the repository browser are separated by first letter
    instead of showing all troves in one page.

Changes in 0.61.0:
  * New functionality for maintaining user groups: renaming and updating
    members
  * Added repository interfaces for deleting users and groups
  * Added a repository iterator function to list the members of a group
  * The web interface to the Conary repository now has a repository
    contents browser, accessible either from the main page (if you are
    logged into the web interface), or from the /browse url. Example:
        http://conary.example.com/conary/browse
  * A bug preventing all access to the web interface if an anonymous
    user existed has been fixed.
  * "Large" updates are split into multiple pieces which are downloaded
     and installed independently of one another
  * Trove updates are tracked through collections
  * Group handling completely rewritten to function as a three way merge
    instead of a set of heuristics
  * Trove removal handles references troves which are referenced by multiple
    collections
  * Rollback format unified for local and nonlocal rollbacks
  * Dependency ordering forces collections to be installed after all of their
    referenced troves (allowing simple restarts)
  * Database migration removes stale versions
  * --replace-files marks the replaced versions of the files as no longer
    present
  * Troves store information about Install Buckets - not used yet.
    By specifying a component's install bin, which is a set of key-value
    pairs, you can describe whether two versions of a component are
    installable side-by-side.  If two versions of the component share the
    same keys for their install bins, but at least one different value, then
    the components are installable side-by-side.
  * Troves store information about troves loaded when building a recipe
  * Build Requirements are stored with the trove
  * Add isCollection() to TroveInfo
  * Changesets download while instals are going on
  * StreamSet.twm() respects ignoreUnknown now
  * Rollbacks of locally cooked and emerged troves works

Changes in 0.60.12:
  * Previously, if you ran "conary update foo", and foo requires a new
    version of bar, but updating to the new version of bar would break
    existing dependencies of other troves on the system, a very
    unuseful "Troves being removed create unresolved dependencies"
    message would be printed.  Conary now says that "Additional troves
    are needed" instead.  If --resolve is used, it will report the
    troves that have been added before displaying the dependency
    failures caused by erase.
  * Symlinks no longer confuse AutoDoc policy.
  * Autosource files which have changed confused cvc update
  * allow a \ at the end of a line in config files to do line continuations
  * several bugs in the multitag handler have been fixed

Changes in 0.60.11:
  * The '-f' flag was added to the arguments to gzip when
    recompressing compressed files
  * Added progress callbacks for uploading the changeset when cooking
  * Improved automatic mainDir detection for some corner cases.
  * Put development docs back in :devel component (they were
    inadvertantly removed from it by a previous fix).

Changes in 0.60.10:
  * BadFilenames policy absolutely prohibits filenames with newlines
    in them, no exceptions allowed.  Other similarly bad filenames may
    later be forbidden by this policy.
  * UTF8Filenames moved to packagepolicy, where it belongs, and it now
    raises an error instead of printing a warning.
  * Conary now enforces the rule that tag names must have no whitespace
    and must be all alphanumeric characters, -, or _.
  * Conary can now run a single instance of a single tag handler to
    process multiple tags.  The tag description files for each tag
    must point to the same tag handler, and must each specify the
    multitag datasource.  The data is passed to the tag handler on
    standard input using the protocol "tag list for file1\nfile1\n..."
  * Fixed ftp server busy detection when fetching files via URL.

Changes in 0.60.9:
  * The changemail script is replaced by a generic commitaction script
    that loads modules, and a changemail.py module is supplied.  There is
    a backward-compatible changemail script which calls commitaction
    with the changemail.py module.  --email and --*user options now are
    changemail module options, so the commitAction should be specified
    something like this:
    commitAction /.../conary/commitaction --repmap ... --module "/.../conary/changemail --user %(user)s --email foo@example.com --email bar@example.com"
    You can add your own modules and run them all from the same commitaction
    using multiple --module arguments to the commitaction script.
  * Conary can now almost always guess the correct name for the mainDir
    when it is not %(name)s-%(version)s, if the first addArchive()
    instance creates exactly one top-level subdirectory and no other
    top-level files of any sort, in which case it will use that name as
    the mainDir.

Changes in 0.60.8:
  * The changemail script is now actually packaged, in
    /usr/lib{,64}/python2.4/site-packages/conary/changemail
  * Build requirements for superclasses are automatically added to
    subclasses.
  * Build requirements now look at all labels in a version to see if they
    satisfy a build requirement.
  * The NormalizeManPages policy now automatically converts man pages
    encoded in iso-8859-1 to man pages encoded in utf-8.  Additionally,
    it runs faster and no longer calls sed.

Changes in 0.60.7:
  * The changemail script is now distributed with conary, and is called
    with a different calling convention; instead of being called once
    per trove with trove-specific command line options, it is called
    once per commit (of however many troves) and creates more readable
    summary email messages.  Remove --trove, --version, and --flavor
    arguments from your changemail invocations.  Added --user argument
    to changemail; specify in .cnr files as "--user %(user)s".  Or, to
    only print users for source or binary commits, use "--sourceuser
    %(user)s" or "--binaryuser %(user)s", respectively.
  * The cvc rdiff command now recognizes creating a shadow as such.
  * Build requirement tracking is now half-enabled; conary is now able
    to read "buildReqs" tags, but will not yet generate them.
  * Files in /tmp and /var/tmp, and all cvs temporary files, will no
    longer be packaged by default,
  * The addArchive(), addSource(), and addPatch() actions can now fetch
    via HTTPS as well as HTTP and FTP.
  * The repository now handles creating a changeset between two troves
    that both contain a version of a file that is stored on a different
    repository

Changes in 0.60.6:
  * Erasing emerged troves works properly
  * Calling Doc() no longer disables the AutoDoc() policy.
  * A more reliable method is used for finding the port of an
    Apache connection

Changes in 0.60.5:
  * 'conary emerge' works again
  * Distributed group changesets failed when remote troves disappeared
    from the group
  * build logs are now tagged with 'buildlog' tag
  * Conary now handles cases when a directory becomes a symlink when
    applying a changeset.  An error message is displayed which tells the
    user how to apply the update.

Changes in 0.60.4:
  * An error in the automatic database conversion of 0.60.2 systems
    has been corrected.

Changes in 0.60.3:
  * Reimplemented LargeStreamSet in C
  * Added StreamCollection
  * Policies now announce their names in their information, warning,
    debug, and error messages, making it easier to determine how to
    resolve problems.
  * The database conversion for to 0.60.2 didn't work well; a proper
    conversion is now in place

Changes in 0.60.2:
  * Added InitialContent flag
  * Fixed bug which caused servers to leak file descriptors when the sqldb
    was replaced
  * "repquery --deps" output fixed (broken in 0.60.1)
  * Added AutoDoc policy which finds common documentation files and puts
    them in %(thisdocdir)s automatically.
    AutoDoc is disabled by calling
    Doc without calling AutoDoc, which means that existing recipes that
    call Doc will not show changes.
  * getPackageBranchPathIds() now returns version and fileId as well,
    so that the IdGen class can determine if an older version number
    should be assigned to files.  getPackageBranchPathIds() is now the
    primary mechanism for populating the pathId dictionary.
  * The local label methods of the version object have been
    refactored. isLocal() is now onLocalLabel(), isEmerge() is now
    onEmergeLabel(), etc. isOnLocalHost() has been added as a method
    to easily determine if a version only exists in the database
  * Moved logic for explicitly creating a changeset from cscmd.py to the
    ConaryClient object
  * Added the (unused) ability to lock and unlock troves. Ignore this for now.
  * "query --info" behaves much more like "repquery --info" now
  * isSourceVersion() method has been to the Version object
  * most of the remaining erroneous references to "Package" have been
    changed to "Trove" throughout the code.  This includes method
    names such as getPrimaryPackageList() -> getPrimaryTroveList().  Some
    more commonly used methods were left as deprecated thunking methods
  * dependency resolution couldn't resolve a requirement w/o flags against
    a provides w/ flags

Changes in 0.60.1:
  * Support for legacy clients (protocol version 29) has been removed from
    the server
  * The server raises an server-side exception if any client with
    protocol less than 32
  * Updated the URL provided in a server-side client version mismatch
    exception
  * Server-side dependency suggestions return more choices, leaving it
    to the client to sort it all out
  * Client uses timestamps to determine which troves to install when their
    flavors score equally
  * Fixed build-side bug handling meta characters ([,*,etc) in file names
  * "cvc newpkg" now accepts pkgname=label syntax
  * files.contentsChanged() function updated to work with StreamSets
  * Basic local changeset creation, retargeting, and commits work
  * Permissions weren't merged for operations run as non-root users
  * The structure of the repository web interface has been redesigned
    and some authentication UI bugs have been fixed.
  * The repository web interface now requires the conary-web-common package
    to be installed.
  * Committing troves to the repository no longer recompresses non-config
    files
  * Timestamps are set on the server at commit time; the timestamps the
    client assigned is not used (this is to protect against clients with
    a bad idea of time; servers should be consistent, even if they're
    wrong, and as long as time doesn't go backwards on that server all is
    good)
  * Reworked troves to be representable as streams and implement *basic*
    signature capability
  * Local cook versions are now more sensible.

Changes in 0.60.0:
  * Changed changesets to compress individual files instead of the combined
    stream.
  * Cleaned up file content objects to no longer track file sizes.
  * Switched away from TupleStream to StreamSet both for better performance
    and for improved flexibility in the format (at the price of larger
    frozen streams).
  * Troves explicitly provide their own names.
  * Troves can now provide "capability flags", and trove requirements
    can now include references to the capability flags.
    r.ComponentProvides(('ASDF', 'FDSA')) will cause all components built
    from the current recipe to provide the 'ASDF' and 'FDSA' capability
    flags, and r.Requires('/path/to/file', 'foo:runtime(ASDF FDSA)')
    will make /path/to/file require the foo:runtime component built
    with the ASDF and FDSA capability flags.
  * Dependency components can contain : characters now.

Changes in 0.50.14:
  * Dependency checking now returns reordering information (which isn't
    used yet)
  * Allow groups to include other groups defined in the same recipe (but
    explicitly disallow cycles in groups)
  * Fixed bug in building multiple groups with a single recipe when some
    of the groups already exist, but others don't

Changes in 0.50.13:
  * Added automatic :data component for /usr/share, to which you should
    add any platform-independent files that are needed by :lib components
    but not in a libdir-derived path.  These might include configuration
    files and supporting data files needed by both library and runtime
    programs.
  * Added automatic intra-package inter-component dependencies; now within
    a single package, the :devel component will automatically require the
    :lib component if both components exist.  These dependency sets can be
    modified with the ComponentRequires policy.
  * The build/buildpackage.py file has variable and function names changed
    to better match our terminology for packages and components.
  * Change flavor specified in the conaryrc to a flavor path -- accept the
    flavor config parameter multiple times to create a flavor path
  * Added a "filewrap" argument to r.Run() that inserts an LD_PRELOAD
    wrapper that overrides some library funtions to look in %(destdir)s
    first before looking in the filesystem.  This is subject to change
    as we experiment with it!

Changes in 0.50.12:
  * Implemented --quiet for conary update changeset commands, and cvc cook.
    Also implemented the 'quiet' configuration value. This option suppresses
    progress indicators.
  * Split loadRecipe into loadInstalled and loadSuperClass, depending on the
    purpose of the recipe loading.  loadInstalled will examine the local
    system to look for a matching installed trove, and load that version,
    while loadSuperClass will not.
  * Logs of builds are now stored in cooked changesets in the :debuginfo
    component -- generally in
    /usr/src/debug/buildlogs/<name>-<version>-log.bz2, controlled by
    macros.buildlogpath
  * Added lib/logger.py
  * Fixed conarybugz.py to work with Conary's new site-packages location
  * Cleaned up yuck, rpm2cpio, and rpm2ccs scripts to use new "import conary"
    mechanism for finding conary.
  * Check sha1s for all files written into the repository or file system
  * conary scs --deps works again

Changes in 0.50.11:
  * Reworked file addition to local database a bit for better performance
  * Fixed sorting for --info
  * Don't make --info installs require a writeable database
  * Added an exception to group updating, restricting removal of existing
    troves to match the group's contents to troves on the same branch
  * Groups which had the same trove added (via a referenced trove) and
    removed (from the primary trove) got confused
  * conary showcs now takes trove version
  * conary showcs will display erased troves in changesets, and erased troves
    that are referenced but not within the changeset
  * conary changeset now support trove=<version>-- to create a changeset that
    erases the trove
  * Cache user id to name mapping
  * Improved the progress indicators for preparingUpdate and
    creatingDatabaseTransaction
  * Implemented progress indicator on source downloads
  * Fixed bug in update process which caused files to be incorrectly skipped

Changes in 0.50.10:
  * Added callback for creating database transaction, so that it does
    not look like we spend an inordinate amount of time executing tag
    pre scripts.
  * Added findtrove.py to the Makefile so that it is included in
    the distributed version of conary.
  * Added distcheck rule to Makefile to try and avoid missing files in the
    future

Changes in 0.50.9:
  * reimplemented StreamSet in C
  * moved findTroves out to findtrove.py, reworked it to be more modular
  * getSourceVersion now correctly handles branched binaries by looking
    up the branch to find the source component.
  * reimplemented StringStream in C
  * fixed bugs in --info

Changes in 0.50.8:
  * sort update --info alphabetically, display old versions, and display
    a letter summarizing the type of change
  * NormalizeInterpreterPaths() policy now looks in the package currently
    being built, as well as on the installed system, to determine how to
    resolve #!/usr/bin/env scripts.
  * groupName argument to addTrove() can now be a list of group names as
    well as a single group name.
  * --no-recurse works on the erase path
  * fix to walkTroveSet (which was horribly broken)
  * enable (optional) dependency checking when building groups
  * 'cvc cook' error output when there are unresolved build
    requirements is more user friendly
  * filesystem conflicts are handled properly when applying a rollback
  * updating a package to a version that comes from a different
    repository when that package had an uninstalled component works
    now.
  * conary now resides in /usr/$LIB/python$PYVERSION/site-packages/conary/
  * calling r.Replace on a non-regular file results in a warning instead
    of an unhandled exception
  * implemented basic callbacks for update, erase, and changesets

Changes in 0.50.7:
  * Added the XInetdService action to avoid having to include
    /etc/xinetd.d/ files separately, and to make xinetd.d files
    be consistent, making recipe-provided changes less likely to
    conflict with local configuration changes.
  * groups are no longer allowed to contain redirects
  * added setLabelPath to group recipe
  * Allow r.Provides("soname: libfoo.so(FLAGS)", "/some/file") (added
    the "(FLAGS)" part).
  * don't allow spaces and commas in revisions

Changes in 0.50.6:
  * conaryclient.updateChangeSet should have recursed by default
  * Metadata retrieval now works along distributed branches and shadows.
  * reworked troves being added to database to handle missing parts
    of packages and groups properly (and make things faster and more
    elegant)
  * merged update and erase code paths in conaryclient
  * update and erase now take +,- modifiers on trove names
  * added --info to see what an update or erase command will do
  * a single group recipe can now build multiple groups

Changes in 0.50.5:
  * Streams return their value through __call__ instead of value()
  * Reimplemented ShortStream and IntStream in C
  * conary config now takes --show-passwords option, and does not pretty
    print config file values when not printing to screen.  This means that
    conary config > <file> will result in a valid configuration file.
  * Updating groups didn't work when the group referenced troves as new
    which were already installed on the system
  * r.ComponentSpec('somecomponent', '.*') will no longer override the
    file specifications for packaging :debuginfo and :test components.
  * loadRecipe now takes a troveSpec as its first parameter, and uses that
    troveSpec to find the trove on the local system that matches the source
    component that is being loaded.  loadRecipe also automatically searches
    the labels that are parents of the current recipe, so if you shadow a
    recipe, any loadRecipe lines contained in that recipe should still do
    what you want.
  * merge didn't handle files converging
  * merge doesn't need to deal with autosource files
  * diffs between groups failed when members disappeared

Changes in 0.50.4:
  * Most rollback information is stored as a reference to a repository
    instead of storing full rollback data on the local system. The
    localRollbacks flag in conaryrc allows the old behavior to remain.
  * The CONARY state after a merge operation on a shadow now has the
    correct fileId for files that are not different than the parent
    version.
  * Added /usr/lib/conary/conarybugz.py to make it easy to automatically
    populate bugzilla databases from repositories.
  * Sped up Strip, NormalizeInitscriptLocation, NormalizePamConfig,
    TagDescription, and TagHandler policies by limiting them to
    only appropriate directories.
  * Fixed :debuginfo to work with binaries built from more than one
    source file, and made it less aggressive by only stripping debug
    information out to the :debuginfo files, which both makes stack
    traces better without :debuginfo installed and makes libraries
    stripped for :debuginfo more likely to work.
  * When existing fileId's had no streams but the streams are provided
    by a later commit, those streams weren't always merged properly if
    there were multiple files for that fileId
  * conary config output masks user/password info in repository maps
  * the config option useDir has been changed to useDirs, and archDir has been
    changed to archDirs, to allow for tiered use/arch flag definitions, and
    the tweaking of use and arch flag settings.  By default, useDirs and
    archDirs look in /etc/conary/<dir>, followed by /etc/conary/distro/<dir>,
    follwed by ~/.conary/<dir>, where dir is use or arch, depending on the
    context.
  * Arch files can now contain arbitrary macro definitions, and in the future
    will contain values for macros like %(lib)s, which is lib64
    on some platforms.
  * when using --keep-existing, the install label path and install flavor
    are used to determine which version to install instead of using affinity
    to install something close to what you already have.
  * a bug that prevented a changeset from applying to the system when
    the changeset removed a component from a package and the component
    is not installed on the system has been fixed.

Changes in 0.50.3:
  * database findTrove now has an interface that is much closer to the
    repository findTrove function -- this enables conary q to work like
    conary rq.
  * Group handling didn't work for multiple levels of group inclusion.
  * Database.hasTrove() no longer needs to instantiate troves.
  * Fixed overly-aggressive cleaning of the cache.
  * Added repository findTroves call to parallelize findTrove calls.
  * Added the NonMultilibDirectories policy to prevent 32-bit troves from
    utilizing lib64 directories.
  * the NormalizeInterpreterPath policy can now handle unwriteable files
  * fixed the network client code to return file contents properly when
    multiple file contents are requested from the server (bz#50)
  * rewrote Database.getTroveLatestVersion()
  * Added :debuginfo handling in Strip policy, which requires debugging
    to be turned on in optflags and elfutils's eu-strip and debugedit to
    be installed.  Like :test components, :debuginfo components are not
    installed by default.
  * File versions are now properly set to a branched version after a
    merge operation
  * cvc commit aborts again when the current versions of files are not
    the latest versions

Changes in 0.50.2:
  * Any %(lib)s-derived path (/%(lib)s, %(libdir)s, %(krbprefix)s/%(lib)s,
    or %(x11prefix)s/%(lib)s) will now cause the entire package and all
    components to be flavored with the base instruction set flavor, so
    that architecture-sensitive but non-code files in (say) /usr/lib64
    do not show up on 32-bit platforms.
  * Sped up dependency resolution on the client
  * The reworked getFileContents call now asks for contents from the
    correct server when contents from more than one server are requested

Changes in 0.50.1:
  * Add support for trove=<troveVersion> in rq, cvc co, and other places that
    use findTrove
  * Add conary q --info option to display flavors
  * changeset command uses system flavor if no flavor is specified, skips
    troves which are not included in packages and groups by default,
    takes a --no-recurse option, and filters based on the excludeTroves
    configuration setting
  * Added automatic :perl component that works like the :python component,
    and extended the multilib-friendly-or-architecture-neutral policy to
    work with perl as well as python.
  * client/server protocol negotiation is a whole lot smarter now
  * getChangeSet() results in a single URL rather than one per primary trove
  * group, fileset, and redirect recipes have macros that contain the
    buildlabel and buildbranch.
  * fixed a bug with merging absolute change sets which contain config files
  * redirections to troves w/ older versions already installed didn't work
  * the pathId generation code has changed.  For cooked troves, the
    pathId will be the same for any particular version of a path.
    Code must not depend on this behavior, however; it may change in the
    future.

Changes in 0.50.0:
  * Redirections work
  * Sped up group generation
  * Troves which reference other troves (groups and packages) can now specify
    whether a trove is installed by default or not. Packages now reference
    :test, but don't install it by default
  * Added optional 'recurse' parameter to netclient.createChangeSetFile
  * The first argument to the Requires and TagSpec commands can now have
    macros interpolated, as in r.Requires('%(bindir)s/foo', ...)
  * Groups can have requirements now
  * protocol-level getFileContents works on multiple files simultaneously
  * repository log had too many files added to it
  * set instruction set flavor for a cooked trove whenever any Arch flags are
    checked

Changes in 0.14.12:
  * The shadow command looks at buildLabel instead of following
    installLabelPath
  * In some cases, troves with an incompatible flavor were chosen when
    --resolve was used. The proper flavor is now used, or the
    dependency is reported as unsatisfiable.
  * Several more instances of %(lib)s were moved out of the default
    specification for generic components like :runtime and :devel for
    better multilib support.
  * Policy now helps ensure that :python components are either
    architecture-neutral or multilib-friendly.
  * Better error messages for "%(foo)/" (which should be "%(foo)s/")
  * Looking up files in the local database gave erroneous results in
    some cases (this was noticeably primarily when distributed change
    sets were being generated)

Changes in 0.14.11:
  * Local systems store config files in sql tables now.  Use
    /usr/share/conary/convertcontents to convert to the new data store.
    Note that this means that any *config file* managed by conary can be
    read through the main SQL database file in /var/lib/conarydb/conarydb.
  * Actually check build requirements before building, use --no-deps to
    ignore the check.
  * make conary q and conary update convert all flavors to  strong flavors
    for comparison; ~readline becomes readline, and ~!readline becomes
    !readline, so that conary q foo[readline] works as expected.
  * no default flavor is presumed for local operations (erase, q)
  * changed getPackageBranchPathIds to base64 encode the filename in
    order to ensure that the resulting XML-RPC will be UTF-8 clean.
  * localoutofdate renamed to "yuck", a man page added, and the script
    and man page are now installed on the system.
  * rename --use-macro and --use-flavor options for cook to --macro
    and --flavor
  * support new cook syntax: cvc cook <trove>[flavor] to set the troves flavor
    while cooking
  * fixed rq output when iterating over subtroves within a trove or group
  * TroveNotFound exceptions are handled gracefully in cvc.  'conary cook
    foo' will no longer traceback when foo:souce could not be found in
    the repository.
  * Unsynchronized updates work for packages and groups
  * The database is now opened with a 30 second timeout.  This should allow
    better concurrency.
  * added --exclude-troves and excludeTroves conaryrc entry
  * repository .cnr file's commitAction configuration item now has a
    flavor provided to it as %(flavor)s and the default changemail
    script uses it.
  * don't allow the same label to appear twice in sequence in a version

Changes in 0.14.10:
  * FlavorMap sense wasn't set right for base instruction set

Changes in 0.14.9:
  * Shadow Branch objects didn't return parent branches properly. This
    caused incorrect pathId's to show up on cook on shallow shadows.
  * Reworked the code which looks up pathIds to take advantage of a new
    server call (getPackageBranchPathIds) which is faster and looks on
    both the full branch and full parent branches.
  * The Apache repository server now allows mixed ssl and normal requests.
  * Added forceSSL option to apache repository server configuration.
  * The network client code now supports accessing servers over https.
  * Proper salts are used for user passwords.
  * The default value for macros.optflags is "-O2" again, instead of
    an empty string.
  * The http handler in the conary server now sends back proper error
    codes in the case of an authentication error.

Changes in 0.14.8:
  * Fixed bug where streams for commits on distributed branches didn't always
    get set properly
  * reworked findTrove() in repository to return (name, version, flavor)
    tuples instead of full troves
  * Split conary.1 into conary.1 and cvc.1
  * Allow cvc cook trove=<version>
  * remove --target-branch cook option
  * added default :devellib component for architecture-specific devel bits,
    made all files with an architecture-specific multilib path that are
    not in :devellib go into :lib instead of having many of them fall into
    :runtime

Changes in 0.14.7:
  * ELF libraries with sonames that have paths in them are now handled
    sanely, by removing the path (and complaining...)
  * split march into targetArch and unameArch -- requires a new distro-release
  * rework command line arguments to shadow and branch to match how versions
    are normally specified, and allow a flavor specificatoin
  * added --sources to branch and shadow commands

Changes in 0.14.6:
  * fix for generating changesets between repositories
  * policies that look at shared libraries are now multilib-aware,
    fixing shared library permissions and dependency provision
  * autosources didn't work when committing across a shadow

Changes in 0.14.5:
  * allow groups to contain troves with conflicting flavors
  * make repository-side change set caching less buggy
  * fix config files changing to symlinks
  * allow duplicate items to be specified for erase and update
  * changeset command allows flavors to be specified
  * repquery --info shows trove flavor
  * fixed bug with not matching base instruction set flavor

Changes in 0.14.4:
  * several bugs in the 'cvc update' code paths have been fixed
    - it no longer retrieves autosource sources
    - the CONARY file now gets populated entries for autosource files
    - the fileids in CONARY files are now correct after an update
  * several bugs in error handling have been fixed
  * several docstrings have been fixed
  * packagepolicy now automatically adds usermode:runtime requirement to files
    that are dangling symlinks to consolehelper
  * the templating engine for the web interface to the server has been
    changed to kid; kid and elementtree are now required to run a server.
  * the web interface now supports limited editing of ACLs
  * the server now only supports protocol version 26 (it was a mistake
    to leave in support for 24 and 25)
  * old code that supported ancient protocol versions has been
    removed from the server
  * recipes loaded from within recipes follow the label= argument if
    it is given

Changes in 0.14.3:
  * Fixed usage message to no longer print 1 at bottom; improved option
    handling error messages
  * Fixed versions when branching from a shadow
  * The lookaside cache now fetches from the repository into the right
    location and with the right permissions, and fetches manually-added
    as well as automatically-added sources.
  * In recipes, addSource can now take dest='/path/to/file'
  * Change %(servicedir)s location from /var to /srv

Changes in 0.14.2:
  * contents are now stored as diffs when either the new file or the
    old file is empty
  * diffs of numeric streams can now express a change to the value of
    None

Changes in 0.14.1:
  * fixed a typo in lookaside.py that prevented commits from working
  * added a descriptive exception message when fileids in your database
    do not match the fileids in the repository

Changes in 0.14.0
  * added ability for changesets to ignore unknown fields in some places
    (making changesets somewhat less brittle)
  * fixed bug in source handling with non-recipe files in the local directory
  * added framework for generic trove information
  * checkout no longer pulls all sources from the repository
  * used new trove info framework to store the source trove, build time,
    total file size, and version of conary used when building binary
    troves.
  * lib/elf.c no longer uses mmap to read elf files.  Some architectures
    may have elf structures on disk that are not naturally aligned, and
    using mmap to read them won't work.
  * the repository code now uses a 30 second timeout when attempting to
    access the database
  * Have architectures control their march values in the architecture
    config files.
  * add Arch.getCurrentArch() to get the major architecture that is in use
    during a build

Changes in 0.13.3
  * added ability for a contents log file (makes syncing much easier)
  * file tags weren't used on updates
  * "description update" tag action replaced with "handler update"
    (which gets called when either the tag description or the tag handler gets
    updated)
  * "description preremove" tag action replaced with "handler preremove"
  * sources get committed automatically

Changes in 0.13.2
  * reworked use.py code almost entirely.
  * added /etc/conary/arch directory to contain architecture definition files;
    changed /etc/conary/use files to contain more information about how
    flags are used when building.  Flag definitions are no longer in use.py.
  * fixed buildFlavor so that it affects cooking packages as well as
    determining troves to include when cooking a group
  * changed --noclean to --no-clean to be in line with the rest of the
    options; documented it
  * removed Use.foo and Flags.foo options from conary config files.  Macros.foo
    is still there.  Added --use-flavor option to cvc cook which takes a flavor
    and overrides the build flavor while cooking.
  * groups now take flavor strings to determine the flavor of a trove to
    include, not flag sets.
  * dependencies resolution is flavor sensitive now (and uses flavor
    affinity)
  * added trove version/release number to dependency messages
  * renamed classes and methods in versions.py to match current terminology

Changes in 0.13.1
  * repquery wasn't filtering by flavor properly (exposed by a bug fix
    in 0.13.0)

Changes in 0.13.0
  * removed importrpm.py
  * diffs between a file object that has a non-empty provides or requires
    to a file object that has an empty provides or requires are now properly
    generated and applied.
  * added checks to validate merged file objects against the fileIds
    in the changeset
  * implemented shadows
  * framework for redirects in place
  * removed (unused) parentId field from Branches repository table

Changes in 0.12.5
  * reworked dependency resolution a bit for a big speedup in the server
  * moved destdir to %(builddir)s/_ROOT_
  * made macros.destdir available during the unpacking of sources
  * source commands (r.addAction, etc.), if given absolute paths for
    their dir keywords, will perform their actions in the destdir instead
    of the builddir
  * most build commands (r.Make, r.Create, etc.), will work in either builddir
    or destdir, depending on whether they are given relative or absolute
    paths
  * add dir keyword for r.Run
  * include /usr/bin/rpm2cpio

Changes in 0.12.4
  * set more arch flags for x86 and x86_64
  * troves can have multiple instruction set flavors now
  * flipped around use: and is: sections of flavor strings
  * Version and Branch object completely separated

Changes in 0.12.3
  * conary verify updated to new API so that it works again
  * conary q (with no arguments) works again

Changes in 0.12.2
  * added getTroveVersionsByBranch
  * make better use of _mergeQueryResults
  * moved version affinity into findTrove from ConaryClient
  * fixed branch affinity so that it's actually branch affinity instead of
    label affinity
  * rdiff changes for 0.12.0 broke negative numbers for oldVersion
  * rdiff diff'd based on label instead of branch
  * update has flavor affinity now
  * flavors can now be specified on the command line for update, erase
    repquery, and query
  * unspecified flavor flags got scores of zero, which was wrong
  * added python code for flavor scoring (useful for the client)
  * repository queries didn't work properly when looking for multiple flavors
    of a single version
  * fix for updating multiple flavors of a single version of a trove
    simultaneously
  * reworked getTroveVersionList and getAllTroveVersions for per-trove
    flavor filtering

Changes in 0.12.1
  * repquery and query always showed dependency information
  * getTroveLeavesByBranch did extra demarshalling of the flavor
  * repquery didn't deal with nonexistant troves well
  * dependency failures on erase didn't reassemble dependency flags properly
  * fixed bug in dependency sets creation which caused dependency flags
    to get mangled
  * added a check to prevent mangled flags from getting committed

Changes in 0.12.0
  * document config command, and display supplied macro/use/arch information
    in output
  * repository acl's work for almost everything
  * anonymous access must be explicitly enabled by creating an acl for
    user 'anonymous' with password 'anonymous'
  * server side flavor scoring used
  * queries reworked for flavor matching

Changes in 0.11.10.1
  * move to python2.4
  * repository caching (which isn't used yet) didn't track the recurse flag

Changes in 0.11.10
  * changed flavor tracking when loadRecipe() is used to only track
    flavors in loaded recipes that are superclasses of the recipe
    class in the loading recipe.  (e.g. loading python.recipe to get
    the distribution python version will not add all of the python
    recipe's flavor information to the loading recipe class, as long
    as the loading recipe does not subclass the Python class.)
  * add conary verify command for comparing the local system's state to
    the state it was in at install time
  * when a trove is installed for the first time, it comes from a single
    repository
  * didn't handle file types changing on update
  * fixed problem assigning depNums
  * components disappearing from troves caused problems in relative changesets
  * files moving from removed troves in changesets caused update to fail

Changes in 0.11.9
  * change the order of permissions setting (chmod after chown)
    because some versions of the Linux kernel remove setuid/gid bits
    when setting ownership to root

Changes in 0.11.8
  * work around a python bug w/ fdopen() resetting file permissions
  * r.Replace() as an alternative to r.Run("sed -i '...' file")
  * Policy enforcing UTF-8 filenames
  * r.macros.tagdatadir as a standard place to put data just for taghandlers

Changes in 0.11.7
  * changed server.py to take extra config files via --config-file instead
    of as an extra argument
  * extra config files (specified with --config-file) were ignored if they
    didn't exist; issue an error message now
  * Added r.ConsoleHelper() for recipes
  * PAM configuration files shouldn't have paths to modules by default,
    so we remove what used to be the standard path
  * changed repository user authentication to use user groups (currently
    one per user)
  * added password salt
  * restructured repository a bit
  * removed lots of unused code from FilesystemRepository

Changes in 0.11.6
  * branches are created as changesets now instead of as a protocol call
  * merged authdb into primary repository
  * fix for rdiff (broken by flavor rework in 0.11.5)

Changes in 0.11.5
  * Internals reworked to eliminate flavor of None in favor of empty flavor
  * Added (currently unused) code to parse command line flavor specifications
  * static libraries (.a files) get proper flavors now
  * Handle attempts to update already installed troves from absolute
    change sets

Changes in 0.11.4
  * all components built from a single recipe share a common flavor
  * loadRecipe's label= keyword argument can actually take a label
    as well as a hostname

Changes in 0.11.3:
  * optimized a sqlite update statement to use indexed columns
  * added --test to update and erase
  * dependency check didn't handle new components providing the same
    items as old components (broken by 0.11.1 performance enhancements)

Changes in 0.11.2:
  * standalone server was broken by --add-user changes in 0.11.1
  * dependency check no longer allows packages being removed to cause
    dependency failures
  * changed how dependencies are frozen to make the order deterministic
    (so fileId's don't change around)
  * added a database version to the database schema

Changes in 0.11.1:
  * erasing troves enforces dependencies -- this requires a database
    conversion (run the conary-add-filedeps script which fixed the
    conversion to 0.11.0 after updating conary)
  * reworked dependency queries to take advantage of indices for much
    better performance
  * add --add-user to server.py for creating the authdb

Changes in 0.11.0:
  * massive rework of fileId mechanism to allow better flavor support
  * added columns to dependency tables to allow erase dependency checks
    (which are not yet implemented)
  * enabled trove requirements
  * added cvcdesc and the 'describe' command to cvc to generate
    and use metadata XML files.
  * getMetadata follows the branch structure up until it finds metadata
    for the trove.
  * changed getFileContents() to not need trove name or trove version
  * byte-compiled emacs lisp files are transient, like python
    byte-compiled files
  * addSource recipe action now can take a mode= keyword argument
  * cook now enforces having no dash characters in version numbers
  * files are explicitly disallowed from depending on groups, packages,
    or filesets; the only trove dependency that a file or component
    can have is on a component.  Only filesets can depend on filesets.

Changes in 0.10.11:
  * reworked how absolute change sets get converted to relative change
    sets for better efficiency
  * chained dependency resolution caused duplicate troves in the final
    changeset (and a lot of extra work)
  * added --config to stand alone repository
  * source flag wasn't set properly for newly added non-text files
  * flavor information is now printed by "conary query" when multiple
    flavors of the same version of a trove are installed
  * "conary repquery --all" flavor output formatting has been improved

Changes in 0.10.10:
  * changesets get downloaded into a single (meta) file instead of lots
    of separate files
  * fix several bugs in the freshmeat record parsing
  * add a freshmeat project page URL to the metadata by default
  * add a "source" item to metadata
  * the server implementation of troveNames() was horrible
  * enabled file dependencies

Changes in 0.10.9:
  * fixed some authorization issues with the xml-rpc repository interface
  * the web management interface for the repository works now; see
    http://wiki.specifix.com/ConaryConversion for information on how
    to convert existing authdb's to support this
  * fixed a bug with distributed branches
  * users can change their passwords through the repository's web api
  * improved logic apachehooks use to find top level URL
  * fixed bug in server side repository resolution

Changes in 0.10.8:
  * changed iterAllTroves() to troveNames(), which searches a single
    label instead of the whole repository
  * reworked http authentication and CGI request handling and added the
    beginning of a web interface to the repository for user administration
    and metadata management.

Changes in 0.10.7:
  * dependency sql code reworked to use temporary tables
  * new macro called "servicedir" that defines the location for
    service data (%(servicedir)s{ftp,http,etc})
  * added busy wait to sqlite3 python binding when executing SQL
    statements on a busy database

Changes in 0.10.6:
  * Lots of bug fixes for distributed branching
  * Some code rearrangement
  * The start of metadata support code is now included

Changes in 0.10.5:
  * The local database is used for fetching file information (but not
    contents), reducing network traffic when creating change sets
    across repositories.
  * Update works on troves which were locally cooked or emerged
  * Internal changes to move toward getFileContents() working in batches
    rather then on individual files. For now this prevents the repository
    from copying files between the content store and /tmp to serve them.
  * Arch flags are now included in flavors
  * Emerge follows the installLabelPath instead of the buildLabel
  * The extended debugger has been extensively modified
  * Conary can handle filenames with '%' in them
  * The showcs command has been significantly updated, and the updates
    are documented in the conary.1 manpage
  * New syntax for flags distinguishes requirements from "optimized for";
    see http://wiki.specifix.com/FlavorRankSpec

Changes in 0.10.4:
  * Bug fixes for updating from absolute change sets (which basically
    just didn't work for troves which contained config files)
  * Bug fixes for distributed branching
  * The database is used for fetching trove information (but not yet
    file information) when the client constructs change sets across
    distributed branches
  * various other bug fixes

Changes in 0.10.3:
  * this version introduces changes to the network protocol for
    obtaining file contents and changeset generation. The client
    protocol version number has increased, so version 0.10.3 can only
    communicate with servers running the server from 0.10.3. The
    server remains backward compatible with older clients.
  * a warning message is now displayed when the user attempts to
    create a branch that already exists on a trove.
  * the correct trove names are displayed when automatically resolving
    dependencies
  * packages no longer get the union of all the dependency information
    of the components they contain.  This information would have to be
    recalculated if a user installed a package then removed a
    component afterward.
  * a package policy check was added to reject any world-writable
    executable file.
  * r.TagSpec('tagname', exceptions='filter') now overrides a match by
    another r.TagSpec('tagname', 'filter')
  * more changes to metadata interface
  * various other bug fixes and improvements

Changes in 0.10.2:
  * the repository code is now included in the main conary source
    archive
  * "conary showchangeset" produces a more user-friendly output
  * large responses from the repository server are now compressed
  * the protocol for getFileContents() changed to take a fileId
    instead of the file's path.  The repository code can still handle
    old requests, but the client code now requires the latest
    repository code.
  * bug fixes

Changes in 0.10.1:
  * when applying a changeset, dependency failures are resolved by
    querying servers in the installLabelPath
  * troves that satisfy a dependency can automatically be added to a
    transaction.  This behavior is controlled by the "autoResolve"
    variable in conaryrc or the "--resolve" command line option to
    "conary update"
  * dependency resolution is calculated recursively.  To limit the
    recursion depth to check only first order dependencies, a
    "--no-deps-recurse" option has been added to "conary update"
  * "conary repquery" now takes a "--deps" argument, which prints the
    Requires and Provides information for the trove that is being
    queried.
  * changes have been made to the build side of Conary to facilitate
    building recipes that use cross compilers
  * symlinks now get the appropriate ownership set when they are
    restored
  * groups can now specify which flavor of a trove to include
  * repository queries that don't need file information no longer ask
    the repository for files.
  * various bug fixes and cleanups

Changes in 0.10.0:
  * dependency checking is now performed before changesets are
    applied.  This uses new tables in the local system's database.
    If you are using a database created by a version of Conary older
    than 0.10.0, it must be converted before it can be used.  See:
      http://wiki.specifix.com/ConaryConversion
    for details
  * Shared library dependency information in changesets is now stored
    in a different format.  This means that repositories that use old
    versions of Conary will be unable to give valid changesets to
    Conary 0.10.0 or later.  Therefore, the protocol version number has
    been increased.
  * --no-deps argument added
  * "cvc co" is now a synonym for "cvc checkout"

Changes in 0.9.6:
  * dependency enforcement infrastructure has been added (the code is
    currently disabled)
  * bug fixes
    * applying a changeset that un-hardlinks files now works
    * conary rq [trove] --info now works
    * running "conary update [trove]" when more than one flavor of
      [trove] exists no longer tracebacks.  It installs both flavors
      of the trove (which is not always the desired behavior - this
      will be addressed later)
    * only files with execute permissions are checked for
      #!interpreter.
    * "conary rq [trove] --ls" no longer tracebacks when [trove]
      exists in more than one repository
    * various code cleanups

Changes in 0.9.5:
  * new methods for specifying dependency information in recipes have
    been added
  * #! interpreters get added as dependencies
  * local flag overrides now work
  * cvc cook --resume can be used multiple times
  * conary invokes gpg with --no-options to avoid creating or using
    ~/.gnupg

Changes in 0.9.4:
  * fixes to cvc annotate
  * flavors and dependency generation code has been refactored to be
    policy based
  * better error handling when invalid changeset files are given to
    conary
  * minor code cleanups

Changes in 0.9.3:
  * New "cvc annotate" feature
  * Man page updates
  * Changesets which remove a file and replace it now apply correctly.
  * "cvc update" no longer complains and fails to update the CONARY
    state file properly  when ownerships differ
  * FileId generation now looks for previous versions of all the
    packages that have just been created, not just the name of the
    recipe.
  * Cooking as root is no longer allowed
  * Miscellaneous bug fixes.

Changes in 0.9.2:
 * Bug fixes:
   * Applying changesets that have more than one hard link groups
     sharing the same contents sha1 works now.
 * Build changes:
   * Recipes can now create new top level packages.

Changes in 0.9.1:
 * Bug fixes:
   * Applying a changeset that has a flavor which is a superset of the
     previous version's flavor now works.
   * Parsing optional arguments to command line parameters that appear as
     the last thing on the command line works
 * Build changes:
   * Package policy now checks to ensure that files in /etc/cron.*/*
     are executable
 * Update changes:
   * Conary no longer complains if a transient file has been modified
     on disk but no longer exists in a new version of a component.
 * Miscellaneous changes:
   * Version 1 on-disk changeset file support has been removed.

Changes in 0.9.0:
 * protocol versioning is much more granular now allowing for backwards
   compatible versions of functions
 * changeset command now generates changesets for multiple troves spread
   across multiple repositories
 * change sets are transferred as a set of independent change sets now
   (laying the groundwork for repository change set caching, with which
   this version will work just fine)

Changes in 0.8.3:
 * Man page updates.
 * The "conary query" command now accepts multiple arguments for
   troves and paths
 * Fixed "conary erase" command which was broken in 0.8.2

Changes in 0.8.2:
 * You can now install multiple troves at once (even a combination of
   changeset files and troves from repositories), and the entire
   action is recorded in a single rollback (this required a change in
   command-line arguments for updating troves).
 * The beginnings of support for searching multiple repositories
 * Miscellaneous code cleanup and bug fixes.

Changes in 0.8.1:
 * The source code has been re-arranged for easier maintenance, and
   conary has been split into two programs: conary and cvc.
 * Better error messages and debugging tracebacks

Changes in 0.8.0:
 * A new changeset format supports hard links but requires staged update.
 * The new changeset format also collapses duplicate contents even
   when hardlinks are not used.
 * By default, rc?.d/{K,S}* symlinks are no longer packaged. The
   chkconfig program is relied on to create them at package
   install/update time. Init scripts are explicitly required to
   support the chkconfig protocol by default
 * Improved error messages
 * Several bug fixes.

Changes in 0.7.7:
 * Extended debugger saves and emails
 * Tracebacks now include arguments and locals
 * More size optimizations were made when applying changesets
 * Applying absolute changesets when a trove is already installed is
   now much more efficient than it was
 * Self-referential symlinks raise a packaging exception.
 * Several bugs fixes.

Changes in 0.7.6:
 * Installation
   * Hardlink handling
   * enhanced debugging capabilities (including saving a debugging
     state file to enable remote debugging)

   * using binary file ids and iterators for significant memory savings
   * and runtime support for the x86.x86_64 sub-architecture
 * Cooking
   * more robust handling of the --resume option
   * policy normalization of where app-defaults files go.

Changes in 0.7.5:
 * Hard links are implemented (but not yet enabled, in order to
   preserve changeset compatibility for now).
 * Several bugs have been fixed for installing and cooking.

Changes in 0.7.4:
 * Fileids are now stored and transmitted in binary rather than
   encoded.
 * Better handling of multiple versions of packages/troves installed
   at the same time
 * Missing file handling improvements
 * Recipe inheritance is now possible between repositories
 * Enhanced Interrupted builds
 * The dynamic tag protocol was slightly modified
 * Added Arch.x86.amd64 and Arch.x86.em64t
 * several bugs fixes

Changes in 0.7.0:
 * sqlite3 is used for the database
 * better handling of multiple packages with the same name installed at once.

Changes in 0.6.6:
 * repository protocol update
 * changeset format update
 * added the ability to resume halted local builds
 * added the ability to easily package build-time tests to run at
   install time to qualify new/changed environments
 * better handling of packaged .pyc/.pyo files
 * better shared library handling
 * improved inline documentation
 * optimizations for both space and time
 * numerous bugfixes
